ChineseCook acts as an originator for memento Food, which cooks a Food Food to. It is a public class that implements Cook. The only method of ChineseCook is cookFood (Food). No methods call cookFood and cookFood calls no methods.

WesternFood acts as a memento, which tos String, which tos String. WesternFood acts as a caretaker for memento Food, which gets Food Type, which tos String. It is a public class that implements Food. The 2 methods of WesternFood are getFoodType (FoodType) and toString (String). No methods call getFoodType and getFoodType calls no methods. No methods call toString and toString calls no methods.

Cook acts as an originator for memento Food, which is inherited by, which cooks a Food Food to. It is a public interface. The only method of Cook is cookFood (Food). No methods call cookFood and cookFood calls no methods.

ChineseFood acts as a caretaker for memento Food, which gets Food Type, which tos String. ChineseFood acts as a memento, which tos String, which tos String. It is a public class that implements Food. The 2 methods of ChineseFood are getFoodType (FoodType) and toString (String). No methods call getFoodType and getFoodType calls no methods. No methods call toString and toString calls no methods.

Application does not have any design pattern.  It is a public class. The 2 methods of Application are main (void) and makeFood (void). No methods call main and main calls only one method : makeFood method of class Application. Only one method ( main method of class Application ) calls makeFood and makeFood calls no methods.

WesternCook acts as an originator for memento Food, which cooks a Food Food to. It is a public class that implements Cook. The only method of WesternCook is cookFood (Food). No methods call cookFood and cookFood calls no methods.

Food acts as a memento, which is inherited by WesternFood, ChineseFood, which gets Food Type. It is a public interface. The only method of Food is getFoodType (FoodType). No methods call getFoodType and getFoodType calls no methods.

