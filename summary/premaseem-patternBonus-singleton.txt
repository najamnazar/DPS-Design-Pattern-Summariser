
memento:
SingletonDoubleLock acts as a caretaker for memento SingletonDoubleLock, which gets Instance, which does Counting. SingletonDoubleLock acts as an originator for memento SingletonDoubleLock, which gets a SingletonDoubleLock Instance to. SingletonDoubleLock acts as a memento, which does Counting, which does Counting. It is a public class. The 2 methods of SingletonDoubleLock are getInstance (SingletonDoubleLock) and doCounting (void). No methods call getInstance and getInstance calls no methods. No methods call doCounting and doCounting calls no methods.

SingletonEagerInstance does not have any design pattern.  It is a public class. The only method of SingletonEagerInstance is doCounting (void). No methods call doCounting and doCounting calls no methods.

ClientForSingletonThreadDoubleLock does not have any design pattern.  It is a public class. The only method of ClientForSingletonThreadDoubleLock is main (void). No methods call main and main calls no methods.

ClientForSingletonLazyInstance does not have any design pattern.  It is a public class. The only method of ClientForSingletonLazyInstance is main (void). No methods call main and main calls no methods.

ClientForSingletonThreadIssue does not have any design pattern.  It is a public class. The only method of ClientForSingletonThreadIssue is main (void). No methods call main and main calls no methods.

ClientForSingletonEagerInstance does not have any design pattern.  It is a public class. The only method of ClientForSingletonEagerInstance is main (void). No methods call main and main calls no methods.

SingletonThreadissueInstance acts as a caretaker for memento SingletonThreadissueInstance, which gets Instance, which does Counting. SingletonThreadissueInstance acts as a memento, which does Counting, which does Counting. SingletonThreadissueInstance acts as an originator for memento SingletonThreadissueInstance, which gets a SingletonThreadissueInstance Instance to. It is a public class. The 2 methods of SingletonThreadissueInstance are getInstance (SingletonThreadissueInstance) and doCounting (void). No methods call getInstance and getInstance calls no methods. No methods call doCounting and doCounting calls no methods.

SingletonSyncInstance acts as an originator for memento SingletonSyncInstance, which gets a SingletonSyncInstance Instance to. SingletonSyncInstance acts as a caretaker for memento SingletonSyncInstance, which gets Instance, which does Counting. SingletonSyncInstance acts as a memento, which does Counting, which does Counting. It is a public class. The 2 methods of SingletonSyncInstance are getInstance (SingletonSyncInstance) and doCounting (void). No methods call getInstance and getInstance calls no methods. No methods call doCounting and doCounting calls no methods.

ClientForSingletonThreadSyncIssue does not have any design pattern.  It is a public class. The only method of ClientForSingletonThreadSyncIssue is main (void). No methods call main and main calls no methods.

SingletonLazyInstance acts as a caretaker for memento SingletonLazyInstance, which gets Instance, which does Counting. SingletonLazyInstance acts as a memento, which does Counting, which does Counting. SingletonLazyInstance acts as an originator for memento SingletonLazyInstance, which gets a SingletonLazyInstance Instance to. It is a public class. The 2 methods of SingletonLazyInstance are getInstance (SingletonLazyInstance) and doCounting (void). No methods call getInstance and getInstance calls no methods. No methods call doCounting and doCounting calls no methods.

