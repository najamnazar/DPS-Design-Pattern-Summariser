ThreadSafeDoubleCheckLocking acts as an originator for memento ThreadSafeDoubleCheckLocking, which gets a ThreadSafeDoubleCheckLocking Instance to. ThreadSafeDoubleCheckLocking acts as a memento, which gets Instance. ThreadSafeDoubleCheckLocking acts as a caretaker for memento ThreadSafeDoubleCheckLocking, which gets Instance. It is a public final class. The only method of ThreadSafeDoubleCheckLocking is getInstance (ThreadSafeDoubleCheckLocking). No methods call getInstance and getInstance calls no methods.

LazyInitializationDirector acts as a caretaker for memento LazyInitializationDirector, which gets Instance. LazyInitializationDirector acts as a caretaker for memento Director, which gets Instance. LazyInitializationDirector acts as a memento, which gets Instance. LazyInitializationDirector acts as an originator for memento LazyInitializationDirector, which gets a LazyInitializationDirector Instance to. It is a public final class. The only method of LazyInitializationDirector is getInstance (LazyInitializationDirector). No methods call getInstance and getInstance calls no methods.

Director acts as a caretaker for memento Director, which gets Instance. Director acts as an originator for memento Director, which gets a Director Instance to. Director acts as a memento, which gets Instance. It is a public final class. The only method of Director is getInstance (Director). No methods call getInstance and getInstance calls no methods.

ThreadSafeLazyLoadDirector acts as a caretaker for memento ThreadSafeLazyLoadDirector, which gets Instance. ThreadSafeLazyLoadDirector acts as a caretaker for memento Director, which gets Instance. ThreadSafeLazyLoadDirector acts as an originator for memento ThreadSafeLazyLoadDirector, which gets a ThreadSafeLazyLoadDirector Instance to. ThreadSafeLazyLoadDirector acts as a memento, which gets Instance. It is a public final class. The only method of ThreadSafeLazyLoadDirector is getInstance (ThreadSafeLazyLoadDirector). No methods call getInstance and getInstance calls no methods.

Application does not have any design pattern.  It is a public class. The only method of Application is main (void). No methods call main and main calls no methods.

