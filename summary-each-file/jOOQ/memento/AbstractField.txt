AbstractField acts as a caretaker for memento Clause, which accepts Context<?> parameter of ctx, which clauseses Context<?> parameter of ctx, which is Possibly Nullable, which projections Size, which parenthesiseds Context<?> parameter of ctx, which fields Record parameter of record, which gets Record parameter of record, which gets Record parameter of record Value, which originals Record parameter of record, which changes Record parameter of record, which resets Record parameter of record, which froms Record parameter of record, which converts Binding<T, parameter of U>, which converts Converter<T, parameter of U>, which converts Class<U> parameter of toType, Function<? parameter of super, Function<? parameter of super, which converts Class<U> parameter of toType, Function<? parameter of super From, which converts Function<? parameter of super From, which converts Class<U> parameter of toType, Function<? parameter of super To, which converts Function<? parameter of super To, which ases String parameter of alias, which ases Name parameter of alias, which ases Field<?> parameter of otherField, which ases Function<? parameter of super, which casts Field<Z> parameter of field, which casts DataType<Z> parameter of type, which casts Class<Z> parameter of type, which coerces Field<Z> parameter of field, which coerces DataType<Z> parameter of type, which coerces Class<Z> parameter of type, which asces, which desces, which sorts Default, which sorts SortOrder parameter of order, which sorts Collection<T> parameter of sortList Asc, which sorts T... parameter of sortList Asc, which sorts Collection<T> parameter of sortList Desc, which sorts T... parameter of sortList Desc, which sorts Map<T, parameter of Z>, which eqs T parameter of arg2, which eqs Select<? parameter of extends, which eqs Field<T> parameter of arg2, which equals T parameter of arg2, which equals Select<? parameter of extends, which equals Field<T> parameter of arg2, which ges T parameter of arg2, which ges Select<? parameter of extends, which ges Field<T> parameter of arg2, which greaters T parameter of arg2 Or Equal, which greaters Select<? parameter of extends Or Equal, which greaters Field<T> parameter of arg2 Or Equal, which greaters T parameter of arg2 Than, which greaters Select<? parameter of extends Than, which greaters Field<T> parameter of arg2 Than, which gts T parameter of arg2, which gts Select<? parameter of extends, which gts Field<T> parameter of arg2, which ins Select<? parameter of extends, which is T parameter of arg2 Distinct From, which is Select<? parameter of extends Distinct From, which is Field<T> parameter of arg2 Distinct From, which is Null, which is T parameter of arg2 Not Distinct From, which is Select<? parameter of extends Not Distinct From, which is Field<T> parameter of arg2 Not Distinct From, which is Not Null, which les T parameter of arg2, which les Select<? parameter of extends, which les Field<T> parameter of arg2, which lesses T parameter of arg2 Or Equal, which lesses Select<? parameter of extends Or Equal, which lesses Field<T> parameter of arg2 Or Equal, which lesses T parameter of arg2 Than, which lesses Select<? parameter of extends Than, which lesses Field<T> parameter of arg2 Than, which likes String parameter of pattern, which likes Field<String> parameter of pattern, which likes String parameter of pattern Ignore Case, which likes Field<String> parameter of pattern Ignore Case, which lts T parameter of arg2, which lts Select<? parameter of extends, which lts Field<T> parameter of arg2, which nes T parameter of arg2, which nes Select<? parameter of extends, which nes Field<T> parameter of arg2, which nots T parameter of arg2 Equal, which nots Select<? parameter of extends Equal, which nots Field<T> parameter of arg2 Equal, which nots Select<? parameter of extends In, which nots String parameter of pattern Like, which nots Field<String> parameter of pattern Like, which nots String parameter of pattern Like Ignore Case, which nots Field<String> parameter of pattern Like Ignore Case, which nots String parameter of pattern Similar To, which nots Field<String> parameter of pattern Similar To, which similars String parameter of pattern To, which similars Field<String> parameter of pattern To, which is Document, which is Not Document, which is Json, which is Not Json, which bites T parameter of arg2 And, which bites Field<T> parameter of arg2 And, which bites T parameter of arg2 Nand, which bites Field<T> parameter of arg2 Nand, which bites T parameter of arg2 Nor, which bites Field<T> parameter of arg2 Nor, which bites Not, which bites T parameter of arg2 Or, which bites Field<T> parameter of arg2 Or, which bites T parameter of arg2 XNor, which bites Field<T> parameter of arg2 XNor, which bites T parameter of arg2 Xor, which bites Field<T> parameter of arg2 Xor, which mods Number parameter of divisor, which mods Field<? parameter of extends, which modulos Number parameter of divisor, which modulos Field<? parameter of extends, which rems Number parameter of divisor, which rems Field<? parameter of extends, which powers Number parameter of exponent, which powers Field<? parameter of extends, which pows Number parameter of exponent, which pows Field<? parameter of extends, which shls Number parameter of count, which shls Field<? parameter of extends, which shrs Number parameter of count, which shrs Field<? parameter of extends, which contains T parameter of content, which contains Field<T> parameter of content, which contains T parameter of content Ignore Case, which contains Field<T> parameter of content Ignore Case, which ends T parameter of suffix With, which ends Field<T> parameter of suffix With, which ends T parameter of suffix With Ignore Case, which ends Field<T> parameter of suffix With Ignore Case, which starts T parameter of prefix With, which starts Field<T> parameter of prefix With, which starts T parameter of prefix With Ignore Case, which starts Field<T> parameter of prefix With Ignore Case, which negs, which unaries Minus, which unaries Plus, which adds Number parameter of value, which adds Field<?> parameter of value, which subs Number parameter of value, which subs Field<?> parameter of value, which muls Number parameter of value, which muls Field<? parameter of extends, which divs Number parameter of value, which divs Field<? parameter of extends, which pluses Number parameter of value, which pluses Field<?> parameter of value, which subtracts Number parameter of value, which subtracts Field<?> parameter of value, which minuses Number parameter of value, which minuses Field<?> parameter of value, which multiplies Number parameter of value, which multiplies Field<? parameter of extends, which times Number parameter of value, which times Field<? parameter of extends, which divides Number parameter of value, which divides Field<? parameter of extends, which is True, which is False, which similars String parameter of value, char parameter of escape To, which similars Field<String> parameter of field, char parameter of escape To, which nots String parameter of value, char parameter of escape Similar To, which nots Field<String> parameter of field, char parameter of escape Similar To, which likes String parameter of value, char parameter of escape, which likes Field<String> parameter of field, char parameter of escape, which likes QuantifiedSelect<Record1<String>> parameter of query, which likes String parameter of value, char parameter of escape Ignore Case, which likes Field<String> parameter of field, char parameter of escape Ignore Case, which likes String parameter of pattern Regex, which likes Field<String> parameter of pattern Regex, which nots String parameter of value, char parameter of escape Like, which nots Field<String> parameter of field, char parameter of escape Like, which nots QuantifiedSelect<Record1<String>> parameter of query Like, which nots String parameter of value, char parameter of escape Like Ignore Case, which nots Field<String> parameter of field, char parameter of escape Like Ignore Case, which nots String parameter of pattern Like Regex, which nots Field<String> parameter of pattern Like Regex, which nots T parameter of value Contains, which nots Field<T> parameter of value Contains, which nots T parameter of value Contains Ignore Case, which nots Field<T> parameter of value Contains Ignore Case, which is T[] parameter of values Accidental Select, which is T[] parameter of values Accidental Collection, which ins T... parameter of values, which ins Field<?>... parameter of values, which ins Collection<?> parameter of values, which ins Result<? parameter of extends, which nots T... parameter of values In, which nots Field<?>... parameter of values In, which nots Collection<?> parameter of values In, which nots Result<? parameter of extends In, which betweens T parameter of minValue, T parameter of maxValue, which betweens Field<T> parameter of minValue, Field<T> parameter of maxValue, which betweens T parameter of minValue, T parameter of maxValue Symmetric, which betweens Field<T> parameter of minValue, Field<T> parameter of maxValue Symmetric, which nots T parameter of minValue, T parameter of maxValue Between, which nots Field<T> parameter of minValue, Field<T> parameter of maxValue Between, which nots T parameter of minValue, T parameter of maxValue Between Symmetric, which nots Field<T> parameter of minValue, Field<T> parameter of maxValue Between Symmetric, which betweens T parameter of minValue, which betweens Field<T> parameter of minValue, which betweens T parameter of minValue Symmetric, which betweens Field<T> parameter of minValue Symmetric, which nots T parameter of minValue Between, which nots Field<T> parameter of minValue Between, which nots T parameter of minValue Between Symmetric, which nots Field<T> parameter of minValue Between Symmetric, which eqs QuantifiedSelect<? parameter of extends, which nes QuantifiedSelect<? parameter of extends, which lts QuantifiedSelect<? parameter of extends, which les QuantifiedSelect<? parameter of extends, which gts QuantifiedSelect<? parameter of extends, which ges QuantifiedSelect<? parameter of extends, which equals String parameter of value Ignore Case, which equals Field<String> parameter of value Ignore Case, which equals QuantifiedSelect<? parameter of extends, which nots String parameter of value Equal Ignore Case, which nots Field<String> parameter of value Equal Ignore Case, which nots QuantifiedSelect<? parameter of extends Equal, which lesses QuantifiedSelect<? parameter of extends Than, which lesses QuantifiedSelect<? parameter of extends Or Equal, which greaters QuantifiedSelect<? parameter of extends Than, which greaters QuantifiedSelect<? parameter of extends Or Equal, which compares Comparator parameter of comparator, T parameter of value, which compares Comparator parameter of comparator, Field<T> parameter of field, which compares Comparator parameter of comparator, Select<? parameter of extends, which compares Comparator parameter of comparator, QuantifiedSelect<? parameter of extends, which numerices, which varchars, which dates, which signs, which abses, which rounds, which rounds int parameter of decimals, which floors, which ceils, which sqrts, which exps, which lns, which logs int parameter of base, which acoses, which asins, which atans, which atan2s Number parameter of y, which atan2s Field<? parameter of extends, which coses, which sins, which tans, which cots, which sinhes, which coshes, which tanhes, which cothes, which degs, which rads, which counts, which counts Distinct, which maxes, which mins, which sums, which avgs, which medians, which stddevs Pop, which stddevs Samp, which vars Pop, which vars Samp, which counts Over, which maxes Over, which mins Over, which sums Over, which avgs Over, which firsts Value, which lasts Value, which leads, which leads int parameter of offset, which leads int parameter of offset, T parameter of defaultValue, which leads int parameter of offset, Field<T> parameter of defaultValue, which lags, which lags int parameter of offset, which lags int parameter of offset, T parameter of defaultValue, which lags int parameter of offset, Field<T> parameter of defaultValue, which stddevs Pop Over, which stddevs Samp Over, which vars Pop Over, which vars Samp Over, which uppers, which lowers, which trims, which rtrims, which ltrims, which rpads Field<? parameter of extends, which rpads int parameter of length, which rpads Field<? parameter of extends, Field<String> parameter of character, which rpads int parameter of length, char parameter of character, which lpads Field<? parameter of extends, which lpads int parameter of length, which lpads Field<? parameter of extends, Field<String> parameter of character, which lpads int parameter of length, char parameter of character, which repeats Number parameter of count, which repeats Field<? parameter of extends, which replaces Field<String> parameter of search, which replaces String parameter of search, which replaces Field<String> parameter of search, Field<String> parameter of replace, which replaces String parameter of search, String parameter of replace, which positions String parameter of search, which positions Field<String> parameter of search, which asciis, which collates String parameter of collation, which collates Name parameter of collation, which collates Collation parameter of collation, which concats Field<?>... parameter of fields, which concats String... parameter of values, which concats char... parameter of values, which substrings int parameter of startingPosition, which substrings Field<? parameter of extends, which substrings int parameter of startingPosition, int parameter of length, which substrings Field<? parameter of extends, Field<? parameter of extends, which lengthes, which chars Length, which bites Length, which octets Length, which extracts DatePart parameter of datePart, which greatests T... parameter of others, which greatests Field<?>... parameter of others, which leasts T... parameter of others, which leasts Field<?>... parameter of others, which nvls T parameter of defaultValue, which nvls Field<T> parameter of defaultValue, which nvl2s Z parameter of valueIfNotNull, Z parameter of valueIfNull, which nvl2s Field<Z> parameter of valueIfNotNull, Field<Z> parameter of valueIfNull, which nullifs T parameter of other, which nullifs Field<T> parameter of other, which decodes T parameter of search, Z parameter of result, which decodes T parameter of search, Z parameter of result, Object... parameter of more, which decodes Field<T> parameter of search, Field<Z> parameter of result, which decodes Field<T> parameter of search, Field<Z> parameter of result, Field<?>... parameter of more, which coalesces T parameter of option, T... parameter of options, which coalesces Field<T> parameter of option, Field<?>... parameter of options.
