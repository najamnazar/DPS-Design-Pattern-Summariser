QOM acts as a caretaker for memento Keyword, which $commons Table Expressions, which $recursives, which $names, which $valueses, which $nameses, which $ifs Exists, which $cascades, which $ifs Not Exists, which $ors Replace, which $views, which $fieldses, which $queries, which $fieldses, which $fieldses, which $fieldses, which $referenceses, which $conditions, which $tables, which $aliases, which $results Option, which $queries, which $tableses, which $froms, which $tos, which $steps, which $symmetrices, which $fields, which $lists, which $fields, which $lists, which $searches, which $patterns, which $fields, which $dates Part, which $fields, which $fields, which $fields, which $fields, which $rows, which $tables, which $fields, which $fields, which $rows, which $fields, which $distincts, which $fields, which $fields, which $ons Null, which $returnings, which $entries, which $ons Null, which $returnings, which $tables, which $distincts, which $windows Specification, which $windows Definition, which $tileses, which $fields, which $offsets, which $defaults Value, which $nulls Treatment, which $fields, which $offsets, which $defaults Value, which $nulls Treatment, which $fields, which $nulls Treatment, which $fields, which $nulls Treatment, which $fields, which $froms First Or Last, which $nulls Treatment, which $fields, which $aliases, which $argses, which $fields, which $fields, which $fields, which $collations, which $elementses, which $selects, which $tables, which $values, which $ifs Not Null, which $ifs If Null, which $conditions, which $ifs True, which $ifs False, which $minuends, which $subtrahends, which $fields, which $styles, which $xpathes, which $passings, which $passings Mechanism, which $elements Name, which $attributeses, which $contents, which $xpathes, which $passings, which $passings Mechanism, which $contents, which $documents Or Content, which $databases, which $ifs Exists, which $renames To, which $databases Catalog parameter of database, which $ifs boolean parameter of ifExists Exists, which $renames Catalog parameter of renameTo To, which $domains, which $ifs Exists, which $adds Constraint, which $drops Constraint, which $drops Constraint If Exists, which $renames To, which $renames Constraint, which $renames Constraint If Exists, which $sets Default, which $drops Default, which $sets Not Null, which $drops Not Null, which $cascades, which $renames Constraint To, which $domains Domain<T> parameter of domain, which $ifs boolean parameter of ifExists Exists, which $adds Constraint parameter of addConstraint Constraint, which $drops Constraint parameter of dropConstraint Constraint, which $drops boolean parameter of dropConstraintIfExists Constraint If Exists, which $renames Domain<?> parameter of renameTo To, which $renames Constraint parameter of renameConstraint Constraint, which $renames boolean parameter of renameConstraintIfExists Constraint If Exists, which $sets Field<T> parameter of setDefault Default, which $drops boolean parameter of dropDefault Default, which $sets boolean parameter of setNotNull Not Null, which $drops boolean parameter of dropNotNull Not Null, which $cascades Cascade parameter of cascade, which $renames Constraint parameter of renameConstraintTo Constraint To, which $indexes, which $ifs Exists, which $ons, which $renames To, which $indexes Index parameter of index, which $ifs boolean parameter of ifExists Exists, which $ons Table<?> parameter of on, which $renames Index parameter of renameTo To, which $schemas, which $ifs Exists, which $renames To, which $schemas Schema parameter of schema, which $ifs boolean parameter of ifExists Exists, which $renames Schema parameter of renameTo To, which $sequences, which $ifs Exists, which $renames To, which $restarts, which $restarts With, which $starts With, which $increments By, which $minvalues, which $nos Minvalue, which $maxvalues, which $nos Maxvalue, which $cycles, which $caches, which $nos Cache, which $sequences Sequence<T> parameter of sequence, which $ifs boolean parameter of ifExists Exists, which $renames Sequence<?> parameter of renameTo To, which $restarts boolean parameter of restart, which $restarts Field<T> parameter of restartWith With, which $starts Field<T> parameter of startWith With, which $increments Field<T> parameter of incrementBy By, which $minvalues Field<T> parameter of minvalue, which $nos boolean parameter of noMinvalue Minvalue, which $maxvalues Field<T> parameter of maxvalue, which $nos boolean parameter of noMaxvalue Maxvalue, which $cycles CycleOption parameter of cycle, which $caches Field<T> parameter of cache, which $nos boolean parameter of noCache Cache, which $types, which $renames To, which $sets Schema, which $adds Value, which $renames Value, which $renames Value To, which $types Name parameter of type, which $renames Name parameter of renameTo To, which $sets Schema parameter of setSchema Schema, which $adds Field<String> parameter of addValue Value, which $renames Field<String> parameter of renameValue Value, which $renames Field<String> parameter of renameValueTo Value To, which $views, which $ifs Exists, which $comments, which $renames To, which $views Table<?> parameter of view, which $ifs boolean parameter of ifExists Exists, which $comments Comment parameter of comment, which $renames Table<?> parameter of renameTo To, which $tables, which $ises View, which $fields, which $comments, which $tables Table<?> parameter of table, which $ises boolean parameter of isView View, which $fields Field<?> parameter of field, which $comments Comment parameter of comment, which $databases, which $ifs Not Exists, which $databases Catalog parameter of database, which $ifs boolean parameter of ifNotExists Not Exists, which $domains, which $ifs Not Exists, which $datas Type, which $default_s, which $constraintses, which $domains Domain<?> parameter of domain, which $ifs boolean parameter of ifNotExists Not Exists, which $datas DataType<T> parameter of dataType Type, which $default_s Field<T> parameter of default_, which $constraintses Collection<? parameter of extends, which $uniques, which $indexes, which $ifs Not Exists, which $tables, which $ons, which $includes, which $wheres, which $excludes Null Keys, which $uniques boolean parameter of unique, which $indexes Index parameter of index, which $ifs boolean parameter of ifNotExists Not Exists, which $tables Table<?> parameter of table, which $ons Collection<? parameter of extends, which $includes Collection<? parameter of extends, which $wheres Condition parameter of where, which $excludes boolean parameter of excludeNullKeys Null Keys, which $tables, which $temporaries, which $ifs Not Exists, which $tables Elements, which $selects, which $withes Data, which $ons Commit, which $comments, which $storages, which $tables Table<?> parameter of table, which $temporaries boolean parameter of temporary, which $ifs boolean parameter of ifNotExists Not Exists, which $tables Collection<? parameter of extends Elements, which $selects Select<?> parameter of select, which $withes WithOrWithoutData parameter of withData Data, which $ons TableCommitAction parameter of onCommit Commit, which $comments Comment parameter of comment, which $storages SQL parameter of storage, which $schemas, which $ifs Not Exists, which $schemas Schema parameter of schema, which $ifs boolean parameter of ifNotExists Not Exists, which $sequences, which $ifs Not Exists, which $starts With, which $increments By, which $minvalues, which $nos Minvalue, which $maxvalues, which $nos Maxvalue, which $cycles, which $caches, which $nos Cache, which $sequences Sequence<?> parameter of sequence, which $ifs boolean parameter of ifNotExists Not Exists, which $starts Field<? parameter of extends With, which $increments Field<? parameter of extends By, which $minvalues Field<? parameter of extends, which $nos boolean parameter of noMinvalue Minvalue, which $maxvalues Field<? parameter of extends, which $nos boolean parameter of noMaxvalue Maxvalue, which $cycles CycleOption parameter of cycle, which $caches Field<? parameter of extends, which $nos boolean parameter of noCache Cache, which $databases, which $ifs Exists, which $databases Catalog parameter of database, which $ifs boolean parameter of ifExists Exists, which $domains, which $ifs Exists, which $cascades, which $domains Domain<?> parameter of domain, which $ifs boolean parameter of ifExists Exists, which $cascades Cascade parameter of cascade, which $indexes, which $ifs Exists, which $ons, which $cascades, which $indexes Index parameter of index, which $ifs boolean parameter of ifExists Exists, which $ons Table<?> parameter of on, which $cascades Cascade parameter of cascade, which $schemas, which $ifs Exists, which $cascades, which $schemas Schema parameter of schema, which $ifs boolean parameter of ifExists Exists, which $cascades Cascade parameter of cascade, which $sequences, which $ifs Exists, which $sequences Sequence<?> parameter of sequence, which $ifs boolean parameter of ifExists Exists, which $temporaries, which $tables, which $ifs Exists, which $cascades, which $temporaries boolean parameter of temporary, which $tables Table<?> parameter of table, which $ifs boolean parameter of ifExists Exists, which $cascades Cascade parameter of cascade, which $views, which $ifs Exists, which $views Table<?> parameter of view, which $ifs boolean parameter of ifExists Exists, which $privilegeses, which $ons, which $tos, which $tos Public, which $withes Grant Option, which $privilegeses Collection<? parameter of extends, which $ons Table<?> parameter of on, which $tos Role parameter of to, which $tos boolean parameter of toPublic Public, which $withes boolean parameter of withGrantOption Grant Option, which $privilegeses, which $grants Option For, which $ons, which $froms, which $froms Public, which $privilegeses Collection<? parameter of extends, which $grants boolean parameter of grantOptionFor Option For, which $ons Table<?> parameter of on, which $froms Role parameter of from, which $froms boolean parameter of fromPublic Public, which $names, which $values, which $locals, which $names Name parameter of name, which $values Param<?> parameter of value, which $locals boolean parameter of local, which $catalogs, which $catalogs Catalog parameter of catalog, which $schemas, which $schemas Schema parameter of schema, which $tables, which $restarts Identity, which $cascades, which $tables Table<R> parameter of table, which $restarts IdentityRestartOption parameter of restartIdentity Identity, which $cascades Cascade parameter of cascade, which $queries, which $queries Select<?> parameter of query, which $converses, which $converses, which $fields, which $fields, which $converses, which $values, which $patterns, which $escapes, which $values, which $patterns, which $escapes, which $converses, which $conditions, which $fields, which $values, which $patterns, which $escapes, which $values, which $patterns, which $escapes, which $values, which $patterns, which $escapes, which $values, which $patterns, which $escapes, which $queries, which $queries Select<?> parameter of query, which $fields, which $fields, which $fields, which $fields, which $fields, which $fields Field<T> parameter of field, which $tables, which $values, which $values Field<T> parameter of value, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $xes, which $ys, which $xes Field<? parameter of extends, which $ys Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<T> parameter of value, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $radianses, which $radianses Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<T> parameter of value, which $values, which $values Field<? parameter of extends, which $values, which $bases, which $values Field<? parameter of extends, which $bases Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $dividends, which $divisors, which $bases, which $exponents, which $degreeses, which $degreeses Field<? parameter of extends, which $values, which $decimalses, which $values Field<T> parameter of value, which $decimalses Field<Integer> parameter of decimals, which $values, which $counts, which $values, which $counts, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $values Field<T> parameter of value, which $values, which $values Field<? parameter of extends, which $values, which $values Field<? parameter of extends, which $values, which $decimalses, which $values Field<T> parameter of value, which $decimalses Field<Integer> parameter of decimals, which $fields, which $lows, which $highes, which $bucketses, which $fields Field<T> parameter of field, which $lows Field<T> parameter of low, which $highes Field<T> parameter of high, which $bucketses Field<Integer> parameter of buckets, which $strings, which $strings Field<String> parameter of string, which $strings, which $strings Field<String> parameter of string, which $strings, which $strings Field<String> parameter of string, which $values, which $values Field<? parameter of extends, which $values, which $contents, which $values, which $contents, which $values, which $values Field<? parameter of extends, which $strings, which $suffixes, which $strings, which $suffixes, which $strings, which $lengthes, which $strings Field<String> parameter of string, which $lengthes Field<? parameter of extends, which $strings, which $strings Field<String> parameter of string, which $strings, which $lengthes, which $characters, which $strings Field<String> parameter of string, which $lengthes Field<? parameter of extends, which $characters Field<String> parameter of character, which $strings, which $characterses, which $strings Field<String> parameter of string, which $characterses Field<String> parameter of characters, which $strings, which $strings Field<String> parameter of string, which $strings, which $strings Field<String> parameter of string, which $ins, which $placings, which $starts Index, which $lengthes, which $ins Field<String> parameter of in, which $placings Field<String> parameter of placing, which $starts Field<? parameter of extends Index, which $lengthes Field<? parameter of extends, which $ins, which $searches, which $starts Index, which $ins Field<String> parameter of in, which $searches Field<String> parameter of search, which $starts Field<? parameter of extends Index, which $strings, which $counts, which $strings Field<String> parameter of string, which $counts Field<? parameter of extends, which $strings, which $searches, which $replaces, which $strings Field<String> parameter of string, which $searches Field<String> parameter of search, which $replaces Field<String> parameter of replace, which $strings, which $strings Field<String> parameter of string, which $strings, which $lengthes, which $strings Field<String> parameter of string, which $lengthes Field<? parameter of extends, which $strings, which $lengthes, which $characters, which $strings Field<String> parameter of string, which $lengthes Field<? parameter of extends, which $characters Field<String> parameter of character, which $strings, which $characterses, which $strings Field<String> parameter of string, which $characterses Field<String> parameter of characters, which $counts, which $counts Field<? parameter of extends, which $strings, which $delimiters, which $ns, which $strings Field<String> parameter of string, which $delimiters Field<String> parameter of delimiter, which $ns Field<? parameter of extends, which $strings, which $prefixes, which $strings, which $prefixes, which $strings, which $startings Position, which $lengthes, which $strings Field<String> parameter of string, which $startings Field<? parameter of extends Position, which $lengthes Field<? parameter of extends, which $strings, which $delimiters, which $ns, which $strings Field<String> parameter of string, which $delimiters Field<String> parameter of delimiter, which $ns Field<? parameter of extends, which $values, which $formats Mask, which $values Field<?> parameter of value, which $formats Field<String> parameter of formatMask Mask, which $values, which $formats Mask, which $values Field<String> parameter of value, which $formats Field<String> parameter of formatMask Mask, which $values, which $values Field<? parameter of extends, which $values, which $formats Mask, which $values Field<String> parameter of value, which $formats Field<String> parameter of formatMask Mask, which $strings, which $froms, which $tos, which $strings Field<String> parameter of string, which $froms Field<String> parameter of from, which $tos Field<String> parameter of to, which $strings, which $characterses, which $strings Field<String> parameter of string, which $characterses Field<String> parameter of characters, which $strings, which $strings Field<String> parameter of string, which $dates, which $intervals, which $dates Part, which $dates Field<T> parameter of date, which $intervals Field<? parameter of extends, which $dates DatePart parameter of datePart Part, which $arrays, which $arrays Field<? parameter of extends, which $arrays, which $indexes, which $arrays Field<T[]> parameter of array, which $indexes Field<Integer> parameter of index, which $values, which $defaults Value, which $values Field<T> parameter of value, which $defaults Field<T> parameter of defaultValue Value, which $values, which $others, which $values Field<T> parameter of value, which $others Field<T> parameter of other, which $comments, which $comments Field<String> parameter of comment, which $argses, which $argses Collection<? parameter of extends, which $fieldses, which $fieldses Collection<? parameter of extends, which $targets, which $contents, which $targets Name parameter of target, which $contents Field<?> parameter of content, which $contents, which $values, which $types, which $contents boolean parameter of content, which $values Field<XML> parameter of value, which $types DataType<T> parameter of type, which $types, which $fieldses, which $ons Null, which $returnings, which $types DataType<T> parameter of type, which $fieldses Collection<? parameter of extends, which $ons JSONOnNull parameter of onNull Null, which $returnings DataType<?> parameter of returning, which $types, which $entrieses, which $ons Null, which $returnings, which $types DataType<T> parameter of type, which $entrieses Collection<? parameter of extends, which $ons JSONOnNull parameter of onNull Null, which $returnings DataType<?> parameter of returning, which $conditions, which $conditions Condition parameter of condition, which $fields, which $fields Field<Boolean> parameter of field, which $fields, which $fields Field<T> parameter of field, which $fields, which $distincts, which $fields Field<? parameter of extends, which $distincts boolean parameter of distinct, which $values, which $values Field<T> parameter of value, which $values, which $values Field<T> parameter of value, which $values, which $values Field<T> parameter of value, which $values, which $values Field<T> parameter of value, which $values, which $values Field<T> parameter of value, which $values, which $values Field<T> parameter of value, which $conditions, which $conditions Condition parameter of condition, which $conditions, which $conditions Condition parameter of condition, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $fields, which $distincts, which $fields Field<?> parameter of field, which $distincts boolean parameter of distinct, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $fields, which $distincts, which $fields Field<T> parameter of field, which $distincts boolean parameter of distinct, which $fields, which $fields Field<? parameter of extends, which $fields, which $distincts, which $fields Field<T> parameter of field, which $distincts boolean parameter of distinct, which $fields, which $distincts, which $fields Field<? parameter of extends, which $distincts boolean parameter of distinct, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $ys, which $xes, which $ys Field<? parameter of extends, which $xes Field<? parameter of extends, which $fields, which $fields Field<? parameter of extends, which $fields, which $fields Field<? parameter of extends, which $fields, which $distincts, which $fields Field<? parameter of extends, which $distincts boolean parameter of distinct, which $fields, which $fields Field<? parameter of extends, which $fields, which $fields Field<? parameter of extends, which $arg1s, which $arg1s Q1 parameter of newArg1, which $constructors, which $arg1s, which $arg2s, which $arg1s Q1 parameter of newArg1, which $arg2s Q2 parameter of newArg2, which $constructors, which $arg1s, which $arg2s, which $arg3s, which $arg1s Q1 parameter of newArg1, which $arg2s Q2 parameter of newArg2, which $arg3s Q3 parameter of newArg3, which $constructors, which $converses, which $swaps, which $converses, which $delegates, which unmodifiables Q[] parameter of array, which unmodifiables List<Q> parameter of list, which unmodifiables Collection<Q> parameter of collection.
