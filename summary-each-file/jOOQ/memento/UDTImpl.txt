UDTImpl acts as a caretaker for memento Package, which gets Catalog, which gets Schema, which gets Qualified Name, which gets Package, which fieldses Row, which fields0s, which gets Record Type, which is SQLUsable, which is Synthetic, which news Record, which gets Data Type, which accepts Context<?> parameter of ctx, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt Field, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment Field, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Converter<T, parameter of U> Field, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Binding<T, parameter of U> Field, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Converter<X, parameter of U>, Binding<T, parameter of X> Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Converter<T, parameter of U> Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Binding<T, parameter of U> Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Converter<X, parameter of U>, Binding<T, parameter of X> Field, which $schemas.
UDTImpl acts as a caretaker for memento Comment, which gets Catalog, which gets Schema, which gets Qualified Name, which gets Package, which fieldses Row, which fields0s, which gets Record Type, which is SQLUsable, which is Synthetic, which news Record, which gets Data Type, which accepts Context<?> parameter of ctx, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt Field, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment Field, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Converter<T, parameter of U> Field, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Binding<T, parameter of U> Field, which creates String parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Converter<X, parameter of U>, Binding<T, parameter of X> Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Converter<T, parameter of U> Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Binding<T, parameter of U> Field, which creates Name parameter of name, DataType<T> parameter of type, UDT<R> parameter of udt, String parameter of comment, Converter<X, parameter of U>, Binding<T, parameter of X> Field, which $schemas.
