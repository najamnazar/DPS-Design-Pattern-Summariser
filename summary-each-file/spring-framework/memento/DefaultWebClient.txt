DefaultWebClient acts as a caretaker for memento Headers, which gets, which heads, which posts, which puts, which patches, which deletes, which optionses, which methods HttpMethod parameter of httpMethod, which methods HttpMethod parameter of httpMethod Internal, which mutates, which releases ClientResponse parameter of response If Not Consumed, which releases ClientResponse parameter of response, Throwable parameter of ex If Not Consumed, which uris String parameter of uriTemplate, Object... parameter of uriVariables, which uris String parameter of uriTemplate, Map<String, parameter of ?>, which uris String parameter of uriTemplate, Function<UriBuilder, parameter of URI>, which uris Function<UriBuilder, parameter of URI>, which uris URI parameter of uri, which gets Headers, which gets Cookies, which headers String parameter of headerName, String... parameter of headerValues, which headerses Consumer<HttpHeaders> parameter of headersConsumer, which accepts MediaType... parameter of acceptableMediaTypes, which accepts Charset... parameter of acceptableCharsets Charset, which contents MediaType parameter of contentType Type, which contents long parameter of contentLength Length, which cookies String parameter of name, String parameter of value, which cookieses Consumer<MultiValueMap<String, parameter of String>>, which ifs ZonedDateTime parameter of ifModifiedSince Modified Since, which ifs String... parameter of ifNoneMatches None Match, which attributes String parameter of name, Object parameter of value, which attributes Consumer<Map<String, parameter of Object>>, which contexts Function<Context, parameter of Context>, which https Consumer<ClientHttpRequest> parameter of requestConsumer Request, which bodies Object parameter of body Value, which bodies P parameter of publisher, ParameterizedTypeReference<T> parameter of elementTypeRef, which bodies P parameter of publisher, Class<T> parameter of elementClass, which bodies Object parameter of producer, Class<?> parameter of elementClass, which bodies Object parameter of producer, ParameterizedTypeReference<?> parameter of elementTypeRef, which bodies BodyInserter<?, parameter of ?, which synces Object parameter of body Body, which retrieves, which creates Request, which exchanges Function<ClientResponse, parameter of ? To Mono, which exchanges Function<ClientResponse, parameter of ? To Flux, which exchanges, which inits Request Builder, which inits Uri, which inits Headers, which inits Cookies, which ons Predicate<HttpStatus> parameter of statusPredicate, Function<ClientResponse, parameter of Mono<? Status, which tos Predicate<HttpStatus> parameter of predicate Int Predicate, which ons IntPredicate parameter of statusCodePredicate, Function<ClientResponse, parameter of Mono<? Raw Status, which bodies Class<T> parameter of elementClass To Mono, which bodies ParameterizedTypeReference<T> parameter of elementTypeRef To Mono, which bodies Class<T> parameter of elementClass To Flux, which bodies ParameterizedTypeReference<T> parameter of elementTypeRef To Flux, which tos Class<T> parameter of bodyClass Entity, which tos ParameterizedTypeReference<T> parameter of bodyTypeRef Entity, which tos Class<T> parameter of elementClass Entity List, which tos ParameterizedTypeReference<T> parameter of elementTypeRef Entity List, which tos Class<T> parameter of elementType Entity Flux, which tos ParameterizedTypeReference<T> parameter of elementTypeRef Entity Flux, which tos BodyExtractor<Flux<T>, parameter of ? Entity Flux, which tos Bodiless Entity, which handles ClientResponse parameter of response, Mono<T> parameter of body Body Mono, which handles ClientResponse parameter of response, Flux<T> parameter of body Body Flux, which handlers ClientResponse parameter of response, Flux<T> parameter of body Entity Flux, which exceptions ClientResponse parameter of response Wrapping Function, which applies ClientResponse parameter of response Status Handlers, which inserts Mono<T> parameter of result, int parameter of statusCode, HttpRequest parameter of request Checkpoint, which tests int parameter of status, which applies ClientResponse parameter of response.
DefaultWebClient acts as a caretaker for memento ClientHttpRequest, which gets, which heads, which posts, which puts, which patches, which deletes, which optionses, which methods HttpMethod parameter of httpMethod, which methods HttpMethod parameter of httpMethod Internal, which mutates, which releases ClientResponse parameter of response If Not Consumed, which releases ClientResponse parameter of response, Throwable parameter of ex If Not Consumed, which uris String parameter of uriTemplate, Object... parameter of uriVariables, which uris String parameter of uriTemplate, Map<String, parameter of ?>, which uris String parameter of uriTemplate, Function<UriBuilder, parameter of URI>, which uris Function<UriBuilder, parameter of URI>, which uris URI parameter of uri, which gets Headers, which gets Cookies, which headers String parameter of headerName, String... parameter of headerValues, which headerses Consumer<HttpHeaders> parameter of headersConsumer, which accepts MediaType... parameter of acceptableMediaTypes, which accepts Charset... parameter of acceptableCharsets Charset, which contents MediaType parameter of contentType Type, which contents long parameter of contentLength Length, which cookies String parameter of name, String parameter of value, which cookieses Consumer<MultiValueMap<String, parameter of String>>, which ifs ZonedDateTime parameter of ifModifiedSince Modified Since, which ifs String... parameter of ifNoneMatches None Match, which attributes String parameter of name, Object parameter of value, which attributes Consumer<Map<String, parameter of Object>>, which contexts Function<Context, parameter of Context>, which https Consumer<ClientHttpRequest> parameter of requestConsumer Request, which bodies Object parameter of body Value, which bodies P parameter of publisher, ParameterizedTypeReference<T> parameter of elementTypeRef, which bodies P parameter of publisher, Class<T> parameter of elementClass, which bodies Object parameter of producer, Class<?> parameter of elementClass, which bodies Object parameter of producer, ParameterizedTypeReference<?> parameter of elementTypeRef, which bodies BodyInserter<?, parameter of ?, which synces Object parameter of body Body, which retrieves, which creates Request, which exchanges Function<ClientResponse, parameter of ? To Mono, which exchanges Function<ClientResponse, parameter of ? To Flux, which exchanges, which inits Request Builder, which inits Uri, which inits Headers, which inits Cookies, which ons Predicate<HttpStatus> parameter of statusPredicate, Function<ClientResponse, parameter of Mono<? Status, which tos Predicate<HttpStatus> parameter of predicate Int Predicate, which ons IntPredicate parameter of statusCodePredicate, Function<ClientResponse, parameter of Mono<? Raw Status, which bodies Class<T> parameter of elementClass To Mono, which bodies ParameterizedTypeReference<T> parameter of elementTypeRef To Mono, which bodies Class<T> parameter of elementClass To Flux, which bodies ParameterizedTypeReference<T> parameter of elementTypeRef To Flux, which tos Class<T> parameter of bodyClass Entity, which tos ParameterizedTypeReference<T> parameter of bodyTypeRef Entity, which tos Class<T> parameter of elementClass Entity List, which tos ParameterizedTypeReference<T> parameter of elementTypeRef Entity List, which tos Class<T> parameter of elementType Entity Flux, which tos ParameterizedTypeReference<T> parameter of elementTypeRef Entity Flux, which tos BodyExtractor<Flux<T>, parameter of ? Entity Flux, which tos Bodiless Entity, which handles ClientResponse parameter of response, Mono<T> parameter of body Body Mono, which handles ClientResponse parameter of response, Flux<T> parameter of body Body Flux, which handlers ClientResponse parameter of response, Flux<T> parameter of body Entity Flux, which exceptions ClientResponse parameter of response Wrapping Function, which applies ClientResponse parameter of response Status Handlers, which inserts Mono<T> parameter of result, int parameter of statusCode, HttpRequest parameter of request Checkpoint, which tests int parameter of status, which applies ClientResponse parameter of response.
DefaultWebClient acts as a caretaker for memento C, which gets, which heads, which posts, which puts, which patches, which deletes, which optionses, which methods HttpMethod parameter of httpMethod, which methods HttpMethod parameter of httpMethod Internal, which mutates, which releases ClientResponse parameter of response If Not Consumed, which releases ClientResponse parameter of response, Throwable parameter of ex If Not Consumed, which uris String parameter of uriTemplate, Object... parameter of uriVariables, which uris String parameter of uriTemplate, Map<String, parameter of ?>, which uris String parameter of uriTemplate, Function<UriBuilder, parameter of URI>, which uris Function<UriBuilder, parameter of URI>, which uris URI parameter of uri, which gets Headers, which gets Cookies, which headers String parameter of headerName, String... parameter of headerValues, which headerses Consumer<HttpHeaders> parameter of headersConsumer, which accepts MediaType... parameter of acceptableMediaTypes, which accepts Charset... parameter of acceptableCharsets Charset, which contents MediaType parameter of contentType Type, which contents long parameter of contentLength Length, which cookies String parameter of name, String parameter of value, which cookieses Consumer<MultiValueMap<String, parameter of String>>, which ifs ZonedDateTime parameter of ifModifiedSince Modified Since, which ifs String... parameter of ifNoneMatches None Match, which attributes String parameter of name, Object parameter of value, which attributes Consumer<Map<String, parameter of Object>>, which contexts Function<Context, parameter of Context>, which https Consumer<ClientHttpRequest> parameter of requestConsumer Request, which bodies Object parameter of body Value, which bodies P parameter of publisher, ParameterizedTypeReference<T> parameter of elementTypeRef, which bodies P parameter of publisher, Class<T> parameter of elementClass, which bodies Object parameter of producer, Class<?> parameter of elementClass, which bodies Object parameter of producer, ParameterizedTypeReference<?> parameter of elementTypeRef, which bodies BodyInserter<?, parameter of ?, which synces Object parameter of body Body, which retrieves, which creates Request, which exchanges Function<ClientResponse, parameter of ? To Mono, which exchanges Function<ClientResponse, parameter of ? To Flux, which exchanges, which inits Request Builder, which inits Uri, which inits Headers, which inits Cookies, which ons Predicate<HttpStatus> parameter of statusPredicate, Function<ClientResponse, parameter of Mono<? Status, which tos Predicate<HttpStatus> parameter of predicate Int Predicate, which ons IntPredicate parameter of statusCodePredicate, Function<ClientResponse, parameter of Mono<? Raw Status, which bodies Class<T> parameter of elementClass To Mono, which bodies ParameterizedTypeReference<T> parameter of elementTypeRef To Mono, which bodies Class<T> parameter of elementClass To Flux, which bodies ParameterizedTypeReference<T> parameter of elementTypeRef To Flux, which tos Class<T> parameter of bodyClass Entity, which tos ParameterizedTypeReference<T> parameter of bodyTypeRef Entity, which tos Class<T> parameter of elementClass Entity List, which tos ParameterizedTypeReference<T> parameter of elementTypeRef Entity List, which tos Class<T> parameter of elementType Entity Flux, which tos ParameterizedTypeReference<T> parameter of elementTypeRef Entity Flux, which tos BodyExtractor<Flux<T>, parameter of ? Entity Flux, which tos Bodiless Entity, which handles ClientResponse parameter of response, Mono<T> parameter of body Body Mono, which handles ClientResponse parameter of response, Flux<T> parameter of body Body Flux, which handlers ClientResponse parameter of response, Flux<T> parameter of body Entity Flux, which exceptions ClientResponse parameter of response Wrapping Function, which applies ClientResponse parameter of response Status Handlers, which inserts Mono<T> parameter of result, int parameter of statusCode, HttpRequest parameter of request Checkpoint, which tests int parameter of status, which applies ClientResponse parameter of response.
DefaultWebClient acts as a caretaker for memento B, which gets, which heads, which posts, which puts, which patches, which deletes, which optionses, which methods HttpMethod parameter of httpMethod, which methods HttpMethod parameter of httpMethod Internal, which mutates, which releases ClientResponse parameter of response If Not Consumed, which releases ClientResponse parameter of response, Throwable parameter of ex If Not Consumed, which uris String parameter of uriTemplate, Object... parameter of uriVariables, which uris String parameter of uriTemplate, Map<String, parameter of ?>, which uris String parameter of uriTemplate, Function<UriBuilder, parameter of URI>, which uris Function<UriBuilder, parameter of URI>, which uris URI parameter of uri, which gets Headers, which gets Cookies, which headers String parameter of headerName, String... parameter of headerValues, which headerses Consumer<HttpHeaders> parameter of headersConsumer, which accepts MediaType... parameter of acceptableMediaTypes, which accepts Charset... parameter of acceptableCharsets Charset, which contents MediaType parameter of contentType Type, which contents long parameter of contentLength Length, which cookies String parameter of name, String parameter of value, which cookieses Consumer<MultiValueMap<String, parameter of String>>, which ifs ZonedDateTime parameter of ifModifiedSince Modified Since, which ifs String... parameter of ifNoneMatches None Match, which attributes String parameter of name, Object parameter of value, which attributes Consumer<Map<String, parameter of Object>>, which contexts Function<Context, parameter of Context>, which https Consumer<ClientHttpRequest> parameter of requestConsumer Request, which bodies Object parameter of body Value, which bodies P parameter of publisher, ParameterizedTypeReference<T> parameter of elementTypeRef, which bodies P parameter of publisher, Class<T> parameter of elementClass, which bodies Object parameter of producer, Class<?> parameter of elementClass, which bodies Object parameter of producer, ParameterizedTypeReference<?> parameter of elementTypeRef, which bodies BodyInserter<?, parameter of ?, which synces Object parameter of body Body, which retrieves, which creates Request, which exchanges Function<ClientResponse, parameter of ? To Mono, which exchanges Function<ClientResponse, parameter of ? To Flux, which exchanges, which inits Request Builder, which inits Uri, which inits Headers, which inits Cookies, which ons Predicate<HttpStatus> parameter of statusPredicate, Function<ClientResponse, parameter of Mono<? Status, which tos Predicate<HttpStatus> parameter of predicate Int Predicate, which ons IntPredicate parameter of statusCodePredicate, Function<ClientResponse, parameter of Mono<? Raw Status, which bodies Class<T> parameter of elementClass To Mono, which bodies ParameterizedTypeReference<T> parameter of elementTypeRef To Mono, which bodies Class<T> parameter of elementClass To Flux, which bodies ParameterizedTypeReference<T> parameter of elementTypeRef To Flux, which tos Class<T> parameter of bodyClass Entity, which tos ParameterizedTypeReference<T> parameter of bodyTypeRef Entity, which tos Class<T> parameter of elementClass Entity List, which tos ParameterizedTypeReference<T> parameter of elementTypeRef Entity List, which tos Class<T> parameter of elementType Entity Flux, which tos ParameterizedTypeReference<T> parameter of elementTypeRef Entity Flux, which tos BodyExtractor<Flux<T>, parameter of ? Entity Flux, which tos Bodiless Entity, which handles ClientResponse parameter of response, Mono<T> parameter of body Body Mono, which handles ClientResponse parameter of response, Flux<T> parameter of body Body Flux, which handlers ClientResponse parameter of response, Flux<T> parameter of body Entity Flux, which exceptions ClientResponse parameter of response Wrapping Function, which applies ClientResponse parameter of response Status Handlers, which inserts Mono<T> parameter of result, int parameter of statusCode, HttpRequest parameter of request Checkpoint, which tests int parameter of status, which applies ClientResponse parameter of response.
