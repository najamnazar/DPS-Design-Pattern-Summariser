TypeDescriptorTests acts as a caretaker for memento C, which parameters Primitive, which parameters Scalar, which parameters List, which parameters List No Param Types, which parameters Array, which parameters Map, which parameters Annotated, which gets Annotations Returns Cloned Array, which properties Complex, which properties Generic Type, which properties Type Covariance, which properties Generic Type List, which properties Generic Class List, which properties, which gets Annotation On Method That Is Locally Annotated, which gets Annotation On Method That Is Meta Annotated, which gets Annotation On Method That Is Meta Meta Annotated, which asserts Class<? parameter of extends, String parameter of methodName Annotation Found On Method, which fields Scalar, which fields List, which fields List Of List Of String, which fields List Of List Unknown, which fields Array, which fields Complex Type Descriptor, which fields Complex Type Descriptor2, which fields Map, which fields Annotated, which values Of Scalar, which values Of Primitive, which values Of Array, which values Of Collection, which fors Object, which fors Object Null Type Descriptor, which nesteds Method Parameter Type2Levels, which nesteds Method Parameter Type Map, which nesteds Method Parameter Type Map Two Levels, which nesteds Method Parameter Not1Nested Level, which nesteds Too Many Levels, which nesteds Method Parameter Type Not Nestable, which nesteds Method Parameter Type Invalid Nesting Level, which nesteds Not Parameterized, which nesteds Field Type Map Two Levels, which nesteds Property Type Map Two Levels, which collections, which collections Nested, which maps, which maps Nested, which narrows, which elements Type, which elements Type Preserve Context, which maps Key Type, which maps Key Type Preserve Context, which maps Value Type, which maps Value Type Preserve Context, which equalities, which is Assignable Types, which is Assignable Element Types, which is Assignable Map Key Value Types, which multis Value Map, which passes Down Generic, which ups Cast, which ups Cast Not Super, which elements Type For Collection Subclass, which elements Type For Map Subclass, which creates Map Array, which creates String Array, which creates Null Array, which serializables, which creates Collection With Null Element, which creates Map With Null Elements, which gets Source, which tests int parameter of primitive Parameter Primitive, which tests String parameter of value Parameter Scalar, which tests List<List<Map<Integer, parameter of Enum<?>>>> Parameter List, which tests List parameter of list Parameter List No Param Types, which tests Integer[] parameter of array Parameter Array, which tests Map<Integer, parameter of List<String>> Parameter Map, which test1s List<String> parameter of param1, which test2s List<List<String>> parameter of param1, which test3s Map<Integer, parameter of String>, which test4s List<Map<Integer, parameter of String>>, which test5s String parameter of param1, which test6s List<List> parameter of param1, which gets Test4, which sets List<Map<Integer, parameter of String>> Test4, which gets Complex Property, which gets Property, which sets Map<List<Integer>, parameter of List<Long>> Property, which methods With Local Annotation, which methods With Composed Annotation, which methods With Composed Composed Annotation, which sets Map<String, parameter of List<List<Integer>>> Complex Property, which tests @ParameterAnnotation(123) parameter of String Annotated Method, which tests @ParameterAnnotation(567) parameter of String Annotated Method Different Annotation Value, which gets Property, which sets T parameter of t Property, which gets List Property, which sets List<T> parameter of t List Property, which gets Property, which sets T parameter of t Property, which gets List Property, which sets List<T> parameter of t List Property, which gets Property, which sets Integer parameter of t Property, which gets List Property, which sets List<Integer> parameter of t List Property, which gets Property, which sets Number parameter of t Property, which gets List Property, which sets List<Number> parameter of t List Property.
