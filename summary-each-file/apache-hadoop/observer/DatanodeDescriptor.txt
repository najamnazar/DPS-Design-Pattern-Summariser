DatanodeDescriptor acts as a publisher for observer BlockInfo, which is inherited by, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
DatanodeDescriptor acts as a publisher for observer VolumeFailureSummary, which is inherited by, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
DatanodeDescriptor acts as a publisher for observer Block, which is inherited by, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
DatanodeDescriptor acts as a publisher for observer DatanodeStorageInfo, which is inherited by, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
DatanodeDescriptor acts as an observer, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
DatanodeDescriptor acts as a publisher for observer StorageType, which is inherited by, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
DatanodeDescriptor acts as a publisher for observer DatanodeStorage, which is inherited by, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
DatanodeDescriptor acts as a publisher for observer DatanodeInfo, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
DatanodeDescriptor acts as a publisher for observer Node, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
DatanodeDescriptor acts as an observer for publisher DatanodeAdminMonitorBase, DatanodeAdminDefaultMonitor, DatanodeAdminBackoffMonitor, which is inherited by, which sizes, which offers E parameter of e, which polls int parameter of numBlocks, which contains E parameter of e, which clears, which gets Datanode, which gets Type, which gets Pending Cached, which gets Cached, which gets Pending Uncached, which is Alive, which sets boolean parameter of isAlive Alive, which needs Key Update, which sets boolean parameter of needKeyUpdate Need Key Update, which gets Leaving Service Status, which is Heartbeated Since Registration, which gets String parameter of storageID Storage Info, which gets Storage Infos, which gets Storage Types, which gets Storage Reports, which has Stale Storages, which resets Blocks, which clears Block Queues, which nums Blocks, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Heartbeat State, which updates StorageReport[] parameter of reports, long parameter of cacheCapacity, long parameter of cacheUsed, int parameter of xceiverCount, int parameter of volFailures, VolumeFailureSummary parameter of volumeFailureSummary Storage Stats, which injects DatanodeStorageInfo parameter of s Storage, which prunes final parameter of StorageReport[] Storage Map, which updates Set<DatanodeStorageInfo> parameter of failedStorageInfos Failed Storage, which has Next, which nexts, which removes, which updates, which gets Block Iterator, which gets final parameter of int Block Iterator, which gets final parameter of int, final parameter of DatanodeStorageInfo[] Block Iterator, which increments Pending Replication Without Targets, which decrements Pending Replication Without Targets, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets Block To Be Replicated, which adds Block parameter of block, DatanodeStorageInfo[] parameter of targets ECBlock To Be Replicated, which adds ExtendedBlock parameter of block, DatanodeDescriptor[] parameter of sources, DatanodeStorageInfo[] parameter of targets, byte[] parameter of liveBlockIndices, byte[] parameter of excludeReconstrutedIndices, ErasureCodingPolicy parameter of ecPolicy Block To Be Erasure Coded, which adds BlockInfo parameter of block Block To Be Recovered, which adds List<Block> parameter of blocklist Blocks To Be Invalidated, which gets Number Of Blocks To Be Replicated, which gets Number Of Blocks To Be Erasure Coded, which gets Number Of ECBlocks To Be Replicated, which gets Number Of Replicate Blocks, which gets int parameter of maxTransfers Replication Command, which gets int parameter of maxTransfers ECReplicated Command, which gets int parameter of maxTransfers Erasure Code Command, which gets int parameter of maxTransfers Lease Recovery Command, which gets int parameter of maxblocks Invalidate Blocks, which contains Block parameter of block Invalidate Block, which chooses StorageType parameter of t, long parameter of blockSize, int parameter of minBlocksForWrite Storage4Block, which gets StorageType parameter of t Blocks Scheduled, which gets Blocks Scheduled, which increments StorageType parameter of t Blocks Scheduled, which decrements StorageType parameter of t Blocks Scheduled, which rolls long parameter of now Blocks Scheduled, which hashes Code, which equals Object parameter of obj, which sets int parameter of lowRedundancyBlocksInOpenFiles, LightWeightHashSet<Long> parameter of underRepInOpenFiles, int parameter of underRepBlocks, int parameter of outOfServiceOnlyRep, which gets Under Replicated Blocks, which gets Out Of Service Only Replicas, which gets Under Replicated In Open Files, which gets Open Files, which sets long parameter of time Start Time, which gets Start Time, which sets boolean parameter of flag Disallowed, which is Disallowed, which gets Volume Failures, which gets Volume Failure Summary, which gets Num Volumes Available, which updates DatanodeID parameter of nodeReg Reg Info, which gets Balancer Bandwidth, which sets long parameter of bandwidth Balancer Bandwidth, which dumps Datanode, which updates DatanodeStorage parameter of s Storage, which gets Last Caching Directive Sent Time Ms, which sets long parameter of time Last Caching Directive Sent Time Ms, which checks Block Report Received, which sets boolean parameter of force Force Registration, which is Registered, which has StorageType parameter of type Storage Type.
