TestJobCounters acts as a publisher for observer Writable, which is inherited by, which validates Counters parameter of counter, long parameter of fileBytesRead, long parameter of fileBytesWritten, long parameter of mapOutputBytes, long parameter of mapOutputMaterializedBytes File Counters, which validates Counters parameter of counter, long parameter of fileBytesRead, long parameter of fileBytesWritten, long parameter of mapOutputBytes, long parameter of mapOutputMaterializedBytes Old File Counters, which validates Counters parameter of counter, long parameter of spillRecCnt, long parameter of mapInputRecords, long parameter of mapOutputRecords Counters, which removes Path parameter of inpFile, Configuration parameter of conf Words File, which creates Path parameter of inpFile, Configuration parameter of conf Words File, which gets Path parameter of path File Size, which inits Paths, which cleanups, which creates Configuration, which creates Job, which tests Old Counter A, which tests Old Counter B, which tests Old Counter C, which tests Old Counter D, which tests New Counter A, which tests New Counter B, which tests New Counter C, which tests New Counter D, which tests Old Counters, which loads, which maps WritableComparable parameter of key, Writable parameter of val, OutputCollector<WritableComparable, parameter of Writable>, Reporter parameter of reporter, which configures JobConf parameter of conf, which reduces WritableComparable parameter of key, Iterator<Writable> parameter of val, OutputCollector<WritableComparable, parameter of Writable>, Reporter parameter of reporter, which configures JobConf parameter of conf, which gets JobClient parameter of client, JobID parameter of id, int parameter of numReports, int parameter of taskId, TaskType parameter of type Task Counter Usage, which runs JobConf parameter of conf, Path parameter of testRootDir, String parameter of heapOptions, long parameter of targetMapValue, long parameter of targetReduceValue, FileSystem parameter of fs, JobClient parameter of client, Path parameter of inDir Heap Usage Test Job, which tests Heap Usage Counter, which maps Object parameter of key, Text parameter of value, Context parameter of context, which reduces Text parameter of key, Iterable<IntWritable> parameter of values, Context parameter of context, which maps Object parameter of key, Text parameter of value, Context parameter of context, which reduces Text parameter of key, Iterable<IntWritable> parameter of values, Context parameter of context, which updates Process Tree, which gets Process Tree Dump, which gets Cumulative Cpu Time, which checks Pid Pgrpid For Match, which gets Rss Memory Size, which gets Virtual Memory Size, which gets Cpu Usage Percent, which tests Mock Resource Calculator Process Tree, which tests Max Counter.
TestJobCounters acts as a publisher for observer Path, which is inherited by, which validates Counters parameter of counter, long parameter of fileBytesRead, long parameter of fileBytesWritten, long parameter of mapOutputBytes, long parameter of mapOutputMaterializedBytes File Counters, which validates Counters parameter of counter, long parameter of fileBytesRead, long parameter of fileBytesWritten, long parameter of mapOutputBytes, long parameter of mapOutputMaterializedBytes Old File Counters, which validates Counters parameter of counter, long parameter of spillRecCnt, long parameter of mapInputRecords, long parameter of mapOutputRecords Counters, which removes Path parameter of inpFile, Configuration parameter of conf Words File, which creates Path parameter of inpFile, Configuration parameter of conf Words File, which gets Path parameter of path File Size, which inits Paths, which cleanups, which creates Configuration, which creates Job, which tests Old Counter A, which tests Old Counter B, which tests Old Counter C, which tests Old Counter D, which tests New Counter A, which tests New Counter B, which tests New Counter C, which tests New Counter D, which tests Old Counters, which loads, which maps WritableComparable parameter of key, Writable parameter of val, OutputCollector<WritableComparable, parameter of Writable>, Reporter parameter of reporter, which configures JobConf parameter of conf, which reduces WritableComparable parameter of key, Iterator<Writable> parameter of val, OutputCollector<WritableComparable, parameter of Writable>, Reporter parameter of reporter, which configures JobConf parameter of conf, which gets JobClient parameter of client, JobID parameter of id, int parameter of numReports, int parameter of taskId, TaskType parameter of type Task Counter Usage, which runs JobConf parameter of conf, Path parameter of testRootDir, String parameter of heapOptions, long parameter of targetMapValue, long parameter of targetReduceValue, FileSystem parameter of fs, JobClient parameter of client, Path parameter of inDir Heap Usage Test Job, which tests Heap Usage Counter, which maps Object parameter of key, Text parameter of value, Context parameter of context, which reduces Text parameter of key, Iterable<IntWritable> parameter of values, Context parameter of context, which maps Object parameter of key, Text parameter of value, Context parameter of context, which reduces Text parameter of key, Iterable<IntWritable> parameter of values, Context parameter of context, which updates Process Tree, which gets Process Tree Dump, which gets Cumulative Cpu Time, which checks Pid Pgrpid For Match, which gets Rss Memory Size, which gets Virtual Memory Size, which gets Cpu Usage Percent, which tests Mock Resource Calculator Process Tree, which tests Max Counter.
TestJobCounters acts as a publisher for observer Text, which is inherited by, which validates Counters parameter of counter, long parameter of fileBytesRead, long parameter of fileBytesWritten, long parameter of mapOutputBytes, long parameter of mapOutputMaterializedBytes File Counters, which validates Counters parameter of counter, long parameter of fileBytesRead, long parameter of fileBytesWritten, long parameter of mapOutputBytes, long parameter of mapOutputMaterializedBytes Old File Counters, which validates Counters parameter of counter, long parameter of spillRecCnt, long parameter of mapInputRecords, long parameter of mapOutputRecords Counters, which removes Path parameter of inpFile, Configuration parameter of conf Words File, which creates Path parameter of inpFile, Configuration parameter of conf Words File, which gets Path parameter of path File Size, which inits Paths, which cleanups, which creates Configuration, which creates Job, which tests Old Counter A, which tests Old Counter B, which tests Old Counter C, which tests Old Counter D, which tests New Counter A, which tests New Counter B, which tests New Counter C, which tests New Counter D, which tests Old Counters, which loads, which maps WritableComparable parameter of key, Writable parameter of val, OutputCollector<WritableComparable, parameter of Writable>, Reporter parameter of reporter, which configures JobConf parameter of conf, which reduces WritableComparable parameter of key, Iterator<Writable> parameter of val, OutputCollector<WritableComparable, parameter of Writable>, Reporter parameter of reporter, which configures JobConf parameter of conf, which gets JobClient parameter of client, JobID parameter of id, int parameter of numReports, int parameter of taskId, TaskType parameter of type Task Counter Usage, which runs JobConf parameter of conf, Path parameter of testRootDir, String parameter of heapOptions, long parameter of targetMapValue, long parameter of targetReduceValue, FileSystem parameter of fs, JobClient parameter of client, Path parameter of inDir Heap Usage Test Job, which tests Heap Usage Counter, which maps Object parameter of key, Text parameter of value, Context parameter of context, which reduces Text parameter of key, Iterable<IntWritable> parameter of values, Context parameter of context, which maps Object parameter of key, Text parameter of value, Context parameter of context, which reduces Text parameter of key, Iterable<IntWritable> parameter of values, Context parameter of context, which updates Process Tree, which gets Process Tree Dump, which gets Cumulative Cpu Time, which checks Pid Pgrpid For Match, which gets Rss Memory Size, which gets Virtual Memory Size, which gets Cpu Usage Percent, which tests Mock Resource Calculator Process Tree, which tests Max Counter.
