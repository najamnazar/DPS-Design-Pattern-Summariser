MiniRouterDFSCluster acts as a publisher for observer NameNode, which is inherited by StateStoreDFSCluster, which gets Router, which gets Nameservice Id, which gets Namenode Id, which gets Rpc Port, which gets Http Port, which gets File Context, which gets File System URI, which gets Http Address, which inits Router, which gets File System, which gets Configuration parameter of configuration File System, which gets File System With Observer Read Proxy Provider, which gets File System With Configured Failover Proxy Provider, which gets String parameter of proxyProviderClassName File System With Proxy Provider, which gets UserGroupInformation parameter of user Client, which gets Admin Client, which resets Admin Client, which gets Client, which gets Conf, which gets Router Rpc Server, which gets Router Rpc Client, which gets Namenode, which gets Nameservice Id, which gets Namenode Id, which gets File Context, which sets NameNode parameter of nn Namenode, which gets Rpc Address, which gets Service Address, which gets Lifeline Address, which gets Web Address, which gets Http Address, which gets Https Address, which gets File System, which resets Client, which gets UserGroupInformation parameter of user Client, which gets Client, which gets Conf Suffix, which gets Conf, which adds Configuration parameter of conf Router Overrides, which adds Configuration parameter of conf Namenode Overrides, which generates String parameter of nsId Namenode Configuration, which generates Client Configuration, which generates String parameter of nsId, String parameter of nnId Router Configuration, which configures int parameter of numNameservices, int parameter of numNamenodes, Configuration parameter of overrideConf Nameservices, which sets int parameter of num Num Datanodes Per Nameservice, which sets StorageType[][] parameter of storageTypes Storage Types, which sets String[] parameter of racks Racks, which sets Independent DNs, which gets Nameservices Key, which gets Random Nameservice, which gets Nameservices, which gets String parameter of nameservice Namenodes, which gets Random Namenode, which gets Namenodes, which is High Availability, which gets String parameter of nameservice, String parameter of namenode Namenode, which gets String parameter of nameservice Routers, which gets String parameter of nsId, String parameter of nnId Router Context, which gets Random Router, which gets Routers, which builds String parameter of nsId, String parameter of nnId Router, which starts Cluster, which starts Configuration parameter of overrideConf Cluster, which starts Routers, which waits NamenodeContext parameter of nn Active, which waits RouterContext parameter of router Active, which registers Namenodes, which waits Namenode Registration, which waits RouterContext parameter of router, FederationNamenodeServiceState parameter of state, String parameter of nsId, String parameter of nnId Router Registration Quorum, which waits Active Namespaces, which gets String parameter of nsId Federated Path For NS, which gets String parameter of nsId Namenode Path For NS, which gets String parameter of nsId Federated Test Directory For NS, which gets String parameter of nsId Namenode Test Directory For NS, which gets String parameter of nsId Federated Test File For NS, which gets String parameter of nsId Namenode Test File For NS, which switches String parameter of nsId, String parameter of nnId To Active, which switches String parameter of nsId, String parameter of nnId To Standby, which switches String parameter of nsId, String parameter of nnId To Observer, which shutdowns, which stops RouterContext parameter of router Router, which creates Test Directories Namenode, which creates NamenodeContext parameter of nn Test Directories Namenode, which deletes All Files, which instals Mock Locations, which gets Cluster, which waits Cluster Up, which gets Cache Flush Interval.
MiniRouterDFSCluster acts as a publisher for observer Configuration, which is inherited by StateStoreDFSCluster, which gets Router, which gets Nameservice Id, which gets Namenode Id, which gets Rpc Port, which gets Http Port, which gets File Context, which gets File System URI, which gets Http Address, which inits Router, which gets File System, which gets Configuration parameter of configuration File System, which gets File System With Observer Read Proxy Provider, which gets File System With Configured Failover Proxy Provider, which gets String parameter of proxyProviderClassName File System With Proxy Provider, which gets UserGroupInformation parameter of user Client, which gets Admin Client, which resets Admin Client, which gets Client, which gets Conf, which gets Router Rpc Server, which gets Router Rpc Client, which gets Namenode, which gets Nameservice Id, which gets Namenode Id, which gets File Context, which sets NameNode parameter of nn Namenode, which gets Rpc Address, which gets Service Address, which gets Lifeline Address, which gets Web Address, which gets Http Address, which gets Https Address, which gets File System, which resets Client, which gets UserGroupInformation parameter of user Client, which gets Client, which gets Conf Suffix, which gets Conf, which adds Configuration parameter of conf Router Overrides, which adds Configuration parameter of conf Namenode Overrides, which generates String parameter of nsId Namenode Configuration, which generates Client Configuration, which generates String parameter of nsId, String parameter of nnId Router Configuration, which configures int parameter of numNameservices, int parameter of numNamenodes, Configuration parameter of overrideConf Nameservices, which sets int parameter of num Num Datanodes Per Nameservice, which sets StorageType[][] parameter of storageTypes Storage Types, which sets String[] parameter of racks Racks, which sets Independent DNs, which gets Nameservices Key, which gets Random Nameservice, which gets Nameservices, which gets String parameter of nameservice Namenodes, which gets Random Namenode, which gets Namenodes, which is High Availability, which gets String parameter of nameservice, String parameter of namenode Namenode, which gets String parameter of nameservice Routers, which gets String parameter of nsId, String parameter of nnId Router Context, which gets Random Router, which gets Routers, which builds String parameter of nsId, String parameter of nnId Router, which starts Cluster, which starts Configuration parameter of overrideConf Cluster, which starts Routers, which waits NamenodeContext parameter of nn Active, which waits RouterContext parameter of router Active, which registers Namenodes, which waits Namenode Registration, which waits RouterContext parameter of router, FederationNamenodeServiceState parameter of state, String parameter of nsId, String parameter of nnId Router Registration Quorum, which waits Active Namespaces, which gets String parameter of nsId Federated Path For NS, which gets String parameter of nsId Namenode Path For NS, which gets String parameter of nsId Federated Test Directory For NS, which gets String parameter of nsId Namenode Test Directory For NS, which gets String parameter of nsId Federated Test File For NS, which gets String parameter of nsId Namenode Test File For NS, which switches String parameter of nsId, String parameter of nnId To Active, which switches String parameter of nsId, String parameter of nnId To Standby, which switches String parameter of nsId, String parameter of nnId To Observer, which shutdowns, which stops RouterContext parameter of router Router, which creates Test Directories Namenode, which creates NamenodeContext parameter of nn Test Directories Namenode, which deletes All Files, which instals Mock Locations, which gets Cluster, which waits Cluster Up, which gets Cache Flush Interval.
