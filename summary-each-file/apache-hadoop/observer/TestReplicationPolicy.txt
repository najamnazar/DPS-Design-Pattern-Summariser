TestReplicationPolicy acts as a publisher for observer DatanodeDescriptor, which datas, which updates long parameter of capacity, long parameter of dfsUsed, long parameter of remaining, long parameter of blockPoolUsed Heartbeat For Extra Storage, which resets Heartbeat For Storages, which gets Configuration parameter of conf Datanode Descriptors, which tests Choose Node With Multiple Storages1, which tests Choose Node With Multiple Storages2, which tests Choose Target1, which tests Choose Target2, which tests Choose Target3, which tests Chooose Target4, which tests Choose Target5, which tests Choose Target6, which tests Choose Target With More Than Available Nodes With Staleness, which tests Choose Target With More Than Available Nodes, which contains DatanodeStorageInfo parameter of target, DatanodeDescriptor[] parameter of nodes, int parameter of startIndex, int parameter of endIndex Within Range, which contains DatanodeDescriptor parameter of target, DatanodeStorageInfo[] parameter of nodes, int parameter of startIndex, int parameter of endIndex Within Range, which tests Choose Target With Stale Nodes, which tests Choose Target With Half Stale Nodes, which tests Choose Target With More Than Half Stale Nodes, which tests Rereplicate1, which tests Rereplicate2, which tests Rereplicate3, which gens long parameter of id Block Info, which gens long parameter of id, boolean parameter of isBlockCorrupted Block Info, which tests Replication With Priority, which tests Choose Low Redundancy Blocks, which asserts List<List<BlockInfo>> parameter of chosenBlocks, int... parameter of expectedSizes The Chosen Blocks, which tests Choose Replica To Delete, which tests Striped Choose Replica To Delete, which calculates DatanodeDescriptor parameter of dataNode Remaining, which tests Choose Replicas To Delete, which tests Use Del Hint, which tests Is Movable, which tests Get Invalidate Work Pct Per Iteration, which tests Get Invalidate Work Pct Per Iteration_Negative Value, which tests Get Invalidate Work Pct Per Iteration_Greater Than One, which tests Get Repl Work Multiplier, which tests Update Does Not Cause Skipped Replication, which tests Add Stored Block Does Not Cause Skipped Replication, which tests Convert Last Block To Under Construction Does Not Cause Skipped Replication, which testupdates Needed Replications Does Not Cause Skipped Replication, which tests Choose Excess Replica Apart From Favored Nodes, which tests Choose From Favored Nodes When Prefer Local Set To False, which chooses int parameter of numOfReplicas, DatanodeDescriptor parameter of writer, Set<Node> parameter of excludedNodes, List<DatanodeDescriptor> parameter of favoredNodes Target, which chooses int parameter of numOfReplicas, DatanodeDescriptor parameter of writer, Set<Node> parameter of excludedNodes, List<DatanodeDescriptor> parameter of favoredNodes, EnumSet<AddBlockFlag> parameter of flags Target, which tests Avoid Local Write, which tests Avoid Local Write No Enough Nodes, which tests Max Load, which tests Chosen Failure For Storage Type, which tests Reduce Choose Times If NOStale Node, which tests Chosen Failure For Not Enough Storage Space.
TestReplicationPolicy acts as a publisher for observer DatanodeStorageInfo, which datas, which updates long parameter of capacity, long parameter of dfsUsed, long parameter of remaining, long parameter of blockPoolUsed Heartbeat For Extra Storage, which resets Heartbeat For Storages, which gets Configuration parameter of conf Datanode Descriptors, which tests Choose Node With Multiple Storages1, which tests Choose Node With Multiple Storages2, which tests Choose Target1, which tests Choose Target2, which tests Choose Target3, which tests Chooose Target4, which tests Choose Target5, which tests Choose Target6, which tests Choose Target With More Than Available Nodes With Staleness, which tests Choose Target With More Than Available Nodes, which contains DatanodeStorageInfo parameter of target, DatanodeDescriptor[] parameter of nodes, int parameter of startIndex, int parameter of endIndex Within Range, which contains DatanodeDescriptor parameter of target, DatanodeStorageInfo[] parameter of nodes, int parameter of startIndex, int parameter of endIndex Within Range, which tests Choose Target With Stale Nodes, which tests Choose Target With Half Stale Nodes, which tests Choose Target With More Than Half Stale Nodes, which tests Rereplicate1, which tests Rereplicate2, which tests Rereplicate3, which gens long parameter of id Block Info, which gens long parameter of id, boolean parameter of isBlockCorrupted Block Info, which tests Replication With Priority, which tests Choose Low Redundancy Blocks, which asserts List<List<BlockInfo>> parameter of chosenBlocks, int... parameter of expectedSizes The Chosen Blocks, which tests Choose Replica To Delete, which tests Striped Choose Replica To Delete, which calculates DatanodeDescriptor parameter of dataNode Remaining, which tests Choose Replicas To Delete, which tests Use Del Hint, which tests Is Movable, which tests Get Invalidate Work Pct Per Iteration, which tests Get Invalidate Work Pct Per Iteration_Negative Value, which tests Get Invalidate Work Pct Per Iteration_Greater Than One, which tests Get Repl Work Multiplier, which tests Update Does Not Cause Skipped Replication, which tests Add Stored Block Does Not Cause Skipped Replication, which tests Convert Last Block To Under Construction Does Not Cause Skipped Replication, which testupdates Needed Replications Does Not Cause Skipped Replication, which tests Choose Excess Replica Apart From Favored Nodes, which tests Choose From Favored Nodes When Prefer Local Set To False, which chooses int parameter of numOfReplicas, DatanodeDescriptor parameter of writer, Set<Node> parameter of excludedNodes, List<DatanodeDescriptor> parameter of favoredNodes Target, which chooses int parameter of numOfReplicas, DatanodeDescriptor parameter of writer, Set<Node> parameter of excludedNodes, List<DatanodeDescriptor> parameter of favoredNodes, EnumSet<AddBlockFlag> parameter of flags Target, which tests Avoid Local Write, which tests Avoid Local Write No Enough Nodes, which tests Max Load, which tests Chosen Failure For Storage Type, which tests Reduce Choose Times If NOStale Node, which tests Chosen Failure For Not Enough Storage Space.
