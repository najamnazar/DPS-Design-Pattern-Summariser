TestTaskImpl acts as a caretaker for memento TaskType, which gets Type, which creates Attempt, which gets Max Attempts, which internals TaskEventType parameter of type Error, which assigns Container, which is Container Assigned, which gets Attempt Id, which creates Remote Task, which gets Progress, which sets float parameter of progress Progress, which sets TaskAttemptState parameter of state State, which gets State, which gets Rescheduled, which sets boolean parameter of rescheduled Rescheduled, which gets Counters, which sets Counters parameter of counters Counters, which runs JobConf parameter of job, TaskUmbilicalProtocol parameter of umbilical, which is Map Task, which setups, which creates TaskType parameter of taskType Mock Task, which teardowns, which gets New Task ID, which schedules TaskId parameter of taskId Task Attempt, which kills TaskId parameter of taskId Task, which kills TaskAttemptId parameter of attemptId Scheduled Task Attempt, which kills TaskAttemptId parameter of attemptId, boolean parameter of reschedule Scheduled Task Attempt, which launches TaskAttemptId parameter of attemptId Task Attempt, which commits TaskAttemptId parameter of attemptId Task Attempt, which gets Last Attempt, which updates float parameter of p Last Attempt Progress, which updates TaskAttemptState parameter of s Last Attempt State, which kills TaskAttemptId parameter of attemptId Running Task Attempt, which kills TaskAttemptId parameter of attemptId, boolean parameter of reschedule Running Task Attempt, which fails TaskAttemptId parameter of attemptId Running Task Attempt, which asserts Task New State, which asserts Task Scheduled State, which asserts Task Running State, which asserts Task Kill Wait State, which asserts Task Succeeded State, which asserts Avataar parameter of avataar Task Attempt Avataar, which tests Init, which tests Schedule Task, which tests Kill Scheduled Task, which tests Kill Scheduled Task Attempt, which tests Launch Task Attempt, which tests Kill Running Task Attempt, which tests Kill Successful Task, which tests Kill Attempt For Successful Task, which tests Task Progress, which tests Kill During Task Attempt Commit, which tests Failure During Task Attempt Commit, which runs TaskEventType parameter of firstAttemptFinishEvent Speculative Task Attempt Succeeds, which tests Map Speculative Task Attempt Succeeds Even If First Fails, which tests Reduce Speculative Task Attempt Succeeds Even If First Fails, which tests Map Speculative Task Attempt Succeeds Even If First Is Killed, which tests Reduce Speculative Task Attempt Succeeds Even If First Is Killed, which tests Multiple Task Attempts Succeed, which tests Commit After Succeeds, which tests Speculative Map Fetch Failure, which tests Speculative Map Multiple Succeed Fetch Failure, which tests Speculative Map Failed Fetch Failure, which tests Failed Transitions, which handles Event parameter of event, which tests Failed Transition With Hanging Speculative Map, which tests Counters With Speculation, which handles Event parameter of event.
TestTaskImpl acts as a caretaker for memento TaskAttemptState, which gets Type, which creates Attempt, which gets Max Attempts, which internals TaskEventType parameter of type Error, which assigns Container, which is Container Assigned, which gets Attempt Id, which creates Remote Task, which gets Progress, which sets float parameter of progress Progress, which sets TaskAttemptState parameter of state State, which gets State, which gets Rescheduled, which sets boolean parameter of rescheduled Rescheduled, which gets Counters, which sets Counters parameter of counters Counters, which runs JobConf parameter of job, TaskUmbilicalProtocol parameter of umbilical, which is Map Task, which setups, which creates TaskType parameter of taskType Mock Task, which teardowns, which gets New Task ID, which schedules TaskId parameter of taskId Task Attempt, which kills TaskId parameter of taskId Task, which kills TaskAttemptId parameter of attemptId Scheduled Task Attempt, which kills TaskAttemptId parameter of attemptId, boolean parameter of reschedule Scheduled Task Attempt, which launches TaskAttemptId parameter of attemptId Task Attempt, which commits TaskAttemptId parameter of attemptId Task Attempt, which gets Last Attempt, which updates float parameter of p Last Attempt Progress, which updates TaskAttemptState parameter of s Last Attempt State, which kills TaskAttemptId parameter of attemptId Running Task Attempt, which kills TaskAttemptId parameter of attemptId, boolean parameter of reschedule Running Task Attempt, which fails TaskAttemptId parameter of attemptId Running Task Attempt, which asserts Task New State, which asserts Task Scheduled State, which asserts Task Running State, which asserts Task Kill Wait State, which asserts Task Succeeded State, which asserts Avataar parameter of avataar Task Attempt Avataar, which tests Init, which tests Schedule Task, which tests Kill Scheduled Task, which tests Kill Scheduled Task Attempt, which tests Launch Task Attempt, which tests Kill Running Task Attempt, which tests Kill Successful Task, which tests Kill Attempt For Successful Task, which tests Task Progress, which tests Kill During Task Attempt Commit, which tests Failure During Task Attempt Commit, which runs TaskEventType parameter of firstAttemptFinishEvent Speculative Task Attempt Succeeds, which tests Map Speculative Task Attempt Succeeds Even If First Fails, which tests Reduce Speculative Task Attempt Succeeds Even If First Fails, which tests Map Speculative Task Attempt Succeeds Even If First Is Killed, which tests Reduce Speculative Task Attempt Succeeds Even If First Is Killed, which tests Multiple Task Attempts Succeed, which tests Commit After Succeeds, which tests Speculative Map Fetch Failure, which tests Speculative Map Multiple Succeed Fetch Failure, which tests Speculative Map Failed Fetch Failure, which tests Failed Transitions, which handles Event parameter of event, which tests Failed Transition With Hanging Speculative Map, which tests Counters With Speculation, which handles Event parameter of event.
TestTaskImpl acts as a caretaker for memento Clock, which gets Type, which creates Attempt, which gets Max Attempts, which internals TaskEventType parameter of type Error, which assigns Container, which is Container Assigned, which gets Attempt Id, which creates Remote Task, which gets Progress, which sets float parameter of progress Progress, which sets TaskAttemptState parameter of state State, which gets State, which gets Rescheduled, which sets boolean parameter of rescheduled Rescheduled, which gets Counters, which sets Counters parameter of counters Counters, which runs JobConf parameter of job, TaskUmbilicalProtocol parameter of umbilical, which is Map Task, which setups, which creates TaskType parameter of taskType Mock Task, which teardowns, which gets New Task ID, which schedules TaskId parameter of taskId Task Attempt, which kills TaskId parameter of taskId Task, which kills TaskAttemptId parameter of attemptId Scheduled Task Attempt, which kills TaskAttemptId parameter of attemptId, boolean parameter of reschedule Scheduled Task Attempt, which launches TaskAttemptId parameter of attemptId Task Attempt, which commits TaskAttemptId parameter of attemptId Task Attempt, which gets Last Attempt, which updates float parameter of p Last Attempt Progress, which updates TaskAttemptState parameter of s Last Attempt State, which kills TaskAttemptId parameter of attemptId Running Task Attempt, which kills TaskAttemptId parameter of attemptId, boolean parameter of reschedule Running Task Attempt, which fails TaskAttemptId parameter of attemptId Running Task Attempt, which asserts Task New State, which asserts Task Scheduled State, which asserts Task Running State, which asserts Task Kill Wait State, which asserts Task Succeeded State, which asserts Avataar parameter of avataar Task Attempt Avataar, which tests Init, which tests Schedule Task, which tests Kill Scheduled Task, which tests Kill Scheduled Task Attempt, which tests Launch Task Attempt, which tests Kill Running Task Attempt, which tests Kill Successful Task, which tests Kill Attempt For Successful Task, which tests Task Progress, which tests Kill During Task Attempt Commit, which tests Failure During Task Attempt Commit, which runs TaskEventType parameter of firstAttemptFinishEvent Speculative Task Attempt Succeeds, which tests Map Speculative Task Attempt Succeeds Even If First Fails, which tests Reduce Speculative Task Attempt Succeeds Even If First Fails, which tests Map Speculative Task Attempt Succeeds Even If First Is Killed, which tests Reduce Speculative Task Attempt Succeeds Even If First Is Killed, which tests Multiple Task Attempts Succeed, which tests Commit After Succeeds, which tests Speculative Map Fetch Failure, which tests Speculative Map Multiple Succeed Fetch Failure, which tests Speculative Map Failed Fetch Failure, which tests Failed Transitions, which handles Event parameter of event, which tests Failed Transition With Hanging Speculative Map, which tests Counters With Speculation, which handles Event parameter of event.
