FairScheduler acts as a caretaker for memento Duration, which is inherited by, which gets Context, which gets RMContext, which is ResourceCalculator parameter of resourceCalculator, Resource parameter of resource At Least Reservation Threshold, which validates FairSchedulerConfiguration parameter of config Conf, which gets Conf, which gets String parameter of rackName Num Nodes In Rack, which gets Queue Manager, which runs, which dumps Scheduler State, which updates, which gets Container Token Secret Manager, which is Size Based Weight, which gets Increment Resource Capability, which gets NodeId parameter of nodeId FSScheduler Node, which gets Node Locality Threshold, which gets Rack Locality Threshold, which gets Node Locality Delay Ms, which gets Rack Locality Delay Ms, which is Continuous Scheduling Enabled, which gets Continuous Scheduling Sleep Ms, which adds ApplicationId parameter of applicationId, String parameter of queueName, String parameter of user, boolean parameter of isAppRecovering, ApplicationPlacementContext parameter of placementContext Application, which adds ApplicationAttemptId parameter of applicationAttemptId, boolean parameter of transferStateFromPreviousAttempt, boolean parameter of isAttemptRecovering Application Attempt, which removes ApplicationId parameter of applicationId, RMAppState parameter of finalState Application, which removes ApplicationAttemptId parameter of applicationAttemptId, RMAppAttemptState parameter of rmAppAttemptFinalState, boolean parameter of keepContainers Application Attempt, which completes RMContainer parameter of rmContainer, ContainerStatus parameter of containerStatus, RMContainerEventType parameter of event Container Internal, which adds List<NMContainerStatus> parameter of containerReports, RMNode parameter of node Node, which removes RMNode parameter of rmNode Node, which gets Resource parameter of requestedResource, Resource parameter of maxResourceCapability Normalized Resource, which gets String parameter of queueName Maximum Resource Capability, which kills RMContainer parameter of container Container, which allocates ApplicationAttemptId parameter of appAttemptId, List<ResourceRequest> parameter of ask, List<SchedulingRequest> parameter of schedulingRequests, List<ContainerId> parameter of release, List<String> parameter of blacklistAdditions, List<String> parameter of blacklistRemovals, ContainerUpdates parameter of updateRequests, which validates List<ResourceRequest> parameter of requests, FSLeafQueue parameter of queue Resource Requests, which nodes RMNode parameter of nm Update, which continuouses Scheduling Attempt, which compares FSSchedulerNode parameter of n1, FSSchedulerNode parameter of n2, which shoulds int parameter of containers, Resource parameter of maxResourcesToAssign, Resource parameter of assignedResource Continue Assigning, which assigns FSSchedulerNode parameter of node Preempted Containers, which attempts FSSchedulerNode parameter of node Scheduling, which gets ApplicationAttemptId parameter of appAttemptId Scheduler App, which gets Resource Calculator, which updates Root Queue Metrics, which shoulds Attempt Preemption, which gets Root Queue Metrics, which handles SchedulerEvent parameter of event, which resolves String parameter of queueName, ApplicationId parameter of applicationId, ReservationId parameter of reservationID, boolean parameter of isRecovering Reservation Queue Name, which rejects ApplicationId parameter of applicationId, String parameter of msg Application With Message, which gets String parameter of queueName Default Queue For Plan Queue, which recovers RMState parameter of state, which sets RMContext parameter of rmContext RMContext, which inits Configuration parameter of conf Scheduler, which creates Preemption Thread, which updates Reservation Threshold, which starts Scheduler Threads, which services Configuration parameter of conf Init, which services Start, which services Stop, which reinitializes Configuration parameter of conf, RMContext parameter of rmContext, which gets String parameter of queueName, boolean parameter of includeChildQueues, boolean parameter of recursive Queue Info, which gets Queue User Acl Info, which gets Num Cluster Nodes, which checks UserGroupInformation parameter of callerUGI, QueueACL parameter of acl, String parameter of queueName Access, which gets Allocation Configuration, which ons AllocationConfiguration parameter of queueInfo Reload, which gets AllocationConfiguration parameter of queueInfo Removed Static Queues, which ons Check, which sets Map<String, parameter of Map<AccessType, Queue Acls, which applies Child Defaults, which gets String parameter of queueName Apps In Queue, which moves ApplicationId parameter of appId, String parameter of queueName Application, which pres ApplicationId parameter of appId, String parameter of newQueue Validate Move Application, which verifies FSAppAttempt parameter of app, FSLeafQueue parameter of oldQueue, FSLeafQueue parameter of targetQueue Move Does Not Violate Constraints, which executes SchedulerApplication<FSAppAttempt> parameter of app, FSAppAttempt parameter of attempt, FSLeafQueue parameter of oldQueue, FSLeafQueue parameter of newQueue Move, which finds FSQueue parameter of queue1, FSQueue parameter of queue2 Lowest Common Ancestor Queue, which updates RMNode parameter of nm, ResourceOption parameter of resourceOption Node Resource, which gets Scheduling Resource Types, which gets Plan Queues, which sets String parameter of queueName, QueueEntitlement parameter of entitlement Entitlement, which removes String parameter of queueName Queue, which handles String parameter of targetQueueName Move To Plan Queue, which gets Reservable Nodes Ratio, which gets NMHeartbeat Interval, which gets Scheduler Read Lock, which checks String parameter of queueName, long parameter of lifetime, RMAppImpl parameter of app And Get Application Lifetime, which updates Priority parameter of newPriority, ApplicationId parameter of applicationId, SettableFuture<Object> parameter of future, UserGroupInformation parameter of user Application Priority, which is No Terminal Rule Check.
