FederationInterceptor acts as a caretaker for memento Clock, which is inherited by, which inits AMRMProxyApplicationContext parameter of appContext, which recovers Map<String, parameter of byte[]>, which recovers Map<String, parameter of byte[]> Sub Cluster AMRMToken Identifier Map, which recovers Map<String, parameter of byte[]> Sub Cluster AMRMToken Identifier Map From NMSS, which registers RegisterApplicationMasterRequest parameter of request Application Master, which stores String parameter of key, byte[] parameter of data AMRMProxy App Context Entry, which allocates AllocateRequest parameter of request, which finishes FinishApplicationMasterRequest parameter of request Application Master, which checks FinishApplicationMasterRequest parameter of request Request Final Application Status Success, which sets RequestInterceptor parameter of next Next Interceptor, which shutdowns, which removes App From Registry, which cleanups Registry, which gets Registry Client, which gets Attempt Id, which gets Home Heartbeat Handler, which creates ExecutorService parameter of threadPool Unmanaged AMPool Manager, which creates Configuration parameter of conf, ApplicationId parameter of appId, AMRMClientRelayer parameter of rmProxyRelayer Home Heartbeat Handler, which creates AMRMProxyApplicationContext parameter of appContext, Class<T> parameter of protocol, UserGroupInformation parameter of user Home RMProxy, which merges RegisterApplicationMasterResponse parameter of homeResponse, RegisterApplicationMasterResponse parameter of otherResponse Register Response, which res RegisterApplicationMasterResponse parameter of homeResponse, final parameter of ApplicationId Attach UAMAnd Merge Register Response, which gets String parameter of nodeName Sub Cluster For Node, which splits AllocateRequest parameter of request Allocate Request, which sends Map<SubClusterId, parameter of AllocateRequest> Requests To Resource Managers, which registers final parameter of Map<SubClusterId, And Allocate With New Sub Clusters, which launches YarnConfiguration parameter of config, String parameter of subClusterId, ApplicationId parameter of applicationId UAMAnd Register Application Master, which generates Base Allocation Response, which merges AllocateResponse parameter of mergedResponse Allocate Responses, which removes List<ContainerStatus> parameter of finishedContainers Finished Containers From Cache, which merges AllocateResponse parameter of homeResponse, Map<SubClusterId, parameter of RegisterApplicationMasterResponse> Registration Responses, which merges AllocateResponse parameter of homeResponse, AllocateResponse parameter of otherResponse, SubClusterId parameter of otherRMAddress Allocate Response, which caches List<Container> parameter of containers, SubClusterId parameter of subClusterId Allocated Containers, which finds SubClusterId parameter of subClusterId, AllocateRequest parameter of originalAMRequest, Map<SubClusterId, parameter of AllocateRequest> Or Create Allocate Request For Sub Cluster, which creates Allocate Request, which gets boolean parameter of verbose Timed Out SCs, which warns ContainerId parameter of containerId, String parameter of actionName If Not Exists, which splits List<ResourceRequest> parameter of askList Resource Requests, which gets Unmanaged AMPool Size, which gets Unmanaged AMPool, which gets Uam Register Futures, which gets Async Response Sink, which callbacks AllocateResponse parameter of response, which gets Response, which gets Sub Cluster Id, which is Collection<T> parameter of c Null Or Empty, which is Map<T1, parameter of T2> Null Or Empty, which caches List<Container> parameter of containers, SubClusterId parameter of subClusterId Allocated Containers For Sub Cluster Id, which gets Container Id To Sub Cluster Id Map, which is SubClusterId parameter of subClusterId SCHealth.
FederationInterceptor acts as a caretaker for memento AMRMProxyApplicationContext, which inits AMRMProxyApplicationContext parameter of appContext, which recovers Map<String, parameter of byte[]>, which recovers Map<String, parameter of byte[]> Sub Cluster AMRMToken Identifier Map, which recovers Map<String, parameter of byte[]> Sub Cluster AMRMToken Identifier Map From NMSS, which registers RegisterApplicationMasterRequest parameter of request Application Master, which stores String parameter of key, byte[] parameter of data AMRMProxy App Context Entry, which allocates AllocateRequest parameter of request, which finishes FinishApplicationMasterRequest parameter of request Application Master, which checks FinishApplicationMasterRequest parameter of request Request Final Application Status Success, which sets RequestInterceptor parameter of next Next Interceptor, which shutdowns, which removes App From Registry, which cleanups Registry, which gets Registry Client, which gets Attempt Id, which gets Home Heartbeat Handler, which creates ExecutorService parameter of threadPool Unmanaged AMPool Manager, which creates Configuration parameter of conf, ApplicationId parameter of appId, AMRMClientRelayer parameter of rmProxyRelayer Home Heartbeat Handler, which creates AMRMProxyApplicationContext parameter of appContext, Class<T> parameter of protocol, UserGroupInformation parameter of user Home RMProxy, which merges RegisterApplicationMasterResponse parameter of homeResponse, RegisterApplicationMasterResponse parameter of otherResponse Register Response, which res RegisterApplicationMasterResponse parameter of homeResponse, final parameter of ApplicationId Attach UAMAnd Merge Register Response, which gets String parameter of nodeName Sub Cluster For Node, which splits AllocateRequest parameter of request Allocate Request, which sends Map<SubClusterId, parameter of AllocateRequest> Requests To Resource Managers, which registers final parameter of Map<SubClusterId, And Allocate With New Sub Clusters, which launches YarnConfiguration parameter of config, String parameter of subClusterId, ApplicationId parameter of applicationId UAMAnd Register Application Master, which generates Base Allocation Response, which merges AllocateResponse parameter of mergedResponse Allocate Responses, which removes List<ContainerStatus> parameter of finishedContainers Finished Containers From Cache, which merges AllocateResponse parameter of homeResponse, Map<SubClusterId, parameter of RegisterApplicationMasterResponse> Registration Responses, which merges AllocateResponse parameter of homeResponse, AllocateResponse parameter of otherResponse, SubClusterId parameter of otherRMAddress Allocate Response, which caches List<Container> parameter of containers, SubClusterId parameter of subClusterId Allocated Containers, which finds SubClusterId parameter of subClusterId, AllocateRequest parameter of originalAMRequest, Map<SubClusterId, parameter of AllocateRequest> Or Create Allocate Request For Sub Cluster, which creates Allocate Request, which gets boolean parameter of verbose Timed Out SCs, which warns ContainerId parameter of containerId, String parameter of actionName If Not Exists, which splits List<ResourceRequest> parameter of askList Resource Requests, which gets Unmanaged AMPool Size, which gets Unmanaged AMPool, which gets Uam Register Futures, which gets Async Response Sink, which callbacks AllocateResponse parameter of response, which gets Response, which gets Sub Cluster Id, which is Collection<T> parameter of c Null Or Empty, which is Map<T1, parameter of T2> Null Or Empty, which caches List<Container> parameter of containers, SubClusterId parameter of subClusterId Allocated Containers For Sub Cluster Id, which gets Container Id To Sub Cluster Id Map, which is SubClusterId parameter of subClusterId SCHealth.
