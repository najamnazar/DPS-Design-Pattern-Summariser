BeanLanguage acts as a caretaker for memento Component, which gets Bean, which sets Object parameter of bean Bean, which gets Bean Type, which sets Class<?> parameter of beanType Bean Type, which gets Ref, which sets String parameter of ref Ref, which gets Method, which sets String parameter of method Method, which gets Scope, which sets BeanScope parameter of scope Scope, which configures CamelContext parameter of camelContext, Object parameter of target, String parameter of name, Object parameter of value, boolean parameter of ignoreCase, which creates String parameter of expression Predicate, which creates String parameter of expression, Object[] parameter of properties Predicate, which creates String parameter of expression, Object[] parameter of properties Expression, which creates String parameter of expression Expression, which evaluates String parameter of script, Map<String, parameter of Object>, Class<T> parameter of resultType, which starts, which stops.
BeanLanguage acts as a caretaker for memento Language, which gets Bean, which sets Object parameter of bean Bean, which gets Bean Type, which sets Class<?> parameter of beanType Bean Type, which gets Ref, which sets String parameter of ref Ref, which gets Method, which sets String parameter of method Method, which gets Scope, which sets BeanScope parameter of scope Scope, which configures CamelContext parameter of camelContext, Object parameter of target, String parameter of name, Object parameter of value, boolean parameter of ignoreCase, which creates String parameter of expression Predicate, which creates String parameter of expression, Object[] parameter of properties Predicate, which creates String parameter of expression, Object[] parameter of properties Expression, which creates String parameter of expression Expression, which evaluates String parameter of script, Map<String, parameter of Object>, Class<T> parameter of resultType, which starts, which stops.
