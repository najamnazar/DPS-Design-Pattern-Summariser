ThirdPartyInstrumentationIT acts as a publisher for observer ProducerTemplate, which does Post Setup, which creates Camel Context, which tests Basic Integration Use Case, which tests Tracing Context Is Cleaned Up, which tests Camel Integrates Into Active Trace, which gets List<MockSpan> parameter of actualSpans Trace Ids, which traces Exchange parameter of exchange Processor, which executes ThrowingRunnable<Exception> parameter of closure In Third Party Span, which creates Route Builder.
ThirdPartyInstrumentationIT acts as a publisher for observer CamelContext, which does Post Setup, which creates Camel Context, which tests Basic Integration Use Case, which tests Tracing Context Is Cleaned Up, which tests Camel Integrates Into Active Trace, which gets List<MockSpan> parameter of actualSpans Trace Ids, which traces Exchange parameter of exchange Processor, which executes ThrowingRunnable<Exception> parameter of closure In Third Party Span, which creates Route Builder.
ThirdPartyInstrumentationIT acts as a publisher for observer Service, which does Post Setup, which creates Camel Context, which tests Basic Integration Use Case, which tests Tracing Context Is Cleaned Up, which tests Camel Integrates Into Active Trace, which gets List<MockSpan> parameter of actualSpans Trace Ids, which traces Exchange parameter of exchange Processor, which executes ThrowingRunnable<Exception> parameter of closure In Third Party Span, which creates Route Builder.
ThirdPartyInstrumentationIT acts as a publisher for observer ConsumerTemplate, which does Post Setup, which creates Camel Context, which tests Basic Integration Use Case, which tests Tracing Context Is Cleaned Up, which tests Camel Integrates Into Active Trace, which gets List<MockSpan> parameter of actualSpans Trace Ids, which traces Exchange parameter of exchange Processor, which executes ThrowingRunnable<Exception> parameter of closure In Third Party Span, which creates Route Builder.
ThirdPartyInstrumentationIT acts as a publisher for observer FluentProducerTemplate, which does Post Setup, which creates Camel Context, which tests Basic Integration Use Case, which tests Tracing Context Is Cleaned Up, which tests Camel Integrates Into Active Trace, which gets List<MockSpan> parameter of actualSpans Trace Ids, which traces Exchange parameter of exchange Processor, which executes ThrowingRunnable<Exception> parameter of closure In Third Party Span, which creates Route Builder.
