CamelInternalProcessor acts as a publisher for observer AsyncProcessor, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer UnitOfWork, which is inherited by DefaultChannel, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer Route, which is inherited by DefaultChannel, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer AsyncCallback, which is inherited by DefaultChannel, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer InflightRepository, which is inherited by DefaultChannel, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer Processor, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer CamelContext, which is inherited by DefaultChannel, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer RoutePolicy, which is inherited by DefaultChannel, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer InflightRepository, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer Exchange, which is inherited by DefaultChannel, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer MessageHistory, which is inherited by DefaultChannel, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
CamelInternalProcessor acts as a publisher for observer Route, which does Build, which does Shutdown, which adds CamelInternalProcessorAdvice<?> parameter of advice Advice, which gets Class<T> parameter of type Advice, which adds List<RoutePolicy> parameter of routePolicyList Route Policy Advice, which adds InflightRepository parameter of inflightRepository, String parameter of routeId Route Inflight Repository Advice, which adds Route Lifecycle Advice, which adds InstrumentationProcessor parameter of processor Management Intercept Strategy, which sets Route parameter of route Route On Advices, which prepares Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which gets States, which resets, which does boolean parameter of doneSync, which processes Exchange parameter of exchange, AsyncCallback parameter of originalCallback, which tos String, which sets Route parameter of route Route, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of object, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of state, which has State, which sets Route parameter of route Route, which is RoutePolicy parameter of policy Route Policy Run Allowed, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which is CamelContext parameter of context Camel Stopping, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StopWatch parameter of stopWatch, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, UnitOfWork parameter of uow, which creates Exchange parameter of exchange Unit Of Work, which creates Exchange parameter of exchange Unit Of Work, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, MessageHistory parameter of history, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, StreamCache parameter of sc, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, Object parameter of data, which has State, which ons Route parameter of route, Exchange parameter of exchange After Route, which equals Object parameter of o, which hashes Code, which wraps InstrumentationProcessor<T> parameter of instrumentationProcessor, which unwraps CamelInternalProcessorAdvice<?> parameter of advice, which unwraps, which gets Order, which befores Exchange parameter of exchange, which afters Exchange parameter of exchange, T parameter of data.
