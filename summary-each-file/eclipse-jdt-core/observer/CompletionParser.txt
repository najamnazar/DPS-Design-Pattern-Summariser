CompletionParser acts as a publisher for observer Object, which is inherited by, which adds char[] parameter of potentialVariableName, int parameter of start, int parameter of end Potential Name, which starts int parameter of from, int parameter of to Recording Identifiers, which stops Recording Identifiers, which assists Identifier, which assists Node Parent, which detects ASTNode parameter of node Assist Node Parent, which attaches Orphan Completion Node, which gets Local Declaration From Ast Stack, which becomes Simple Parser, which builds MemberValuePair parameter of memberValuePair More Annotation Completion Context, which builds Expression parameter of expression More Completion Context, which assembles Expression parameter of innerStatement Switch, which pops ASTNode parameter of soughtStatement Block Containing, which builds Statement parameter of statement More Completion Enclosing Context, which is Object parameter of object Instance Of Guard, which builds ASTNode parameter of node, boolean parameter of consumeTypeArguments More Generics Completion Context, which builds TypeReference parameter of exceptionRef More Try Statement Completion Context, which bodies Initializer parameter of initializer End, which checks int parameter of flag And Set Modifiers, which consumes Push Combine Modifiers, which checks Class Instance Creation, which checks Class Literal Access, which checks Keyword And Restricted Identifiers, which gets Keyword, which gets ModuleKeyword parameter of keyword Module Keywords, which checks Module Info Constructs, which checks RecoveredModule parameter of module, int parameter of index Module Info Keyword, which checks Instanceof Keyword, which checks Yield Keyword, which checks Invocation, which checks Label Statement, which checks Member Access, which checks Name Completion, which checks Paremeterized Method Name, which checks Paremeterized Type, which checks Recovered Method, which checks Member Value Name, which checks Recovered Type, which classes boolean parameter of isInterface, boolean parameter of isRecord, boolean parameter of isEnum Header Extends Or Implements, which completions Identifier Check, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes boolean parameter of shouldConcat, boolean parameter of isSwitchRule Switch Labels, which consumes Cast Expression With Primitive Type, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Qualified Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression LL1, which consumes Catch Formal Parameter, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header Name1, which consumes Record Header Part, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Instance Creation Expression Name, which consumes Class Type Elt, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Dim With Or With Out Expr, which consumes Empty Statement, which consumes Block Statement, which consumes Enhanced For Statement, which consumes Enhanced For Statement Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Variable, which consumes Enum Constant Header Name, which consumes Enum Constant No Class Body, which consumes Enum Constant With Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes boolean parameter of isSuperAccess Field Access, which consumes Force No Diet, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes Generic Type With Diamond, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression LL1With Bounds, which consumes Inside Cast Expression With Qualified Generics, which consumes Instance Of Expression, which consumes Instance Of Expression With Name, which consumes Interface Header Name1, which consumes Interface Header Extends, which consumes Interface Type, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which adjusts Positions Of Message Send On Stack, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Extended Dims, which consumes Annotation As Modifier, which consumes Additional Bound, which consumes Additional Bound1, which consumes Annotation Name, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Label, which consumes Lambda Expression, which types Elided Argument, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes Member Value Pair, which consumes Member Value As Name, which consumes Method Body, which consumes Method Header, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Modifiers, which consumes Module Header, which consumes Provides Interface, which consumes Provides Statement, which consumes With Clause, which consumes Reference Type, which consumes Requires Statement, which consumes Restore Diet, which consumes Exports Statement, which consumes Single Pkg Name, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break With Label, which consumes Statement Label, which consumes boolean parameter of isStmt Switch Statement Or Expression, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Nested Method, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Primary No New Array Name, which consumes Qualified Super Receiver, which consumes Primary No New Array Name This, which consumes Push Position, which consumes SwitchRuleKind parameter of kind Switch Rule, which fetches Next Token, which reduces TerminalToken parameter of token, which consumes TerminalToken parameter of token Token, which is TerminalToken parameter of token Inside Enhanced For Loop Without Block, which consumes Invocation Expression, which consumes ReferenceExpression parameter of referenceExpression Reference Expression, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Fake Block, which consumes Opens Statement, which consumes Right Paren, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Header Name With Type Parameters, which consumes Type Import On Demand Declaration Name, which consumes Import Declaration, which consumes Type Parameters, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Union Type, which consumes Union Type As Class Type, which consumes Uses Statement, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard2, which consumes Wildcard3, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds3Extends, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which checks char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions And Create Module Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of assistName, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which computes int parameter of kind, List<char[]> parameter of keywords Keywords, which checks char[] parameter of assistName, long parameter of position And Create Module Single Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates char[] parameter of token, int parameter of start, int parameter of end, int parameter of lineNumber String Literal, which augments TypeReference parameter of typeRef, int parameter of additionalDimensions, Annotation[][] parameter of additionalAnnotations, boolean parameter of isVarargs Type With Additional Dimensions, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc Parse, which flushes Assist State, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which updates Expression parameter of exp Source Position, which consumes Postfix Expression, which gets Unspecified Reference Optimized, which is int parameter of identifierStart Already Potential Name, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which copies Parser parameter of from State, which initializes For Block Statements, which initializes Scanner, which is After Array Type, which is Empty Name Completion, which is Inside Annotation, which is Inside Switch, which is Inside Breakable, which is Inside Loop, which is Inside Return, which news Reference Expression, which news Message Send, which news Message Send With Type Arguments, which internals New Message Send, which news boolean parameter of isQualified Allocation Expression, which checks If At First Argument Of Constructor, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses int parameter of start, int parameter of end, int parameter of fakeBlocksCount, CompilationUnitDeclaration parameter of unit Some Statements, which pops Until Completed Annotation If Necessary, which prepares For Block Statements, which pushes char[] parameter of label On Label Stack, which pushes boolean parameter of isSuperAccess Completion On Member Access On Expression Stack, which records NameReference parameter of nameReference Reference, which recoveries Exit From Variable, which recoveries Token Check, which creates Snap Shot Parser, which resets, which resets After Completion, which restores Object parameter of parserState Assist Parser, which resumes On Syntax Error, which resumes After Recovery, which sets char[] parameter of assistIdent Assist Identifier, which shoulds Stack Assist Node, which assists Node Needs Stacking, which tos String, which updates Recovery State, which ends int parameter of act Parse, which is Statement parameter of statement, AbstractMethodDeclaration parameter of method Inside Body, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which creates Javadoc Parser, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of identifierName, long parameter of namePositions, TypeReference parameter of type, int parameter of modifier, int parameter of declStart Component, which stacks Object[] parameter of stackToSearch, int parameter of startIndex Has Instance Of Expression, which is Inside Array Initializer, which founds int parameter of token Token, which acts int parameter of previousAct From Token Or Synthetic, which is In Import Statement, which is In Exports Statement, which is In Opens Statement, which is In Requires Statement, which is In Uses Statement, which is In Provides Statement, which is After With Clause, which is In Module Statements.
CompletionParser acts as a publisher for observer Object, which adds char[] parameter of potentialVariableName, int parameter of start, int parameter of end Potential Name, which starts int parameter of from, int parameter of to Recording Identifiers, which stops Recording Identifiers, which assists Identifier, which assists Node Parent, which detects ASTNode parameter of node Assist Node Parent, which attaches Orphan Completion Node, which gets Local Declaration From Ast Stack, which becomes Simple Parser, which builds MemberValuePair parameter of memberValuePair More Annotation Completion Context, which builds Expression parameter of expression More Completion Context, which assembles Expression parameter of innerStatement Switch, which pops ASTNode parameter of soughtStatement Block Containing, which builds Statement parameter of statement More Completion Enclosing Context, which is Object parameter of object Instance Of Guard, which builds ASTNode parameter of node, boolean parameter of consumeTypeArguments More Generics Completion Context, which builds TypeReference parameter of exceptionRef More Try Statement Completion Context, which bodies Initializer parameter of initializer End, which checks int parameter of flag And Set Modifiers, which consumes Push Combine Modifiers, which checks Class Instance Creation, which checks Class Literal Access, which checks Keyword And Restricted Identifiers, which gets Keyword, which gets ModuleKeyword parameter of keyword Module Keywords, which checks Module Info Constructs, which checks RecoveredModule parameter of module, int parameter of index Module Info Keyword, which checks Instanceof Keyword, which checks Yield Keyword, which checks Invocation, which checks Label Statement, which checks Member Access, which checks Name Completion, which checks Paremeterized Method Name, which checks Paremeterized Type, which checks Recovered Method, which checks Member Value Name, which checks Recovered Type, which classes boolean parameter of isInterface, boolean parameter of isRecord, boolean parameter of isEnum Header Extends Or Implements, which completions Identifier Check, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes boolean parameter of shouldConcat, boolean parameter of isSwitchRule Switch Labels, which consumes Cast Expression With Primitive Type, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Qualified Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression LL1, which consumes Catch Formal Parameter, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header Name1, which consumes Record Header Part, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Instance Creation Expression Name, which consumes Class Type Elt, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Dim With Or With Out Expr, which consumes Empty Statement, which consumes Block Statement, which consumes Enhanced For Statement, which consumes Enhanced For Statement Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Variable, which consumes Enum Constant Header Name, which consumes Enum Constant No Class Body, which consumes Enum Constant With Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes boolean parameter of isSuperAccess Field Access, which consumes Force No Diet, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes Generic Type With Diamond, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression LL1With Bounds, which consumes Inside Cast Expression With Qualified Generics, which consumes Instance Of Expression, which consumes Instance Of Expression With Name, which consumes Interface Header Name1, which consumes Interface Header Extends, which consumes Interface Type, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which adjusts Positions Of Message Send On Stack, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Extended Dims, which consumes Annotation As Modifier, which consumes Additional Bound, which consumes Additional Bound1, which consumes Annotation Name, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Label, which consumes Lambda Expression, which types Elided Argument, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes Member Value Pair, which consumes Member Value As Name, which consumes Method Body, which consumes Method Header, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Modifiers, which consumes Module Header, which consumes Provides Interface, which consumes Provides Statement, which consumes With Clause, which consumes Reference Type, which consumes Requires Statement, which consumes Restore Diet, which consumes Exports Statement, which consumes Single Pkg Name, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break With Label, which consumes Statement Label, which consumes boolean parameter of isStmt Switch Statement Or Expression, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Nested Method, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Primary No New Array Name, which consumes Qualified Super Receiver, which consumes Primary No New Array Name This, which consumes Push Position, which consumes SwitchRuleKind parameter of kind Switch Rule, which fetches Next Token, which reduces TerminalToken parameter of token, which consumes TerminalToken parameter of token Token, which is TerminalToken parameter of token Inside Enhanced For Loop Without Block, which consumes Invocation Expression, which consumes ReferenceExpression parameter of referenceExpression Reference Expression, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Fake Block, which consumes Opens Statement, which consumes Right Paren, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Header Name With Type Parameters, which consumes Type Import On Demand Declaration Name, which consumes Import Declaration, which consumes Type Parameters, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Union Type, which consumes Union Type As Class Type, which consumes Uses Statement, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard2, which consumes Wildcard3, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds3Extends, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which checks char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions And Create Module Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of assistName, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which computes int parameter of kind, List<char[]> parameter of keywords Keywords, which checks char[] parameter of assistName, long parameter of position And Create Module Single Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates char[] parameter of token, int parameter of start, int parameter of end, int parameter of lineNumber String Literal, which augments TypeReference parameter of typeRef, int parameter of additionalDimensions, Annotation[][] parameter of additionalAnnotations, boolean parameter of isVarargs Type With Additional Dimensions, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc Parse, which flushes Assist State, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which updates Expression parameter of exp Source Position, which consumes Postfix Expression, which gets Unspecified Reference Optimized, which is int parameter of identifierStart Already Potential Name, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which copies Parser parameter of from State, which initializes For Block Statements, which initializes Scanner, which is After Array Type, which is Empty Name Completion, which is Inside Annotation, which is Inside Switch, which is Inside Breakable, which is Inside Loop, which is Inside Return, which news Reference Expression, which news Message Send, which news Message Send With Type Arguments, which internals New Message Send, which news boolean parameter of isQualified Allocation Expression, which checks If At First Argument Of Constructor, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses int parameter of start, int parameter of end, int parameter of fakeBlocksCount, CompilationUnitDeclaration parameter of unit Some Statements, which pops Until Completed Annotation If Necessary, which prepares For Block Statements, which pushes char[] parameter of label On Label Stack, which pushes boolean parameter of isSuperAccess Completion On Member Access On Expression Stack, which records NameReference parameter of nameReference Reference, which recoveries Exit From Variable, which recoveries Token Check, which creates Snap Shot Parser, which resets, which resets After Completion, which restores Object parameter of parserState Assist Parser, which resumes On Syntax Error, which resumes After Recovery, which sets char[] parameter of assistIdent Assist Identifier, which shoulds Stack Assist Node, which assists Node Needs Stacking, which tos String, which updates Recovery State, which ends int parameter of act Parse, which is Statement parameter of statement, AbstractMethodDeclaration parameter of method Inside Body, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which creates Javadoc Parser, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of identifierName, long parameter of namePositions, TypeReference parameter of type, int parameter of modifier, int parameter of declStart Component, which stacks Object[] parameter of stackToSearch, int parameter of startIndex Has Instance Of Expression, which is Inside Array Initializer, which founds int parameter of token Token, which acts int parameter of previousAct From Token Or Synthetic, which is In Import Statement, which is In Exports Statement, which is In Opens Statement, which is In Requires Statement, which is In Uses Statement, which is In Provides Statement, which is After With Clause, which is In Module Statements.
CompletionParser acts as a publisher for observer ASTNode, which adds char[] parameter of potentialVariableName, int parameter of start, int parameter of end Potential Name, which starts int parameter of from, int parameter of to Recording Identifiers, which stops Recording Identifiers, which assists Identifier, which assists Node Parent, which detects ASTNode parameter of node Assist Node Parent, which attaches Orphan Completion Node, which gets Local Declaration From Ast Stack, which becomes Simple Parser, which builds MemberValuePair parameter of memberValuePair More Annotation Completion Context, which builds Expression parameter of expression More Completion Context, which assembles Expression parameter of innerStatement Switch, which pops ASTNode parameter of soughtStatement Block Containing, which builds Statement parameter of statement More Completion Enclosing Context, which is Object parameter of object Instance Of Guard, which builds ASTNode parameter of node, boolean parameter of consumeTypeArguments More Generics Completion Context, which builds TypeReference parameter of exceptionRef More Try Statement Completion Context, which bodies Initializer parameter of initializer End, which checks int parameter of flag And Set Modifiers, which consumes Push Combine Modifiers, which checks Class Instance Creation, which checks Class Literal Access, which checks Keyword And Restricted Identifiers, which gets Keyword, which gets ModuleKeyword parameter of keyword Module Keywords, which checks Module Info Constructs, which checks RecoveredModule parameter of module, int parameter of index Module Info Keyword, which checks Instanceof Keyword, which checks Yield Keyword, which checks Invocation, which checks Label Statement, which checks Member Access, which checks Name Completion, which checks Paremeterized Method Name, which checks Paremeterized Type, which checks Recovered Method, which checks Member Value Name, which checks Recovered Type, which classes boolean parameter of isInterface, boolean parameter of isRecord, boolean parameter of isEnum Header Extends Or Implements, which completions Identifier Check, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes boolean parameter of shouldConcat, boolean parameter of isSwitchRule Switch Labels, which consumes Cast Expression With Primitive Type, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Qualified Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression LL1, which consumes Catch Formal Parameter, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header Name1, which consumes Record Header Part, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Instance Creation Expression Name, which consumes Class Type Elt, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Dim With Or With Out Expr, which consumes Empty Statement, which consumes Block Statement, which consumes Enhanced For Statement, which consumes Enhanced For Statement Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Variable, which consumes Enum Constant Header Name, which consumes Enum Constant No Class Body, which consumes Enum Constant With Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes boolean parameter of isSuperAccess Field Access, which consumes Force No Diet, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes Generic Type With Diamond, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression LL1With Bounds, which consumes Inside Cast Expression With Qualified Generics, which consumes Instance Of Expression, which consumes Instance Of Expression With Name, which consumes Interface Header Name1, which consumes Interface Header Extends, which consumes Interface Type, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which adjusts Positions Of Message Send On Stack, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Extended Dims, which consumes Annotation As Modifier, which consumes Additional Bound, which consumes Additional Bound1, which consumes Annotation Name, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Label, which consumes Lambda Expression, which types Elided Argument, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes Member Value Pair, which consumes Member Value As Name, which consumes Method Body, which consumes Method Header, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Modifiers, which consumes Module Header, which consumes Provides Interface, which consumes Provides Statement, which consumes With Clause, which consumes Reference Type, which consumes Requires Statement, which consumes Restore Diet, which consumes Exports Statement, which consumes Single Pkg Name, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break With Label, which consumes Statement Label, which consumes boolean parameter of isStmt Switch Statement Or Expression, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Nested Method, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Primary No New Array Name, which consumes Qualified Super Receiver, which consumes Primary No New Array Name This, which consumes Push Position, which consumes SwitchRuleKind parameter of kind Switch Rule, which fetches Next Token, which reduces TerminalToken parameter of token, which consumes TerminalToken parameter of token Token, which is TerminalToken parameter of token Inside Enhanced For Loop Without Block, which consumes Invocation Expression, which consumes ReferenceExpression parameter of referenceExpression Reference Expression, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Fake Block, which consumes Opens Statement, which consumes Right Paren, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Header Name With Type Parameters, which consumes Type Import On Demand Declaration Name, which consumes Import Declaration, which consumes Type Parameters, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Union Type, which consumes Union Type As Class Type, which consumes Uses Statement, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard2, which consumes Wildcard3, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds3Extends, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which checks char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions And Create Module Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of assistName, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which computes int parameter of kind, List<char[]> parameter of keywords Keywords, which checks char[] parameter of assistName, long parameter of position And Create Module Single Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates char[] parameter of token, int parameter of start, int parameter of end, int parameter of lineNumber String Literal, which augments TypeReference parameter of typeRef, int parameter of additionalDimensions, Annotation[][] parameter of additionalAnnotations, boolean parameter of isVarargs Type With Additional Dimensions, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc Parse, which flushes Assist State, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which updates Expression parameter of exp Source Position, which consumes Postfix Expression, which gets Unspecified Reference Optimized, which is int parameter of identifierStart Already Potential Name, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which copies Parser parameter of from State, which initializes For Block Statements, which initializes Scanner, which is After Array Type, which is Empty Name Completion, which is Inside Annotation, which is Inside Switch, which is Inside Breakable, which is Inside Loop, which is Inside Return, which news Reference Expression, which news Message Send, which news Message Send With Type Arguments, which internals New Message Send, which news boolean parameter of isQualified Allocation Expression, which checks If At First Argument Of Constructor, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses int parameter of start, int parameter of end, int parameter of fakeBlocksCount, CompilationUnitDeclaration parameter of unit Some Statements, which pops Until Completed Annotation If Necessary, which prepares For Block Statements, which pushes char[] parameter of label On Label Stack, which pushes boolean parameter of isSuperAccess Completion On Member Access On Expression Stack, which records NameReference parameter of nameReference Reference, which recoveries Exit From Variable, which recoveries Token Check, which creates Snap Shot Parser, which resets, which resets After Completion, which restores Object parameter of parserState Assist Parser, which resumes On Syntax Error, which resumes After Recovery, which sets char[] parameter of assistIdent Assist Identifier, which shoulds Stack Assist Node, which assists Node Needs Stacking, which tos String, which updates Recovery State, which ends int parameter of act Parse, which is Statement parameter of statement, AbstractMethodDeclaration parameter of method Inside Body, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which creates Javadoc Parser, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of identifierName, long parameter of namePositions, TypeReference parameter of type, int parameter of modifier, int parameter of declStart Component, which stacks Object[] parameter of stackToSearch, int parameter of startIndex Has Instance Of Expression, which is Inside Array Initializer, which founds int parameter of token Token, which acts int parameter of previousAct From Token Or Synthetic, which is In Import Statement, which is In Exports Statement, which is In Opens Statement, which is In Requires Statement, which is In Uses Statement, which is In Provides Statement, which is After With Clause, which is In Module Statements.
CompletionParser acts as a publisher for observer TerminalToken, which adds char[] parameter of potentialVariableName, int parameter of start, int parameter of end Potential Name, which starts int parameter of from, int parameter of to Recording Identifiers, which stops Recording Identifiers, which assists Identifier, which assists Node Parent, which detects ASTNode parameter of node Assist Node Parent, which attaches Orphan Completion Node, which gets Local Declaration From Ast Stack, which becomes Simple Parser, which builds MemberValuePair parameter of memberValuePair More Annotation Completion Context, which builds Expression parameter of expression More Completion Context, which assembles Expression parameter of innerStatement Switch, which pops ASTNode parameter of soughtStatement Block Containing, which builds Statement parameter of statement More Completion Enclosing Context, which is Object parameter of object Instance Of Guard, which builds ASTNode parameter of node, boolean parameter of consumeTypeArguments More Generics Completion Context, which builds TypeReference parameter of exceptionRef More Try Statement Completion Context, which bodies Initializer parameter of initializer End, which checks int parameter of flag And Set Modifiers, which consumes Push Combine Modifiers, which checks Class Instance Creation, which checks Class Literal Access, which checks Keyword And Restricted Identifiers, which gets Keyword, which gets ModuleKeyword parameter of keyword Module Keywords, which checks Module Info Constructs, which checks RecoveredModule parameter of module, int parameter of index Module Info Keyword, which checks Instanceof Keyword, which checks Yield Keyword, which checks Invocation, which checks Label Statement, which checks Member Access, which checks Name Completion, which checks Paremeterized Method Name, which checks Paremeterized Type, which checks Recovered Method, which checks Member Value Name, which checks Recovered Type, which classes boolean parameter of isInterface, boolean parameter of isRecord, boolean parameter of isEnum Header Extends Or Implements, which completions Identifier Check, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes boolean parameter of shouldConcat, boolean parameter of isSwitchRule Switch Labels, which consumes Cast Expression With Primitive Type, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Qualified Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression LL1, which consumes Catch Formal Parameter, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header Name1, which consumes Record Header Part, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Instance Creation Expression Name, which consumes Class Type Elt, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Dim With Or With Out Expr, which consumes Empty Statement, which consumes Block Statement, which consumes Enhanced For Statement, which consumes Enhanced For Statement Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Variable, which consumes Enum Constant Header Name, which consumes Enum Constant No Class Body, which consumes Enum Constant With Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes boolean parameter of isSuperAccess Field Access, which consumes Force No Diet, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes Generic Type With Diamond, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression LL1With Bounds, which consumes Inside Cast Expression With Qualified Generics, which consumes Instance Of Expression, which consumes Instance Of Expression With Name, which consumes Interface Header Name1, which consumes Interface Header Extends, which consumes Interface Type, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which adjusts Positions Of Message Send On Stack, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Extended Dims, which consumes Annotation As Modifier, which consumes Additional Bound, which consumes Additional Bound1, which consumes Annotation Name, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Label, which consumes Lambda Expression, which types Elided Argument, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes Member Value Pair, which consumes Member Value As Name, which consumes Method Body, which consumes Method Header, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Modifiers, which consumes Module Header, which consumes Provides Interface, which consumes Provides Statement, which consumes With Clause, which consumes Reference Type, which consumes Requires Statement, which consumes Restore Diet, which consumes Exports Statement, which consumes Single Pkg Name, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break With Label, which consumes Statement Label, which consumes boolean parameter of isStmt Switch Statement Or Expression, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Nested Method, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Primary No New Array Name, which consumes Qualified Super Receiver, which consumes Primary No New Array Name This, which consumes Push Position, which consumes SwitchRuleKind parameter of kind Switch Rule, which fetches Next Token, which reduces TerminalToken parameter of token, which consumes TerminalToken parameter of token Token, which is TerminalToken parameter of token Inside Enhanced For Loop Without Block, which consumes Invocation Expression, which consumes ReferenceExpression parameter of referenceExpression Reference Expression, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Fake Block, which consumes Opens Statement, which consumes Right Paren, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Header Name With Type Parameters, which consumes Type Import On Demand Declaration Name, which consumes Import Declaration, which consumes Type Parameters, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Union Type, which consumes Union Type As Class Type, which consumes Uses Statement, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard2, which consumes Wildcard3, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds3Extends, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which checks char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions And Create Module Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of assistName, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which computes int parameter of kind, List<char[]> parameter of keywords Keywords, which checks char[] parameter of assistName, long parameter of position And Create Module Single Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates char[] parameter of token, int parameter of start, int parameter of end, int parameter of lineNumber String Literal, which augments TypeReference parameter of typeRef, int parameter of additionalDimensions, Annotation[][] parameter of additionalAnnotations, boolean parameter of isVarargs Type With Additional Dimensions, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc Parse, which flushes Assist State, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which updates Expression parameter of exp Source Position, which consumes Postfix Expression, which gets Unspecified Reference Optimized, which is int parameter of identifierStart Already Potential Name, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which copies Parser parameter of from State, which initializes For Block Statements, which initializes Scanner, which is After Array Type, which is Empty Name Completion, which is Inside Annotation, which is Inside Switch, which is Inside Breakable, which is Inside Loop, which is Inside Return, which news Reference Expression, which news Message Send, which news Message Send With Type Arguments, which internals New Message Send, which news boolean parameter of isQualified Allocation Expression, which checks If At First Argument Of Constructor, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses int parameter of start, int parameter of end, int parameter of fakeBlocksCount, CompilationUnitDeclaration parameter of unit Some Statements, which pops Until Completed Annotation If Necessary, which prepares For Block Statements, which pushes char[] parameter of label On Label Stack, which pushes boolean parameter of isSuperAccess Completion On Member Access On Expression Stack, which records NameReference parameter of nameReference Reference, which recoveries Exit From Variable, which recoveries Token Check, which creates Snap Shot Parser, which resets, which resets After Completion, which restores Object parameter of parserState Assist Parser, which resumes On Syntax Error, which resumes After Recovery, which sets char[] parameter of assistIdent Assist Identifier, which shoulds Stack Assist Node, which assists Node Needs Stacking, which tos String, which updates Recovery State, which ends int parameter of act Parse, which is Statement parameter of statement, AbstractMethodDeclaration parameter of method Inside Body, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which creates Javadoc Parser, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of identifierName, long parameter of namePositions, TypeReference parameter of type, int parameter of modifier, int parameter of declStart Component, which stacks Object[] parameter of stackToSearch, int parameter of startIndex Has Instance Of Expression, which is Inside Array Initializer, which founds int parameter of token Token, which acts int parameter of previousAct From Token Or Synthetic, which is In Import Statement, which is In Exports Statement, which is In Opens Statement, which is In Requires Statement, which is In Uses Statement, which is In Provides Statement, which is After With Clause, which is In Module Statements.
CompletionParser acts as a publisher for observer Parser, which adds char[] parameter of potentialVariableName, int parameter of start, int parameter of end Potential Name, which starts int parameter of from, int parameter of to Recording Identifiers, which stops Recording Identifiers, which assists Identifier, which assists Node Parent, which detects ASTNode parameter of node Assist Node Parent, which attaches Orphan Completion Node, which gets Local Declaration From Ast Stack, which becomes Simple Parser, which builds MemberValuePair parameter of memberValuePair More Annotation Completion Context, which builds Expression parameter of expression More Completion Context, which assembles Expression parameter of innerStatement Switch, which pops ASTNode parameter of soughtStatement Block Containing, which builds Statement parameter of statement More Completion Enclosing Context, which is Object parameter of object Instance Of Guard, which builds ASTNode parameter of node, boolean parameter of consumeTypeArguments More Generics Completion Context, which builds TypeReference parameter of exceptionRef More Try Statement Completion Context, which bodies Initializer parameter of initializer End, which checks int parameter of flag And Set Modifiers, which consumes Push Combine Modifiers, which checks Class Instance Creation, which checks Class Literal Access, which checks Keyword And Restricted Identifiers, which gets Keyword, which gets ModuleKeyword parameter of keyword Module Keywords, which checks Module Info Constructs, which checks RecoveredModule parameter of module, int parameter of index Module Info Keyword, which checks Instanceof Keyword, which checks Yield Keyword, which checks Invocation, which checks Label Statement, which checks Member Access, which checks Name Completion, which checks Paremeterized Method Name, which checks Paremeterized Type, which checks Recovered Method, which checks Member Value Name, which checks Recovered Type, which classes boolean parameter of isInterface, boolean parameter of isRecord, boolean parameter of isEnum Header Extends Or Implements, which completions Identifier Check, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes boolean parameter of shouldConcat, boolean parameter of isSwitchRule Switch Labels, which consumes Cast Expression With Primitive Type, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Qualified Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression LL1, which consumes Catch Formal Parameter, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header Name1, which consumes Record Header Part, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Instance Creation Expression Name, which consumes Class Type Elt, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Dim With Or With Out Expr, which consumes Empty Statement, which consumes Block Statement, which consumes Enhanced For Statement, which consumes Enhanced For Statement Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Variable, which consumes Enum Constant Header Name, which consumes Enum Constant No Class Body, which consumes Enum Constant With Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes boolean parameter of isSuperAccess Field Access, which consumes Force No Diet, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes Generic Type With Diamond, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression LL1With Bounds, which consumes Inside Cast Expression With Qualified Generics, which consumes Instance Of Expression, which consumes Instance Of Expression With Name, which consumes Interface Header Name1, which consumes Interface Header Extends, which consumes Interface Type, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which adjusts Positions Of Message Send On Stack, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Extended Dims, which consumes Annotation As Modifier, which consumes Additional Bound, which consumes Additional Bound1, which consumes Annotation Name, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Label, which consumes Lambda Expression, which types Elided Argument, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes Member Value Pair, which consumes Member Value As Name, which consumes Method Body, which consumes Method Header, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Modifiers, which consumes Module Header, which consumes Provides Interface, which consumes Provides Statement, which consumes With Clause, which consumes Reference Type, which consumes Requires Statement, which consumes Restore Diet, which consumes Exports Statement, which consumes Single Pkg Name, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break With Label, which consumes Statement Label, which consumes boolean parameter of isStmt Switch Statement Or Expression, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Nested Method, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Primary No New Array Name, which consumes Qualified Super Receiver, which consumes Primary No New Array Name This, which consumes Push Position, which consumes SwitchRuleKind parameter of kind Switch Rule, which fetches Next Token, which reduces TerminalToken parameter of token, which consumes TerminalToken parameter of token Token, which is TerminalToken parameter of token Inside Enhanced For Loop Without Block, which consumes Invocation Expression, which consumes ReferenceExpression parameter of referenceExpression Reference Expression, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Fake Block, which consumes Opens Statement, which consumes Right Paren, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Header Name With Type Parameters, which consumes Type Import On Demand Declaration Name, which consumes Import Declaration, which consumes Type Parameters, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Union Type, which consumes Union Type As Class Type, which consumes Uses Statement, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard2, which consumes Wildcard3, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds3Extends, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which checks char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions And Create Module Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of assistName, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which computes int parameter of kind, List<char[]> parameter of keywords Keywords, which checks char[] parameter of assistName, long parameter of position And Create Module Single Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates char[] parameter of token, int parameter of start, int parameter of end, int parameter of lineNumber String Literal, which augments TypeReference parameter of typeRef, int parameter of additionalDimensions, Annotation[][] parameter of additionalAnnotations, boolean parameter of isVarargs Type With Additional Dimensions, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc Parse, which flushes Assist State, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which updates Expression parameter of exp Source Position, which consumes Postfix Expression, which gets Unspecified Reference Optimized, which is int parameter of identifierStart Already Potential Name, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which copies Parser parameter of from State, which initializes For Block Statements, which initializes Scanner, which is After Array Type, which is Empty Name Completion, which is Inside Annotation, which is Inside Switch, which is Inside Breakable, which is Inside Loop, which is Inside Return, which news Reference Expression, which news Message Send, which news Message Send With Type Arguments, which internals New Message Send, which news boolean parameter of isQualified Allocation Expression, which checks If At First Argument Of Constructor, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses int parameter of start, int parameter of end, int parameter of fakeBlocksCount, CompilationUnitDeclaration parameter of unit Some Statements, which pops Until Completed Annotation If Necessary, which prepares For Block Statements, which pushes char[] parameter of label On Label Stack, which pushes boolean parameter of isSuperAccess Completion On Member Access On Expression Stack, which records NameReference parameter of nameReference Reference, which recoveries Exit From Variable, which recoveries Token Check, which creates Snap Shot Parser, which resets, which resets After Completion, which restores Object parameter of parserState Assist Parser, which resumes On Syntax Error, which resumes After Recovery, which sets char[] parameter of assistIdent Assist Identifier, which shoulds Stack Assist Node, which assists Node Needs Stacking, which tos String, which updates Recovery State, which ends int parameter of act Parse, which is Statement parameter of statement, AbstractMethodDeclaration parameter of method Inside Body, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which creates Javadoc Parser, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of identifierName, long parameter of namePositions, TypeReference parameter of type, int parameter of modifier, int parameter of declStart Component, which stacks Object[] parameter of stackToSearch, int parameter of startIndex Has Instance Of Expression, which is Inside Array Initializer, which founds int parameter of token Token, which acts int parameter of previousAct From Token Or Synthetic, which is In Import Statement, which is In Exports Statement, which is In Opens Statement, which is In Requires Statement, which is In Uses Statement, which is In Provides Statement, which is After With Clause, which is In Module Statements.
CompletionParser acts as a publisher for observer ASTNode, which is inherited by, which adds char[] parameter of potentialVariableName, int parameter of start, int parameter of end Potential Name, which starts int parameter of from, int parameter of to Recording Identifiers, which stops Recording Identifiers, which assists Identifier, which assists Node Parent, which detects ASTNode parameter of node Assist Node Parent, which attaches Orphan Completion Node, which gets Local Declaration From Ast Stack, which becomes Simple Parser, which builds MemberValuePair parameter of memberValuePair More Annotation Completion Context, which builds Expression parameter of expression More Completion Context, which assembles Expression parameter of innerStatement Switch, which pops ASTNode parameter of soughtStatement Block Containing, which builds Statement parameter of statement More Completion Enclosing Context, which is Object parameter of object Instance Of Guard, which builds ASTNode parameter of node, boolean parameter of consumeTypeArguments More Generics Completion Context, which builds TypeReference parameter of exceptionRef More Try Statement Completion Context, which bodies Initializer parameter of initializer End, which checks int parameter of flag And Set Modifiers, which consumes Push Combine Modifiers, which checks Class Instance Creation, which checks Class Literal Access, which checks Keyword And Restricted Identifiers, which gets Keyword, which gets ModuleKeyword parameter of keyword Module Keywords, which checks Module Info Constructs, which checks RecoveredModule parameter of module, int parameter of index Module Info Keyword, which checks Instanceof Keyword, which checks Yield Keyword, which checks Invocation, which checks Label Statement, which checks Member Access, which checks Name Completion, which checks Paremeterized Method Name, which checks Paremeterized Type, which checks Recovered Method, which checks Member Value Name, which checks Recovered Type, which classes boolean parameter of isInterface, boolean parameter of isRecord, boolean parameter of isEnum Header Extends Or Implements, which completions Identifier Check, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes boolean parameter of shouldConcat, boolean parameter of isSwitchRule Switch Labels, which consumes Cast Expression With Primitive Type, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Qualified Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression LL1, which consumes Catch Formal Parameter, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header Name1, which consumes Record Header Part, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Instance Creation Expression Name, which consumes Class Type Elt, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Dim With Or With Out Expr, which consumes Empty Statement, which consumes Block Statement, which consumes Enhanced For Statement, which consumes Enhanced For Statement Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Variable, which consumes Enum Constant Header Name, which consumes Enum Constant No Class Body, which consumes Enum Constant With Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes boolean parameter of isSuperAccess Field Access, which consumes Force No Diet, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes Generic Type With Diamond, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression LL1With Bounds, which consumes Inside Cast Expression With Qualified Generics, which consumes Instance Of Expression, which consumes Instance Of Expression With Name, which consumes Interface Header Name1, which consumes Interface Header Extends, which consumes Interface Type, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which adjusts Positions Of Message Send On Stack, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Extended Dims, which consumes Annotation As Modifier, which consumes Additional Bound, which consumes Additional Bound1, which consumes Annotation Name, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Label, which consumes Lambda Expression, which types Elided Argument, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes Member Value Pair, which consumes Member Value As Name, which consumes Method Body, which consumes Method Header, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Modifiers, which consumes Module Header, which consumes Provides Interface, which consumes Provides Statement, which consumes With Clause, which consumes Reference Type, which consumes Requires Statement, which consumes Restore Diet, which consumes Exports Statement, which consumes Single Pkg Name, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break With Label, which consumes Statement Label, which consumes boolean parameter of isStmt Switch Statement Or Expression, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Nested Method, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Primary No New Array Name, which consumes Qualified Super Receiver, which consumes Primary No New Array Name This, which consumes Push Position, which consumes SwitchRuleKind parameter of kind Switch Rule, which fetches Next Token, which reduces TerminalToken parameter of token, which consumes TerminalToken parameter of token Token, which is TerminalToken parameter of token Inside Enhanced For Loop Without Block, which consumes Invocation Expression, which consumes ReferenceExpression parameter of referenceExpression Reference Expression, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Fake Block, which consumes Opens Statement, which consumes Right Paren, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Header Name With Type Parameters, which consumes Type Import On Demand Declaration Name, which consumes Import Declaration, which consumes Type Parameters, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Union Type, which consumes Union Type As Class Type, which consumes Uses Statement, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard2, which consumes Wildcard3, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds3Extends, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which checks char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions And Create Module Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of assistName, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which computes int parameter of kind, List<char[]> parameter of keywords Keywords, which checks char[] parameter of assistName, long parameter of position And Create Module Single Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates char[] parameter of token, int parameter of start, int parameter of end, int parameter of lineNumber String Literal, which augments TypeReference parameter of typeRef, int parameter of additionalDimensions, Annotation[][] parameter of additionalAnnotations, boolean parameter of isVarargs Type With Additional Dimensions, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc Parse, which flushes Assist State, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which updates Expression parameter of exp Source Position, which consumes Postfix Expression, which gets Unspecified Reference Optimized, which is int parameter of identifierStart Already Potential Name, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which copies Parser parameter of from State, which initializes For Block Statements, which initializes Scanner, which is After Array Type, which is Empty Name Completion, which is Inside Annotation, which is Inside Switch, which is Inside Breakable, which is Inside Loop, which is Inside Return, which news Reference Expression, which news Message Send, which news Message Send With Type Arguments, which internals New Message Send, which news boolean parameter of isQualified Allocation Expression, which checks If At First Argument Of Constructor, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of cursorLoc, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses int parameter of start, int parameter of end, int parameter of fakeBlocksCount, CompilationUnitDeclaration parameter of unit Some Statements, which pops Until Completed Annotation If Necessary, which prepares For Block Statements, which pushes char[] parameter of label On Label Stack, which pushes boolean parameter of isSuperAccess Completion On Member Access On Expression Stack, which records NameReference parameter of nameReference Reference, which recoveries Exit From Variable, which recoveries Token Check, which creates Snap Shot Parser, which resets, which resets After Completion, which restores Object parameter of parserState Assist Parser, which resumes On Syntax Error, which resumes After Recovery, which sets char[] parameter of assistIdent Assist Identifier, which shoulds Stack Assist Node, which assists Node Needs Stacking, which tos String, which updates Recovery State, which ends int parameter of act Parse, which is Statement parameter of statement, AbstractMethodDeclaration parameter of method Inside Body, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which creates Javadoc Parser, which creates char[] parameter of assistName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of identifierName, long parameter of namePositions, TypeReference parameter of type, int parameter of modifier, int parameter of declStart Component, which stacks Object[] parameter of stackToSearch, int parameter of startIndex Has Instance Of Expression, which is Inside Array Initializer, which founds int parameter of token Token, which acts int parameter of previousAct From Token Or Synthetic, which is In Import Statement, which is In Exports Statement, which is In Opens Statement, which is In Requires Statement, which is In Uses Statement, which is In Provides Statement, which is After With Clause, which is In Module Statements.
