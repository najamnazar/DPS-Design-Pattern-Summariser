ASTVisitor acts as a publisher for observer LocalDeclaration, which is inherited by MemberDeclarationVisitor, which accepts IProblem parameter of problem Problem, which ends AllocationExpression parameter of allocationExpression, BlockScope parameter of scope Visit, which ends AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope Visit, which ends AnnotationTypeDeclaration parameter of annotationTypeDeclaration, BlockScope parameter of scope Visit, which ends AnnotationTypeDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of scope Visit, which ends AnnotationTypeDeclaration parameter of annotationTypeDeclaration, CompilationUnitScope parameter of scope Visit, which ends AnnotationTypeMemberDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of classScope Visit, which ends Argument parameter of argument, BlockScope parameter of scope Visit, which ends ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope Visit, which ends ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ArrayReference parameter of arrayReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope Visit, which ends AssertStatement parameter of assertStatement, BlockScope parameter of scope Visit, which ends Assignment parameter of assignment, BlockScope parameter of scope Visit, which ends BinaryExpression parameter of binaryExpression, BlockScope parameter of scope Visit, which ends Block parameter of block, BlockScope parameter of scope Visit, which ends BreakStatement parameter of breakStatement, BlockScope parameter of scope Visit, which ends CaseStatement parameter of caseStatement, BlockScope parameter of scope Visit, which ends CastExpression parameter of castExpression, BlockScope parameter of scope Visit, which ends CharLiteral parameter of charLiteral, BlockScope parameter of scope Visit, which ends ClassLiteralAccess parameter of classLiteral, BlockScope parameter of scope Visit, which ends Clinit parameter of clinit, ClassScope parameter of scope Visit, which ends CompilationUnitDeclaration parameter of compilationUnitDeclaration, CompilationUnitScope parameter of scope Visit, which ends CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope Visit, which ends ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope Visit, which ends ConstructorDeclaration parameter of constructorDeclaration, ClassScope parameter of scope Visit, which ends ContinueStatement parameter of continueStatement, BlockScope parameter of scope Visit, which ends DoStatement parameter of doStatement, BlockScope parameter of scope Visit, which ends DoubleLiteral parameter of doubleLiteral, BlockScope parameter of scope Visit, which ends EmptyStatement parameter of emptyStatement, BlockScope parameter of scope Visit, which ends EnumConstant parameter of enumDeclaration, ClassScope parameter of scope Visit, which ends EnumDeclaration parameter of enumDeclaration, BlockScope parameter of scope Visit, which ends EnumDeclaration parameter of enumDeclaration, ClassScope parameter of scope Visit, which ends EnumDeclaration parameter of enumDeclaration, CompilationUnitScope parameter of scope Visit, which ends EqualExpression parameter of equalExpression, BlockScope parameter of scope Visit, which ends ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope Visit, which ends ExtendedStringLiteral parameter of extendedStringLiteral, BlockScope parameter of scope Visit, which ends FalseLiteral parameter of falseLiteral, BlockScope parameter of scope Visit, which ends FieldDeclaration parameter of fieldDeclaration, MethodScope parameter of scope Visit, which ends FieldReference parameter of fieldReference, BlockScope parameter of scope Visit, which ends FloatLiteral parameter of floatLiteral, BlockScope parameter of scope Visit, which ends ForeachStatement parameter of forStatement, BlockScope parameter of scope Visit, which ends ForStatement parameter of forStatement, BlockScope parameter of scope Visit, which ends IfStatement parameter of ifStatement, BlockScope parameter of scope Visit, which ends ImportReference parameter of importRef, CompilationUnitScope parameter of scope Visit, which ends Initializer parameter of initializer, MethodScope parameter of scope Visit, which ends InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope Visit, which ends IntLiteral parameter of intLiteral, BlockScope parameter of scope Visit, which ends JavadocArgumentExpression parameter of expression, BlockScope parameter of scope Visit, which ends JavadocArrayQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends JavadocArraySingleTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends JavadocFieldReference parameter of fieldRef, BlockScope parameter of scope Visit, which ends JavadocMessageSend parameter of messageSend, BlockScope parameter of scope Visit, which ends JavadocQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends JavadocReturnStatement parameter of statement, BlockScope parameter of scope Visit, which ends JavadocSingleNameReference parameter of argument, BlockScope parameter of scope Visit, which ends JavadocSingleTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends LabeledStatement parameter of labeledStatement, BlockScope parameter of scope Visit, which ends LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope Visit, which ends LongLiteral parameter of longLiteral, BlockScope parameter of scope Visit, which ends MarkerAnnotation parameter of annotation, BlockScope parameter of scope Visit, which ends MarkerAnnotation parameter of annotation, ClassScope parameter of scope Visit, which ends MarkerAnnotation parameter of annotation, CompilationUnitScope parameter of scope Visit, which ends MemberValuePair parameter of pair, BlockScope parameter of scope Visit, which ends MemberValuePair parameter of pair, ClassScope parameter of scope Visit, which ends MemberValuePair parameter of pair, CompilationUnitScope parameter of scope Visit, which ends MessageSend parameter of messageSend, BlockScope parameter of scope Visit, which ends MethodDeclaration parameter of methodDeclaration, ClassScope parameter of scope Visit, which ends StringLiteralConcatenation parameter of literal, BlockScope parameter of scope Visit, which ends NormalAnnotation parameter of annotation, BlockScope parameter of scope Visit, which ends NormalAnnotation parameter of annotation, ClassScope parameter of scope Visit, which ends NormalAnnotation parameter of annotation, CompilationUnitScope parameter of scope Visit, which ends NullLiteral parameter of nullLiteral, BlockScope parameter of scope Visit, which ends OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope Visit, which ends PostfixExpression parameter of postfixExpression, BlockScope parameter of scope Visit, which ends PrefixExpression parameter of prefixExpression, BlockScope parameter of scope Visit, which ends QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope Visit, which ends QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope Visit, which ends QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope Visit, which ends QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope Visit, which ends ReturnStatement parameter of returnStatement, BlockScope parameter of scope Visit, which ends SingleMemberAnnotation parameter of annotation, BlockScope parameter of scope Visit, which ends SingleMemberAnnotation parameter of annotation, ClassScope parameter of scope Visit, which ends SingleMemberAnnotation parameter of annotation, CompilationUnitScope parameter of scope Visit, which ends SingleNameReference parameter of singleNameReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope Visit, which ends StringLiteral parameter of stringLiteral, BlockScope parameter of scope Visit, which ends SuperReference parameter of superReference, BlockScope parameter of scope Visit, which ends SwitchStatement parameter of switchStatement, BlockScope parameter of scope Visit, which ends SynchronizedStatement parameter of synchronizedStatement, BlockScope parameter of scope Visit, which ends ThisReference parameter of thisReference, BlockScope parameter of scope Visit, which ends ThrowStatement parameter of throwStatement, BlockScope parameter of scope Visit, which ends TrueLiteral parameter of trueLiteral, BlockScope parameter of scope Visit, which ends TryStatement parameter of tryStatement, BlockScope parameter of scope Visit, which ends TypeDeclaration parameter of localTypeDeclaration, BlockScope parameter of scope Visit, which ends TypeDeclaration parameter of memberTypeDeclaration, ClassScope parameter of scope Visit, which ends TypeDeclaration parameter of typeDeclaration, CompilationUnitScope parameter of scope Visit, which ends TypeParameter parameter of typeParameter, BlockScope parameter of scope Visit, which ends TypeParameter parameter of typeParameter, ClassScope parameter of scope Visit, which ends UnaryExpression parameter of unaryExpression, BlockScope parameter of scope Visit, which ends WhileStatement parameter of whileStatement, BlockScope parameter of scope Visit, which ends Wildcard parameter of wildcard, BlockScope parameter of scope Visit, which ends Wildcard parameter of wildcard, ClassScope parameter of scope Visit, which visits AllocationExpression parameter of allocationExpression, BlockScope parameter of scope, which visits AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope, which visits AnnotationTypeDeclaration parameter of annotationTypeDeclaration, BlockScope parameter of scope, which visits AnnotationTypeDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of scope, which visits AnnotationTypeDeclaration parameter of annotationTypeDeclaration, CompilationUnitScope parameter of scope, which visits AnnotationTypeMemberDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of classScope, which visits Argument parameter of argument, BlockScope parameter of scope, which visits ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope, which visits ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope, which visits ArrayReference parameter of arrayReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope, which visits AssertStatement parameter of assertStatement, BlockScope parameter of scope, which visits Assignment parameter of assignment, BlockScope parameter of scope, which visits BinaryExpression parameter of binaryExpression, BlockScope parameter of scope, which visits Block parameter of block, BlockScope parameter of scope, which visits BreakStatement parameter of breakStatement, BlockScope parameter of scope, which visits CaseStatement parameter of caseStatement, BlockScope parameter of scope, which visits CastExpression parameter of castExpression, BlockScope parameter of scope, which visits CharLiteral parameter of charLiteral, BlockScope parameter of scope, which visits ClassLiteralAccess parameter of classLiteral, BlockScope parameter of scope, which visits Clinit parameter of clinit, ClassScope parameter of scope, which visits CompilationUnitDeclaration parameter of compilationUnitDeclaration, CompilationUnitScope parameter of scope, which visits CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope, which visits ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope, which visits ConstructorDeclaration parameter of constructorDeclaration, ClassScope parameter of scope, which visits ContinueStatement parameter of continueStatement, BlockScope parameter of scope, which visits DoStatement parameter of doStatement, BlockScope parameter of scope, which visits DoubleLiteral parameter of doubleLiteral, BlockScope parameter of scope, which visits EmptyStatement parameter of emptyStatement, BlockScope parameter of scope, which visits EnumConstant parameter of enumConstant, ClassScope parameter of scope, which visits EnumDeclaration parameter of enumDeclaration, BlockScope parameter of scope, which visits EnumDeclaration parameter of enumDeclaration, ClassScope parameter of scope, which visits EnumDeclaration parameter of enumDeclaration, CompilationUnitScope parameter of scope, which visits EqualExpression parameter of equalExpression, BlockScope parameter of scope, which visits ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope, which visits ExtendedStringLiteral parameter of extendedStringLiteral, BlockScope parameter of scope, which visits FalseLiteral parameter of falseLiteral, BlockScope parameter of scope, which visits FieldDeclaration parameter of fieldDeclaration, MethodScope parameter of scope, which visits FieldReference parameter of fieldReference, BlockScope parameter of scope, which visits FloatLiteral parameter of floatLiteral, BlockScope parameter of scope, which visits ForeachStatement parameter of forStatement, BlockScope parameter of scope, which visits ForStatement parameter of forStatement, BlockScope parameter of scope, which visits IfStatement parameter of ifStatement, BlockScope parameter of scope, which visits ImportReference parameter of importRef, CompilationUnitScope parameter of scope, which visits Initializer parameter of initializer, MethodScope parameter of scope, which visits InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope, which visits IntLiteral parameter of intLiteral, BlockScope parameter of scope, which visits JavadocArgumentExpression parameter of expression, BlockScope parameter of scope, which visits JavadocArrayQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocArraySingleTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocFieldReference parameter of fieldRef, BlockScope parameter of scope, which visits JavadocMessageSend parameter of messageSend, BlockScope parameter of scope, which visits JavadocQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocReturnStatement parameter of statement, BlockScope parameter of scope, which visits JavadocSingleNameReference parameter of argument, BlockScope parameter of scope, which visits JavadocSingleTypeReference parameter of typeRef, BlockScope parameter of scope, which visits LabeledStatement parameter of labeledStatement, BlockScope parameter of scope, which visits LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope, which visits LongLiteral parameter of longLiteral, BlockScope parameter of scope, which visits MarkerAnnotation parameter of annotation, BlockScope parameter of scope, which visits MarkerAnnotation parameter of annotation, ClassScope parameter of scope, which visits MarkerAnnotation parameter of annotation, CompilationUnitScope parameter of scope, which visits MemberValuePair parameter of pair, BlockScope parameter of scope, which visits MemberValuePair parameter of pair, ClassScope parameter of scope, which visits MemberValuePair parameter of pair, CompilationUnitScope parameter of scope, which visits MessageSend parameter of messageSend, BlockScope parameter of scope, which visits MethodDeclaration parameter of methodDeclaration, ClassScope parameter of scope, which visits StringLiteralConcatenation parameter of literal, BlockScope parameter of scope, which visits NormalAnnotation parameter of annotation, BlockScope parameter of scope, which visits NormalAnnotation parameter of annotation, ClassScope parameter of scope, which visits NormalAnnotation parameter of annotation, CompilationUnitScope parameter of scope, which visits NullLiteral parameter of nullLiteral, BlockScope parameter of scope, which visits OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope, which visits PostfixExpression parameter of postfixExpression, BlockScope parameter of scope, which visits PrefixExpression parameter of prefixExpression, BlockScope parameter of scope, which visits QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope, which visits QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope, which visits QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope, which visits QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope, which visits ReturnStatement parameter of returnStatement, BlockScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, BlockScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, ClassScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, CompilationUnitScope parameter of scope, which visits SingleNameReference parameter of singleNameReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope, which visits StringLiteral parameter of stringLiteral, BlockScope parameter of scope, which visits SuperReference parameter of superReference, BlockScope parameter of scope, which visits SwitchStatement parameter of switchStatement, BlockScope parameter of scope, which visits SynchronizedStatement parameter of synchronizedStatement, BlockScope parameter of scope, which visits ThisReference parameter of thisReference, BlockScope parameter of scope, which visits ThrowStatement parameter of throwStatement, BlockScope parameter of scope, which visits TrueLiteral parameter of trueLiteral, BlockScope parameter of scope, which visits TryStatement parameter of tryStatement, BlockScope parameter of scope, which visits TypeDeclaration parameter of localTypeDeclaration, BlockScope parameter of scope, which visits TypeDeclaration parameter of memberTypeDeclaration, ClassScope parameter of scope, which visits TypeDeclaration parameter of typeDeclaration, CompilationUnitScope parameter of scope, which visits TypeParameter parameter of typeParameter, BlockScope parameter of scope, which visits TypeParameter parameter of typeParameter, ClassScope parameter of scope, which visits UnaryExpression parameter of unaryExpression, BlockScope parameter of scope, which visits WhileStatement parameter of whileStatement, BlockScope parameter of scope, which visits Wildcard parameter of wildcard, BlockScope parameter of scope, which visits Wildcard parameter of wildcard, ClassScope parameter of scope.
ASTVisitor acts as a publisher for observer TypeDeclaration, which is inherited by DOMToIndexVisitor, NodeSearcher, which accepts IProblem parameter of problem Problem, which ends AllocationExpression parameter of allocationExpression, BlockScope parameter of scope Visit, which ends AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope Visit, which ends AnnotationTypeDeclaration parameter of annotationTypeDeclaration, BlockScope parameter of scope Visit, which ends AnnotationTypeDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of scope Visit, which ends AnnotationTypeDeclaration parameter of annotationTypeDeclaration, CompilationUnitScope parameter of scope Visit, which ends AnnotationTypeMemberDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of classScope Visit, which ends Argument parameter of argument, BlockScope parameter of scope Visit, which ends ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope Visit, which ends ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ArrayReference parameter of arrayReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope Visit, which ends AssertStatement parameter of assertStatement, BlockScope parameter of scope Visit, which ends Assignment parameter of assignment, BlockScope parameter of scope Visit, which ends BinaryExpression parameter of binaryExpression, BlockScope parameter of scope Visit, which ends Block parameter of block, BlockScope parameter of scope Visit, which ends BreakStatement parameter of breakStatement, BlockScope parameter of scope Visit, which ends CaseStatement parameter of caseStatement, BlockScope parameter of scope Visit, which ends CastExpression parameter of castExpression, BlockScope parameter of scope Visit, which ends CharLiteral parameter of charLiteral, BlockScope parameter of scope Visit, which ends ClassLiteralAccess parameter of classLiteral, BlockScope parameter of scope Visit, which ends Clinit parameter of clinit, ClassScope parameter of scope Visit, which ends CompilationUnitDeclaration parameter of compilationUnitDeclaration, CompilationUnitScope parameter of scope Visit, which ends CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope Visit, which ends ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope Visit, which ends ConstructorDeclaration parameter of constructorDeclaration, ClassScope parameter of scope Visit, which ends ContinueStatement parameter of continueStatement, BlockScope parameter of scope Visit, which ends DoStatement parameter of doStatement, BlockScope parameter of scope Visit, which ends DoubleLiteral parameter of doubleLiteral, BlockScope parameter of scope Visit, which ends EmptyStatement parameter of emptyStatement, BlockScope parameter of scope Visit, which ends EnumConstant parameter of enumDeclaration, ClassScope parameter of scope Visit, which ends EnumDeclaration parameter of enumDeclaration, BlockScope parameter of scope Visit, which ends EnumDeclaration parameter of enumDeclaration, ClassScope parameter of scope Visit, which ends EnumDeclaration parameter of enumDeclaration, CompilationUnitScope parameter of scope Visit, which ends EqualExpression parameter of equalExpression, BlockScope parameter of scope Visit, which ends ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope Visit, which ends ExtendedStringLiteral parameter of extendedStringLiteral, BlockScope parameter of scope Visit, which ends FalseLiteral parameter of falseLiteral, BlockScope parameter of scope Visit, which ends FieldDeclaration parameter of fieldDeclaration, MethodScope parameter of scope Visit, which ends FieldReference parameter of fieldReference, BlockScope parameter of scope Visit, which ends FloatLiteral parameter of floatLiteral, BlockScope parameter of scope Visit, which ends ForeachStatement parameter of forStatement, BlockScope parameter of scope Visit, which ends ForStatement parameter of forStatement, BlockScope parameter of scope Visit, which ends IfStatement parameter of ifStatement, BlockScope parameter of scope Visit, which ends ImportReference parameter of importRef, CompilationUnitScope parameter of scope Visit, which ends Initializer parameter of initializer, MethodScope parameter of scope Visit, which ends InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope Visit, which ends IntLiteral parameter of intLiteral, BlockScope parameter of scope Visit, which ends JavadocArgumentExpression parameter of expression, BlockScope parameter of scope Visit, which ends JavadocArrayQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends JavadocArraySingleTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends JavadocFieldReference parameter of fieldRef, BlockScope parameter of scope Visit, which ends JavadocMessageSend parameter of messageSend, BlockScope parameter of scope Visit, which ends JavadocQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends JavadocReturnStatement parameter of statement, BlockScope parameter of scope Visit, which ends JavadocSingleNameReference parameter of argument, BlockScope parameter of scope Visit, which ends JavadocSingleTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends LabeledStatement parameter of labeledStatement, BlockScope parameter of scope Visit, which ends LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope Visit, which ends LongLiteral parameter of longLiteral, BlockScope parameter of scope Visit, which ends MarkerAnnotation parameter of annotation, BlockScope parameter of scope Visit, which ends MarkerAnnotation parameter of annotation, ClassScope parameter of scope Visit, which ends MarkerAnnotation parameter of annotation, CompilationUnitScope parameter of scope Visit, which ends MemberValuePair parameter of pair, BlockScope parameter of scope Visit, which ends MemberValuePair parameter of pair, ClassScope parameter of scope Visit, which ends MemberValuePair parameter of pair, CompilationUnitScope parameter of scope Visit, which ends MessageSend parameter of messageSend, BlockScope parameter of scope Visit, which ends MethodDeclaration parameter of methodDeclaration, ClassScope parameter of scope Visit, which ends StringLiteralConcatenation parameter of literal, BlockScope parameter of scope Visit, which ends NormalAnnotation parameter of annotation, BlockScope parameter of scope Visit, which ends NormalAnnotation parameter of annotation, ClassScope parameter of scope Visit, which ends NormalAnnotation parameter of annotation, CompilationUnitScope parameter of scope Visit, which ends NullLiteral parameter of nullLiteral, BlockScope parameter of scope Visit, which ends OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope Visit, which ends PostfixExpression parameter of postfixExpression, BlockScope parameter of scope Visit, which ends PrefixExpression parameter of prefixExpression, BlockScope parameter of scope Visit, which ends QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope Visit, which ends QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope Visit, which ends QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope Visit, which ends QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope Visit, which ends ReturnStatement parameter of returnStatement, BlockScope parameter of scope Visit, which ends SingleMemberAnnotation parameter of annotation, BlockScope parameter of scope Visit, which ends SingleMemberAnnotation parameter of annotation, ClassScope parameter of scope Visit, which ends SingleMemberAnnotation parameter of annotation, CompilationUnitScope parameter of scope Visit, which ends SingleNameReference parameter of singleNameReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope Visit, which ends StringLiteral parameter of stringLiteral, BlockScope parameter of scope Visit, which ends SuperReference parameter of superReference, BlockScope parameter of scope Visit, which ends SwitchStatement parameter of switchStatement, BlockScope parameter of scope Visit, which ends SynchronizedStatement parameter of synchronizedStatement, BlockScope parameter of scope Visit, which ends ThisReference parameter of thisReference, BlockScope parameter of scope Visit, which ends ThrowStatement parameter of throwStatement, BlockScope parameter of scope Visit, which ends TrueLiteral parameter of trueLiteral, BlockScope parameter of scope Visit, which ends TryStatement parameter of tryStatement, BlockScope parameter of scope Visit, which ends TypeDeclaration parameter of localTypeDeclaration, BlockScope parameter of scope Visit, which ends TypeDeclaration parameter of memberTypeDeclaration, ClassScope parameter of scope Visit, which ends TypeDeclaration parameter of typeDeclaration, CompilationUnitScope parameter of scope Visit, which ends TypeParameter parameter of typeParameter, BlockScope parameter of scope Visit, which ends TypeParameter parameter of typeParameter, ClassScope parameter of scope Visit, which ends UnaryExpression parameter of unaryExpression, BlockScope parameter of scope Visit, which ends WhileStatement parameter of whileStatement, BlockScope parameter of scope Visit, which ends Wildcard parameter of wildcard, BlockScope parameter of scope Visit, which ends Wildcard parameter of wildcard, ClassScope parameter of scope Visit, which visits AllocationExpression parameter of allocationExpression, BlockScope parameter of scope, which visits AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope, which visits AnnotationTypeDeclaration parameter of annotationTypeDeclaration, BlockScope parameter of scope, which visits AnnotationTypeDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of scope, which visits AnnotationTypeDeclaration parameter of annotationTypeDeclaration, CompilationUnitScope parameter of scope, which visits AnnotationTypeMemberDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of classScope, which visits Argument parameter of argument, BlockScope parameter of scope, which visits ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope, which visits ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope, which visits ArrayReference parameter of arrayReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope, which visits AssertStatement parameter of assertStatement, BlockScope parameter of scope, which visits Assignment parameter of assignment, BlockScope parameter of scope, which visits BinaryExpression parameter of binaryExpression, BlockScope parameter of scope, which visits Block parameter of block, BlockScope parameter of scope, which visits BreakStatement parameter of breakStatement, BlockScope parameter of scope, which visits CaseStatement parameter of caseStatement, BlockScope parameter of scope, which visits CastExpression parameter of castExpression, BlockScope parameter of scope, which visits CharLiteral parameter of charLiteral, BlockScope parameter of scope, which visits ClassLiteralAccess parameter of classLiteral, BlockScope parameter of scope, which visits Clinit parameter of clinit, ClassScope parameter of scope, which visits CompilationUnitDeclaration parameter of compilationUnitDeclaration, CompilationUnitScope parameter of scope, which visits CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope, which visits ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope, which visits ConstructorDeclaration parameter of constructorDeclaration, ClassScope parameter of scope, which visits ContinueStatement parameter of continueStatement, BlockScope parameter of scope, which visits DoStatement parameter of doStatement, BlockScope parameter of scope, which visits DoubleLiteral parameter of doubleLiteral, BlockScope parameter of scope, which visits EmptyStatement parameter of emptyStatement, BlockScope parameter of scope, which visits EnumConstant parameter of enumConstant, ClassScope parameter of scope, which visits EnumDeclaration parameter of enumDeclaration, BlockScope parameter of scope, which visits EnumDeclaration parameter of enumDeclaration, ClassScope parameter of scope, which visits EnumDeclaration parameter of enumDeclaration, CompilationUnitScope parameter of scope, which visits EqualExpression parameter of equalExpression, BlockScope parameter of scope, which visits ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope, which visits ExtendedStringLiteral parameter of extendedStringLiteral, BlockScope parameter of scope, which visits FalseLiteral parameter of falseLiteral, BlockScope parameter of scope, which visits FieldDeclaration parameter of fieldDeclaration, MethodScope parameter of scope, which visits FieldReference parameter of fieldReference, BlockScope parameter of scope, which visits FloatLiteral parameter of floatLiteral, BlockScope parameter of scope, which visits ForeachStatement parameter of forStatement, BlockScope parameter of scope, which visits ForStatement parameter of forStatement, BlockScope parameter of scope, which visits IfStatement parameter of ifStatement, BlockScope parameter of scope, which visits ImportReference parameter of importRef, CompilationUnitScope parameter of scope, which visits Initializer parameter of initializer, MethodScope parameter of scope, which visits InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope, which visits IntLiteral parameter of intLiteral, BlockScope parameter of scope, which visits JavadocArgumentExpression parameter of expression, BlockScope parameter of scope, which visits JavadocArrayQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocArraySingleTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocFieldReference parameter of fieldRef, BlockScope parameter of scope, which visits JavadocMessageSend parameter of messageSend, BlockScope parameter of scope, which visits JavadocQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocReturnStatement parameter of statement, BlockScope parameter of scope, which visits JavadocSingleNameReference parameter of argument, BlockScope parameter of scope, which visits JavadocSingleTypeReference parameter of typeRef, BlockScope parameter of scope, which visits LabeledStatement parameter of labeledStatement, BlockScope parameter of scope, which visits LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope, which visits LongLiteral parameter of longLiteral, BlockScope parameter of scope, which visits MarkerAnnotation parameter of annotation, BlockScope parameter of scope, which visits MarkerAnnotation parameter of annotation, ClassScope parameter of scope, which visits MarkerAnnotation parameter of annotation, CompilationUnitScope parameter of scope, which visits MemberValuePair parameter of pair, BlockScope parameter of scope, which visits MemberValuePair parameter of pair, ClassScope parameter of scope, which visits MemberValuePair parameter of pair, CompilationUnitScope parameter of scope, which visits MessageSend parameter of messageSend, BlockScope parameter of scope, which visits MethodDeclaration parameter of methodDeclaration, ClassScope parameter of scope, which visits StringLiteralConcatenation parameter of literal, BlockScope parameter of scope, which visits NormalAnnotation parameter of annotation, BlockScope parameter of scope, which visits NormalAnnotation parameter of annotation, ClassScope parameter of scope, which visits NormalAnnotation parameter of annotation, CompilationUnitScope parameter of scope, which visits NullLiteral parameter of nullLiteral, BlockScope parameter of scope, which visits OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope, which visits PostfixExpression parameter of postfixExpression, BlockScope parameter of scope, which visits PrefixExpression parameter of prefixExpression, BlockScope parameter of scope, which visits QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope, which visits QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope, which visits QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope, which visits QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope, which visits ReturnStatement parameter of returnStatement, BlockScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, BlockScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, ClassScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, CompilationUnitScope parameter of scope, which visits SingleNameReference parameter of singleNameReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope, which visits StringLiteral parameter of stringLiteral, BlockScope parameter of scope, which visits SuperReference parameter of superReference, BlockScope parameter of scope, which visits SwitchStatement parameter of switchStatement, BlockScope parameter of scope, which visits SynchronizedStatement parameter of synchronizedStatement, BlockScope parameter of scope, which visits ThisReference parameter of thisReference, BlockScope parameter of scope, which visits ThrowStatement parameter of throwStatement, BlockScope parameter of scope, which visits TrueLiteral parameter of trueLiteral, BlockScope parameter of scope, which visits TryStatement parameter of tryStatement, BlockScope parameter of scope, which visits TypeDeclaration parameter of localTypeDeclaration, BlockScope parameter of scope, which visits TypeDeclaration parameter of memberTypeDeclaration, ClassScope parameter of scope, which visits TypeDeclaration parameter of typeDeclaration, CompilationUnitScope parameter of scope, which visits TypeParameter parameter of typeParameter, BlockScope parameter of scope, which visits TypeParameter parameter of typeParameter, ClassScope parameter of scope, which visits UnaryExpression parameter of unaryExpression, BlockScope parameter of scope, which visits WhileStatement parameter of whileStatement, BlockScope parameter of scope, which visits Wildcard parameter of wildcard, BlockScope parameter of scope, which visits Wildcard parameter of wildcard, ClassScope parameter of scope.
ASTVisitor acts as an observer for publisher AbstractRegressionTest, LookupTest, ClassFileComparatorTest, Compliance_CLDC, BootstrapMethodAttributeTest, ASTImplTests, Unicode18Test, ConstantTest, ManifestAnalyzerTest, ResourceLeakTests, SwitchExpressionsYieldTest, XLargeTest, SwitchTest, InnerEmulationTest_1_5, InnerEmulationTest, OverloadResolutionTest8, Compliance_1_3, PatternMatching16Test, Compliance_1_4, NullReferenceTestAsserts, ParserTest, ExternalizeStringLiteralsTest_1_5, Unicode11Test, JSR308SpecSnippetTests, InnerClass15Test, FieldAccessTest, GenericsRegressionTest_1_8, Deprecated18Test, GenericsRegressionTest_1_7, BinaryLiteralTest, ClassFileReaderTest_17, SerializableLambdaTest, DeprecatedTest, SerialVersionUIDTests, UnderscoresInLiteralsTest, ScannerTest, RecordsRestrictedClassTest, CastTest, CollisionCase, TryStatement9Test, PolymorphicSignatureTest, LocalVariableTest, TryWithResourcesStatementTest, MethodHandleTest, ProgrammingProblemsTest, ValueBasedAnnotationTests, TryStatement17Test, NegativeLambdaExpressionsTest, CharOperationTest, TryStatementTest, DebugAttributeTest, AutomaticModuleNamingTest, UtilTest, AbstractComparableTest, ExpressionContextTests, AbstractRegressionTest9, NullReferenceTest, InternalHexFloatTest, StandAloneASTParserTest, NumericTest, MethodParametersAttributeTest, LambdaShapeTests, Unicode10Test, LocalStaticsTest, JavadocTest, ComplianceDiagnoseTest, ProblemConstructorTest, Jsr14Test, TypeAnnotationTest, LineNumberAttributeTest, AssignmentTest, BooleanTest, XLargeTest2, LambdaExpressionsTest, NegativeTypeAnnotationTest, ExternalizeStringLiteralsTest, RuntimeTests, AbstractBatchCompilerTest, InstanceofExpressionTest, AssertionTest, Unicode9Test, Unicode13Test, ConditionalExpressionTest, JEP323VarLambdaParamsTest, InternalScannerTest, SuperTypeTest, AssignmentTest_1_7, GrammarCoverageTests308, PublicScannerTest, ExternalizeStringLiteralsTest_15, AssignmentTest_1_5, ForStatementTest, FlowAnalysisTest, ProblemTypeAndMethodTest, JEP286ReservedWordTest, NonFatalErrorTest, ArrayTest, ClassFileReaderTest_1_5, ClassFileReaderTest_1_4, StackMapAttributeTest, LambdaRegressionTest, GenericTypeSignatureTest, Deprecated15Test, ClassFileReaderTest_1_8, TextBlockTest, InstanceofPrimaryPatternTest, DubiousOutcomeTest, Unicode12_1Test, InitializationTests, JEP286Test, which is inherited by OneLineEnforcer, MemberDeclarationVisitor, AnnotationDiscoveryVisitor, SpacePreparator, ASTImplTests, LineBreaksPreparator, BindingsCollectorVisitor, DefaultASTVisitor, NaiveASTFlattener, NodeSearcher, ASTConverterJavadocFlattener, UnresolvedReferenceNameFinder, ASTSyntaxErrorPropagator, GenericAstVisitor, MissingTypesGuesser, GetKeyVisitor, WrapPreparator, ASTNodesCollectorVisitor, DOMFinder, ASTRewriteFlattener, ASTRewriteAnalyzer, DOMToIndexVisitor, CommentsPreparator, DOMToModelPopulator, CompletionNodeDetector, ThrownExceptionFinder, SourceRangeVerifier, which accepts IProblem parameter of problem Problem, which ends AllocationExpression parameter of allocationExpression, BlockScope parameter of scope Visit, which ends AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope Visit, which ends AnnotationTypeDeclaration parameter of annotationTypeDeclaration, BlockScope parameter of scope Visit, which ends AnnotationTypeDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of scope Visit, which ends AnnotationTypeDeclaration parameter of annotationTypeDeclaration, CompilationUnitScope parameter of scope Visit, which ends AnnotationTypeMemberDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of classScope Visit, which ends Argument parameter of argument, BlockScope parameter of scope Visit, which ends ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope Visit, which ends ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ArrayReference parameter of arrayReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope Visit, which ends AssertStatement parameter of assertStatement, BlockScope parameter of scope Visit, which ends Assignment parameter of assignment, BlockScope parameter of scope Visit, which ends BinaryExpression parameter of binaryExpression, BlockScope parameter of scope Visit, which ends Block parameter of block, BlockScope parameter of scope Visit, which ends BreakStatement parameter of breakStatement, BlockScope parameter of scope Visit, which ends CaseStatement parameter of caseStatement, BlockScope parameter of scope Visit, which ends CastExpression parameter of castExpression, BlockScope parameter of scope Visit, which ends CharLiteral parameter of charLiteral, BlockScope parameter of scope Visit, which ends ClassLiteralAccess parameter of classLiteral, BlockScope parameter of scope Visit, which ends Clinit parameter of clinit, ClassScope parameter of scope Visit, which ends CompilationUnitDeclaration parameter of compilationUnitDeclaration, CompilationUnitScope parameter of scope Visit, which ends CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope Visit, which ends ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope Visit, which ends ConstructorDeclaration parameter of constructorDeclaration, ClassScope parameter of scope Visit, which ends ContinueStatement parameter of continueStatement, BlockScope parameter of scope Visit, which ends DoStatement parameter of doStatement, BlockScope parameter of scope Visit, which ends DoubleLiteral parameter of doubleLiteral, BlockScope parameter of scope Visit, which ends EmptyStatement parameter of emptyStatement, BlockScope parameter of scope Visit, which ends EnumConstant parameter of enumDeclaration, ClassScope parameter of scope Visit, which ends EnumDeclaration parameter of enumDeclaration, BlockScope parameter of scope Visit, which ends EnumDeclaration parameter of enumDeclaration, ClassScope parameter of scope Visit, which ends EnumDeclaration parameter of enumDeclaration, CompilationUnitScope parameter of scope Visit, which ends EqualExpression parameter of equalExpression, BlockScope parameter of scope Visit, which ends ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope Visit, which ends ExtendedStringLiteral parameter of extendedStringLiteral, BlockScope parameter of scope Visit, which ends FalseLiteral parameter of falseLiteral, BlockScope parameter of scope Visit, which ends FieldDeclaration parameter of fieldDeclaration, MethodScope parameter of scope Visit, which ends FieldReference parameter of fieldReference, BlockScope parameter of scope Visit, which ends FloatLiteral parameter of floatLiteral, BlockScope parameter of scope Visit, which ends ForeachStatement parameter of forStatement, BlockScope parameter of scope Visit, which ends ForStatement parameter of forStatement, BlockScope parameter of scope Visit, which ends IfStatement parameter of ifStatement, BlockScope parameter of scope Visit, which ends ImportReference parameter of importRef, CompilationUnitScope parameter of scope Visit, which ends Initializer parameter of initializer, MethodScope parameter of scope Visit, which ends InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope Visit, which ends IntLiteral parameter of intLiteral, BlockScope parameter of scope Visit, which ends JavadocArgumentExpression parameter of expression, BlockScope parameter of scope Visit, which ends JavadocArrayQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends JavadocArraySingleTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends JavadocFieldReference parameter of fieldRef, BlockScope parameter of scope Visit, which ends JavadocMessageSend parameter of messageSend, BlockScope parameter of scope Visit, which ends JavadocQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends JavadocReturnStatement parameter of statement, BlockScope parameter of scope Visit, which ends JavadocSingleNameReference parameter of argument, BlockScope parameter of scope Visit, which ends JavadocSingleTypeReference parameter of typeRef, BlockScope parameter of scope Visit, which ends LabeledStatement parameter of labeledStatement, BlockScope parameter of scope Visit, which ends LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope Visit, which ends LongLiteral parameter of longLiteral, BlockScope parameter of scope Visit, which ends MarkerAnnotation parameter of annotation, BlockScope parameter of scope Visit, which ends MarkerAnnotation parameter of annotation, ClassScope parameter of scope Visit, which ends MarkerAnnotation parameter of annotation, CompilationUnitScope parameter of scope Visit, which ends MemberValuePair parameter of pair, BlockScope parameter of scope Visit, which ends MemberValuePair parameter of pair, ClassScope parameter of scope Visit, which ends MemberValuePair parameter of pair, CompilationUnitScope parameter of scope Visit, which ends MessageSend parameter of messageSend, BlockScope parameter of scope Visit, which ends MethodDeclaration parameter of methodDeclaration, ClassScope parameter of scope Visit, which ends StringLiteralConcatenation parameter of literal, BlockScope parameter of scope Visit, which ends NormalAnnotation parameter of annotation, BlockScope parameter of scope Visit, which ends NormalAnnotation parameter of annotation, ClassScope parameter of scope Visit, which ends NormalAnnotation parameter of annotation, CompilationUnitScope parameter of scope Visit, which ends NullLiteral parameter of nullLiteral, BlockScope parameter of scope Visit, which ends OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope Visit, which ends PostfixExpression parameter of postfixExpression, BlockScope parameter of scope Visit, which ends PrefixExpression parameter of prefixExpression, BlockScope parameter of scope Visit, which ends QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope Visit, which ends QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope Visit, which ends QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope Visit, which ends QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope Visit, which ends ReturnStatement parameter of returnStatement, BlockScope parameter of scope Visit, which ends SingleMemberAnnotation parameter of annotation, BlockScope parameter of scope Visit, which ends SingleMemberAnnotation parameter of annotation, ClassScope parameter of scope Visit, which ends SingleMemberAnnotation parameter of annotation, CompilationUnitScope parameter of scope Visit, which ends SingleNameReference parameter of singleNameReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope Visit, which ends StringLiteral parameter of stringLiteral, BlockScope parameter of scope Visit, which ends SuperReference parameter of superReference, BlockScope parameter of scope Visit, which ends SwitchStatement parameter of switchStatement, BlockScope parameter of scope Visit, which ends SynchronizedStatement parameter of synchronizedStatement, BlockScope parameter of scope Visit, which ends ThisReference parameter of thisReference, BlockScope parameter of scope Visit, which ends ThrowStatement parameter of throwStatement, BlockScope parameter of scope Visit, which ends TrueLiteral parameter of trueLiteral, BlockScope parameter of scope Visit, which ends TryStatement parameter of tryStatement, BlockScope parameter of scope Visit, which ends TypeDeclaration parameter of localTypeDeclaration, BlockScope parameter of scope Visit, which ends TypeDeclaration parameter of memberTypeDeclaration, ClassScope parameter of scope Visit, which ends TypeDeclaration parameter of typeDeclaration, CompilationUnitScope parameter of scope Visit, which ends TypeParameter parameter of typeParameter, BlockScope parameter of scope Visit, which ends TypeParameter parameter of typeParameter, ClassScope parameter of scope Visit, which ends UnaryExpression parameter of unaryExpression, BlockScope parameter of scope Visit, which ends WhileStatement parameter of whileStatement, BlockScope parameter of scope Visit, which ends Wildcard parameter of wildcard, BlockScope parameter of scope Visit, which ends Wildcard parameter of wildcard, ClassScope parameter of scope Visit, which visits AllocationExpression parameter of allocationExpression, BlockScope parameter of scope, which visits AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope, which visits AnnotationTypeDeclaration parameter of annotationTypeDeclaration, BlockScope parameter of scope, which visits AnnotationTypeDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of scope, which visits AnnotationTypeDeclaration parameter of annotationTypeDeclaration, CompilationUnitScope parameter of scope, which visits AnnotationTypeMemberDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of classScope, which visits Argument parameter of argument, BlockScope parameter of scope, which visits ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope, which visits ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope, which visits ArrayReference parameter of arrayReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope, which visits AssertStatement parameter of assertStatement, BlockScope parameter of scope, which visits Assignment parameter of assignment, BlockScope parameter of scope, which visits BinaryExpression parameter of binaryExpression, BlockScope parameter of scope, which visits Block parameter of block, BlockScope parameter of scope, which visits BreakStatement parameter of breakStatement, BlockScope parameter of scope, which visits CaseStatement parameter of caseStatement, BlockScope parameter of scope, which visits CastExpression parameter of castExpression, BlockScope parameter of scope, which visits CharLiteral parameter of charLiteral, BlockScope parameter of scope, which visits ClassLiteralAccess parameter of classLiteral, BlockScope parameter of scope, which visits Clinit parameter of clinit, ClassScope parameter of scope, which visits CompilationUnitDeclaration parameter of compilationUnitDeclaration, CompilationUnitScope parameter of scope, which visits CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope, which visits ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope, which visits ConstructorDeclaration parameter of constructorDeclaration, ClassScope parameter of scope, which visits ContinueStatement parameter of continueStatement, BlockScope parameter of scope, which visits DoStatement parameter of doStatement, BlockScope parameter of scope, which visits DoubleLiteral parameter of doubleLiteral, BlockScope parameter of scope, which visits EmptyStatement parameter of emptyStatement, BlockScope parameter of scope, which visits EnumConstant parameter of enumConstant, ClassScope parameter of scope, which visits EnumDeclaration parameter of enumDeclaration, BlockScope parameter of scope, which visits EnumDeclaration parameter of enumDeclaration, ClassScope parameter of scope, which visits EnumDeclaration parameter of enumDeclaration, CompilationUnitScope parameter of scope, which visits EqualExpression parameter of equalExpression, BlockScope parameter of scope, which visits ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope, which visits ExtendedStringLiteral parameter of extendedStringLiteral, BlockScope parameter of scope, which visits FalseLiteral parameter of falseLiteral, BlockScope parameter of scope, which visits FieldDeclaration parameter of fieldDeclaration, MethodScope parameter of scope, which visits FieldReference parameter of fieldReference, BlockScope parameter of scope, which visits FloatLiteral parameter of floatLiteral, BlockScope parameter of scope, which visits ForeachStatement parameter of forStatement, BlockScope parameter of scope, which visits ForStatement parameter of forStatement, BlockScope parameter of scope, which visits IfStatement parameter of ifStatement, BlockScope parameter of scope, which visits ImportReference parameter of importRef, CompilationUnitScope parameter of scope, which visits Initializer parameter of initializer, MethodScope parameter of scope, which visits InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope, which visits IntLiteral parameter of intLiteral, BlockScope parameter of scope, which visits JavadocArgumentExpression parameter of expression, BlockScope parameter of scope, which visits JavadocArrayQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocArraySingleTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocFieldReference parameter of fieldRef, BlockScope parameter of scope, which visits JavadocMessageSend parameter of messageSend, BlockScope parameter of scope, which visits JavadocQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocReturnStatement parameter of statement, BlockScope parameter of scope, which visits JavadocSingleNameReference parameter of argument, BlockScope parameter of scope, which visits JavadocSingleTypeReference parameter of typeRef, BlockScope parameter of scope, which visits LabeledStatement parameter of labeledStatement, BlockScope parameter of scope, which visits LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope, which visits LongLiteral parameter of longLiteral, BlockScope parameter of scope, which visits MarkerAnnotation parameter of annotation, BlockScope parameter of scope, which visits MarkerAnnotation parameter of annotation, ClassScope parameter of scope, which visits MarkerAnnotation parameter of annotation, CompilationUnitScope parameter of scope, which visits MemberValuePair parameter of pair, BlockScope parameter of scope, which visits MemberValuePair parameter of pair, ClassScope parameter of scope, which visits MemberValuePair parameter of pair, CompilationUnitScope parameter of scope, which visits MessageSend parameter of messageSend, BlockScope parameter of scope, which visits MethodDeclaration parameter of methodDeclaration, ClassScope parameter of scope, which visits StringLiteralConcatenation parameter of literal, BlockScope parameter of scope, which visits NormalAnnotation parameter of annotation, BlockScope parameter of scope, which visits NormalAnnotation parameter of annotation, ClassScope parameter of scope, which visits NormalAnnotation parameter of annotation, CompilationUnitScope parameter of scope, which visits NullLiteral parameter of nullLiteral, BlockScope parameter of scope, which visits OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope, which visits PostfixExpression parameter of postfixExpression, BlockScope parameter of scope, which visits PrefixExpression parameter of prefixExpression, BlockScope parameter of scope, which visits QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope, which visits QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope, which visits QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope, which visits QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope, which visits ReturnStatement parameter of returnStatement, BlockScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, BlockScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, ClassScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, CompilationUnitScope parameter of scope, which visits SingleNameReference parameter of singleNameReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope, which visits StringLiteral parameter of stringLiteral, BlockScope parameter of scope, which visits SuperReference parameter of superReference, BlockScope parameter of scope, which visits SwitchStatement parameter of switchStatement, BlockScope parameter of scope, which visits SynchronizedStatement parameter of synchronizedStatement, BlockScope parameter of scope, which visits ThisReference parameter of thisReference, BlockScope parameter of scope, which visits ThrowStatement parameter of throwStatement, BlockScope parameter of scope, which visits TrueLiteral parameter of trueLiteral, BlockScope parameter of scope, which visits TryStatement parameter of tryStatement, BlockScope parameter of scope, which visits TypeDeclaration parameter of localTypeDeclaration, BlockScope parameter of scope, which visits TypeDeclaration parameter of memberTypeDeclaration, ClassScope parameter of scope, which visits TypeDeclaration parameter of typeDeclaration, CompilationUnitScope parameter of scope, which visits TypeParameter parameter of typeParameter, BlockScope parameter of scope, which visits TypeParameter parameter of typeParameter, ClassScope parameter of scope, which visits UnaryExpression parameter of unaryExpression, BlockScope parameter of scope, which visits WhileStatement parameter of whileStatement, BlockScope parameter of scope, which visits Wildcard parameter of wildcard, BlockScope parameter of scope, which visits Wildcard parameter of wildcard, ClassScope parameter of scope.
