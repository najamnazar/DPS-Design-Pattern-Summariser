GenericAstVisitor acts as an observer, which visits ASTNode parameter of node Node, which visits AllocationExpression parameter of allocationExpression, BlockScope parameter of scope, which visits AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope, which visits AnnotationMethodDeclaration parameter of annotationTypeDeclaration, ClassScope parameter of classScope, which visits Argument parameter of argument, BlockScope parameter of scope, which visits Argument parameter of argument, ClassScope parameter of scope, which visits ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope, which visits ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope, which visits ArrayInitializer parameter of arrayInitializer, ClassScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope, which visits ArrayReference parameter of arrayReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope, which visits AssertStatement parameter of assertStatement, BlockScope parameter of scope, which visits Assignment parameter of assignment, BlockScope parameter of scope, which visits BinaryExpression parameter of binaryExpression, BlockScope parameter of scope, which visits Block parameter of block, BlockScope parameter of scope, which visits BreakStatement parameter of breakStatement, BlockScope parameter of scope, which visits CaseStatement parameter of caseStatement, BlockScope parameter of scope, which visits CastExpression parameter of castExpression, BlockScope parameter of scope, which visits CharLiteral parameter of charLiteral, BlockScope parameter of scope, which visits ClassLiteralAccess parameter of classLiteral, BlockScope parameter of scope, which visits Clinit parameter of clinit, ClassScope parameter of scope, which visits ModuleDeclaration parameter of module, CompilationUnitScope parameter of scope, which visits CompilationUnitDeclaration parameter of compilationUnitDeclaration, CompilationUnitScope parameter of scope, which visits CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope, which visits ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope, which visits ConstructorDeclaration parameter of constructorDeclaration, ClassScope parameter of scope, which visits ContinueStatement parameter of continueStatement, BlockScope parameter of scope, which visits DoStatement parameter of doStatement, BlockScope parameter of scope, which visits DoubleLiteral parameter of doubleLiteral, BlockScope parameter of scope, which visits EmptyStatement parameter of emptyStatement, BlockScope parameter of scope, which visits EqualExpression parameter of equalExpression, BlockScope parameter of scope, which visits ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope, which visits ExtendedStringLiteral parameter of extendedStringLiteral, BlockScope parameter of scope, which visits FalseLiteral parameter of falseLiteral, BlockScope parameter of scope, which visits FieldDeclaration parameter of fieldDeclaration, MethodScope parameter of scope, which visits FieldReference parameter of fieldReference, BlockScope parameter of scope, which visits FieldReference parameter of fieldReference, ClassScope parameter of scope, which visits FloatLiteral parameter of floatLiteral, BlockScope parameter of scope, which visits ForeachStatement parameter of forStatement, BlockScope parameter of scope, which visits ForStatement parameter of forStatement, BlockScope parameter of scope, which visits IfStatement parameter of ifStatement, BlockScope parameter of scope, which visits ImportReference parameter of importRef, CompilationUnitScope parameter of scope, which visits Initializer parameter of initializer, MethodScope parameter of scope, which visits InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope, which visits IntLiteral parameter of intLiteral, BlockScope parameter of scope, which visits Javadoc parameter of javadoc, BlockScope parameter of scope, which visits Javadoc parameter of javadoc, ClassScope parameter of scope, which visits JavadocAllocationExpression parameter of expression, BlockScope parameter of scope, which visits JavadocAllocationExpression parameter of expression, ClassScope parameter of scope, which visits JavadocArgumentExpression parameter of expression, BlockScope parameter of scope, which visits JavadocArgumentExpression parameter of expression, ClassScope parameter of scope, which visits JavadocArrayQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocArrayQualifiedTypeReference parameter of typeRef, ClassScope parameter of scope, which visits JavadocArraySingleTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocArraySingleTypeReference parameter of typeRef, ClassScope parameter of scope, which visits JavadocFieldReference parameter of fieldRef, BlockScope parameter of scope, which visits JavadocFieldReference parameter of fieldRef, ClassScope parameter of scope, which visits JavadocImplicitTypeReference parameter of implicitTypeReference, BlockScope parameter of scope, which visits JavadocImplicitTypeReference parameter of implicitTypeReference, ClassScope parameter of scope, which visits JavadocMessageSend parameter of messageSend, BlockScope parameter of scope, which visits JavadocMessageSend parameter of messageSend, ClassScope parameter of scope, which visits JavadocQualifiedTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocQualifiedTypeReference parameter of typeRef, ClassScope parameter of scope, which visits JavadocModuleReference parameter of moduleRef, BlockScope parameter of scope, which visits JavadocModuleReference parameter of moduleRef, ClassScope parameter of scope, which visits JavadocReturnStatement parameter of statement, BlockScope parameter of scope, which visits JavadocReturnStatement parameter of statement, ClassScope parameter of scope, which visits JavadocSingleNameReference parameter of argument, BlockScope parameter of scope, which visits JavadocSingleNameReference parameter of argument, ClassScope parameter of scope, which visits JavadocSingleTypeReference parameter of typeRef, BlockScope parameter of scope, which visits JavadocSingleTypeReference parameter of typeRef, ClassScope parameter of scope, which visits LabeledStatement parameter of labeledStatement, BlockScope parameter of scope, which visits LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope, which visits LongLiteral parameter of longLiteral, BlockScope parameter of scope, which visits MarkerAnnotation parameter of annotation, BlockScope parameter of scope, which visits MarkerAnnotation parameter of annotation, ClassScope parameter of scope, which visits MemberValuePair parameter of pair, BlockScope parameter of scope, which visits MemberValuePair parameter of pair, ClassScope parameter of scope, which visits MessageSend parameter of messageSend, BlockScope parameter of scope, which visits MethodDeclaration parameter of methodDeclaration, ClassScope parameter of scope, which visits StringLiteralConcatenation parameter of literal, BlockScope parameter of scope, which visits NormalAnnotation parameter of annotation, BlockScope parameter of scope, which visits NormalAnnotation parameter of annotation, ClassScope parameter of scope, which visits NullLiteral parameter of nullLiteral, BlockScope parameter of scope, which visits OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope, which visits PostfixExpression parameter of postfixExpression, BlockScope parameter of scope, which visits PrefixExpression parameter of prefixExpression, BlockScope parameter of scope, which visits QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope, which visits QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope, which visits QualifiedNameReference parameter of qualifiedNameReference, ClassScope parameter of scope, which visits QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope, which visits QualifiedSuperReference parameter of qualifiedSuperReference, ClassScope parameter of scope, which visits QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope, which visits QualifiedThisReference parameter of qualifiedThisReference, ClassScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope, which visits ReturnStatement parameter of returnStatement, BlockScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, BlockScope parameter of scope, which visits SingleMemberAnnotation parameter of annotation, ClassScope parameter of scope, which visits SingleNameReference parameter of singleNameReference, BlockScope parameter of scope, which visits SingleNameReference parameter of singleNameReference, ClassScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope, which visits StringLiteral parameter of stringLiteral, BlockScope parameter of scope, which visits SuperReference parameter of superReference, BlockScope parameter of scope, which visits SwitchStatement parameter of switchStatement, BlockScope parameter of scope, which visits SynchronizedStatement parameter of synchronizedStatement, BlockScope parameter of scope, which visits ThisReference parameter of thisReference, BlockScope parameter of scope, which visits ThisReference parameter of thisReference, ClassScope parameter of scope, which visits ThrowStatement parameter of throwStatement, BlockScope parameter of scope, which visits TrueLiteral parameter of trueLiteral, BlockScope parameter of scope, which visits TryStatement parameter of tryStatement, BlockScope parameter of scope, which visits TypeDeclaration parameter of localTypeDeclaration, BlockScope parameter of scope, which visits TypeDeclaration parameter of memberTypeDeclaration, ClassScope parameter of scope, which visits TypeDeclaration parameter of typeDeclaration, CompilationUnitScope parameter of scope, which visits TypeParameter parameter of typeParameter, BlockScope parameter of scope, which visits TypeParameter parameter of typeParameter, ClassScope parameter of scope, which visits UnaryExpression parameter of unaryExpression, BlockScope parameter of scope, which visits UnionTypeReference parameter of unionTypeReference, BlockScope parameter of scope, which visits UnionTypeReference parameter of unionTypeReference, ClassScope parameter of scope, which visits YieldStatement parameter of yieldStatement, BlockScope parameter of scope, which visits WhileStatement parameter of whileStatement, BlockScope parameter of scope, which visits Wildcard parameter of wildcard, BlockScope parameter of scope, which visits Wildcard parameter of wildcard, ClassScope parameter of scope, which visits LambdaExpression parameter of lambdaExpression, BlockScope parameter of blockScope, which visits ReferenceExpression parameter of referenceExpression, BlockScope parameter of blockScope, which visits IntersectionCastTypeReference parameter of intersectionCastTypeReference, ClassScope parameter of scope, which visits IntersectionCastTypeReference parameter of intersectionCastTypeReference, BlockScope parameter of scope, which visits SwitchExpression parameter of switchExpression, BlockScope parameter of blockScope, which visits RecordComponent parameter of recordComponent, BlockScope parameter of scope.
