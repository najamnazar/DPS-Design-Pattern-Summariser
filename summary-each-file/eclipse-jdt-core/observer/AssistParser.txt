AssistParser acts as a publisher for observer Expression, which assists Identifier, which copies Parser parameter of from State, which becomes Simple Parser, which restores Object parameter of parserState Assist Parser, which bodies AbstractMethodDeclaration parameter of method End, which bodies Initializer parameter of initializer End, which builds Initial Recovery State, which cooks Ast Ptr, which inits RecoveredElement parameter of element Module Info, which consumes Annotation Type Declaration Header, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Header, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Member Value, which consumes Enum Constant Header, which consumes Enum Constant Header Name, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header, which consumes Exit Member Value, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which triggers Statement parameter of statement, boolean parameter of shouldCommit Recovery Upon Lambda Closure, which detects ASTNode parameter of parseTree Assist Node Parent, which replaces RecoveredElement parameter of top, ASTNode parameter of assistParent, int parameter of start, int parameter of end, Statement parameter of stmt Assist Statement, which assists Node Parent, which is Assist Parser, which consumes Block Statement, which consumes Block Statements, which consumes Block, which consumes Field Declaration, which consumes Force No Diet, which consumes Interface Header, which consumes Nested Lambda, which consumes Method Body, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Method Header, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Module Header, which consumes Module Declaration, which consumes Nested Method, which consumes Open Block, which consumes Open Fake Block, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Restore Diet, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Pkg Name, which consumes Single Target Module Name, which consumes Single Requires Module Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which adjusts TerminalToken parameter of token Bracket, which consumes TerminalToken parameter of token Token, which consumes Type Import On Demand Declaration Name, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of asistIdentifier, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which flushes Assist State, which flushes Element Stack, which constructs int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Assist Type Reference For Generic Type, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Headers, which goes For Compilation Unit, which goes For Block Statements Or Catch Header, which identifiers int parameter of subsetLength Sub Set, which indexes Of Assist Identifier, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which initializes Scanner, which is Indirectly Inside Field Initialization, which is Indirectly Inside Enum Constantnitialization, which is Indirectly Inside Method, which is Indirectly Inside Lambda Expression, which is Indirectly Inside Lambda Block, which is Indirectly Inside Type, which is Inside Attribute Value, which is Inside Field Initialization, which is Inside Enum Constantnitialization, which is Inside Module Info, which is Inside Method, which is Inside Type, which lasts int parameter of kind Index Of Element, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit Block Statements, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which pops int parameter of kind Element, which pops int parameter of kind Until Element, which prepares For Block Statements, which prepares For Headers, which requires Extended Recovery, which pushes int parameter of kind On Element Stack, which pushes int parameter of kind, int parameter of info On Element Stack, which pushes int parameter of kind, int parameter of info, Object parameter of objectInfo On Element Stack, which recoveries Exit From Variable, which recoveries Token Check, which resets, which commits, which adds int parameter of newSnapShotPosition New Snap Shot, which pops Snap Shot, which assists Node Needs Stacking, which shoulds Stack Assist Node, which gets Next Token, which creates Snap Shot Parser, which falls Statement parameter of unused Back To Spring Forward, which resumes After Recovery, which safes To Resume, which nos ResumeState parameter of previous Progress Since, which is Inside Array Initializer, which sets char[] parameter of assistIdent Assist Identifier, which tops int parameter of owner Known Element Info, which tops int parameter of owner, int parameter of offSet Known Element Info, which tops int parameter of owner Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Object Info, which tops int parameter of owner Known Element Object Info, which wraps ASTNode parameter of ast With Explicit Constructor Call If Needed.
AssistParser acts as a publisher for observer String, which assists Identifier, which copies Parser parameter of from State, which becomes Simple Parser, which restores Object parameter of parserState Assist Parser, which bodies AbstractMethodDeclaration parameter of method End, which bodies Initializer parameter of initializer End, which builds Initial Recovery State, which cooks Ast Ptr, which inits RecoveredElement parameter of element Module Info, which consumes Annotation Type Declaration Header, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Header, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Member Value, which consumes Enum Constant Header, which consumes Enum Constant Header Name, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header, which consumes Exit Member Value, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which triggers Statement parameter of statement, boolean parameter of shouldCommit Recovery Upon Lambda Closure, which detects ASTNode parameter of parseTree Assist Node Parent, which replaces RecoveredElement parameter of top, ASTNode parameter of assistParent, int parameter of start, int parameter of end, Statement parameter of stmt Assist Statement, which assists Node Parent, which is Assist Parser, which consumes Block Statement, which consumes Block Statements, which consumes Block, which consumes Field Declaration, which consumes Force No Diet, which consumes Interface Header, which consumes Nested Lambda, which consumes Method Body, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Method Header, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Module Header, which consumes Module Declaration, which consumes Nested Method, which consumes Open Block, which consumes Open Fake Block, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Restore Diet, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Pkg Name, which consumes Single Target Module Name, which consumes Single Requires Module Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which adjusts TerminalToken parameter of token Bracket, which consumes TerminalToken parameter of token Token, which consumes Type Import On Demand Declaration Name, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of asistIdentifier, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which flushes Assist State, which flushes Element Stack, which constructs int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Assist Type Reference For Generic Type, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Headers, which goes For Compilation Unit, which goes For Block Statements Or Catch Header, which identifiers int parameter of subsetLength Sub Set, which indexes Of Assist Identifier, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which initializes Scanner, which is Indirectly Inside Field Initialization, which is Indirectly Inside Enum Constantnitialization, which is Indirectly Inside Method, which is Indirectly Inside Lambda Expression, which is Indirectly Inside Lambda Block, which is Indirectly Inside Type, which is Inside Attribute Value, which is Inside Field Initialization, which is Inside Enum Constantnitialization, which is Inside Module Info, which is Inside Method, which is Inside Type, which lasts int parameter of kind Index Of Element, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit Block Statements, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which pops int parameter of kind Element, which pops int parameter of kind Until Element, which prepares For Block Statements, which prepares For Headers, which requires Extended Recovery, which pushes int parameter of kind On Element Stack, which pushes int parameter of kind, int parameter of info On Element Stack, which pushes int parameter of kind, int parameter of info, Object parameter of objectInfo On Element Stack, which recoveries Exit From Variable, which recoveries Token Check, which resets, which commits, which adds int parameter of newSnapShotPosition New Snap Shot, which pops Snap Shot, which assists Node Needs Stacking, which shoulds Stack Assist Node, which gets Next Token, which creates Snap Shot Parser, which falls Statement parameter of unused Back To Spring Forward, which resumes After Recovery, which safes To Resume, which nos ResumeState parameter of previous Progress Since, which is Inside Array Initializer, which sets char[] parameter of assistIdent Assist Identifier, which tops int parameter of owner Known Element Info, which tops int parameter of owner, int parameter of offSet Known Element Info, which tops int parameter of owner Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Object Info, which tops int parameter of owner Known Element Object Info, which wraps ASTNode parameter of ast With Explicit Constructor Call If Needed.
AssistParser acts as a publisher for observer Parser, which is inherited by SelectionParser, CompletionParser, which assists Identifier, which copies Parser parameter of from State, which becomes Simple Parser, which restores Object parameter of parserState Assist Parser, which bodies AbstractMethodDeclaration parameter of method End, which bodies Initializer parameter of initializer End, which builds Initial Recovery State, which cooks Ast Ptr, which inits RecoveredElement parameter of element Module Info, which consumes Annotation Type Declaration Header, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Header, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Member Value, which consumes Enum Constant Header, which consumes Enum Constant Header Name, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header, which consumes Exit Member Value, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which triggers Statement parameter of statement, boolean parameter of shouldCommit Recovery Upon Lambda Closure, which detects ASTNode parameter of parseTree Assist Node Parent, which replaces RecoveredElement parameter of top, ASTNode parameter of assistParent, int parameter of start, int parameter of end, Statement parameter of stmt Assist Statement, which assists Node Parent, which is Assist Parser, which consumes Block Statement, which consumes Block Statements, which consumes Block, which consumes Field Declaration, which consumes Force No Diet, which consumes Interface Header, which consumes Nested Lambda, which consumes Method Body, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Method Header, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Module Header, which consumes Module Declaration, which consumes Nested Method, which consumes Open Block, which consumes Open Fake Block, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Restore Diet, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Pkg Name, which consumes Single Target Module Name, which consumes Single Requires Module Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which adjusts TerminalToken parameter of token Bracket, which consumes TerminalToken parameter of token Token, which consumes Type Import On Demand Declaration Name, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of asistIdentifier, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which flushes Assist State, which flushes Element Stack, which constructs int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Assist Type Reference For Generic Type, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Headers, which goes For Compilation Unit, which goes For Block Statements Or Catch Header, which identifiers int parameter of subsetLength Sub Set, which indexes Of Assist Identifier, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which initializes Scanner, which is Indirectly Inside Field Initialization, which is Indirectly Inside Enum Constantnitialization, which is Indirectly Inside Method, which is Indirectly Inside Lambda Expression, which is Indirectly Inside Lambda Block, which is Indirectly Inside Type, which is Inside Attribute Value, which is Inside Field Initialization, which is Inside Enum Constantnitialization, which is Inside Module Info, which is Inside Method, which is Inside Type, which lasts int parameter of kind Index Of Element, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit Block Statements, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which pops int parameter of kind Element, which pops int parameter of kind Until Element, which prepares For Block Statements, which prepares For Headers, which requires Extended Recovery, which pushes int parameter of kind On Element Stack, which pushes int parameter of kind, int parameter of info On Element Stack, which pushes int parameter of kind, int parameter of info, Object parameter of objectInfo On Element Stack, which recoveries Exit From Variable, which recoveries Token Check, which resets, which commits, which adds int parameter of newSnapShotPosition New Snap Shot, which pops Snap Shot, which assists Node Needs Stacking, which shoulds Stack Assist Node, which gets Next Token, which creates Snap Shot Parser, which falls Statement parameter of unused Back To Spring Forward, which resumes After Recovery, which safes To Resume, which nos ResumeState parameter of previous Progress Since, which is Inside Array Initializer, which sets char[] parameter of assistIdent Assist Identifier, which tops int parameter of owner Known Element Info, which tops int parameter of owner, int parameter of offSet Known Element Info, which tops int parameter of owner Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Object Info, which tops int parameter of owner Known Element Object Info, which wraps ASTNode parameter of ast With Explicit Constructor Call If Needed.
AssistParser acts as a publisher for observer ASTNode, which is inherited by SelectionParser, CompletionParser, which assists Identifier, which copies Parser parameter of from State, which becomes Simple Parser, which restores Object parameter of parserState Assist Parser, which bodies AbstractMethodDeclaration parameter of method End, which bodies Initializer parameter of initializer End, which builds Initial Recovery State, which cooks Ast Ptr, which inits RecoveredElement parameter of element Module Info, which consumes Annotation Type Declaration Header, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Header, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Member Value, which consumes Enum Constant Header, which consumes Enum Constant Header Name, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header, which consumes Exit Member Value, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which triggers Statement parameter of statement, boolean parameter of shouldCommit Recovery Upon Lambda Closure, which detects ASTNode parameter of parseTree Assist Node Parent, which replaces RecoveredElement parameter of top, ASTNode parameter of assistParent, int parameter of start, int parameter of end, Statement parameter of stmt Assist Statement, which assists Node Parent, which is Assist Parser, which consumes Block Statement, which consumes Block Statements, which consumes Block, which consumes Field Declaration, which consumes Force No Diet, which consumes Interface Header, which consumes Nested Lambda, which consumes Method Body, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Method Header, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Module Header, which consumes Module Declaration, which consumes Nested Method, which consumes Open Block, which consumes Open Fake Block, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Restore Diet, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Pkg Name, which consumes Single Target Module Name, which consumes Single Requires Module Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which adjusts TerminalToken parameter of token Bracket, which consumes TerminalToken parameter of token Token, which consumes Type Import On Demand Declaration Name, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of asistIdentifier, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which flushes Assist State, which flushes Element Stack, which constructs int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Assist Type Reference For Generic Type, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Headers, which goes For Compilation Unit, which goes For Block Statements Or Catch Header, which identifiers int parameter of subsetLength Sub Set, which indexes Of Assist Identifier, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which initializes Scanner, which is Indirectly Inside Field Initialization, which is Indirectly Inside Enum Constantnitialization, which is Indirectly Inside Method, which is Indirectly Inside Lambda Expression, which is Indirectly Inside Lambda Block, which is Indirectly Inside Type, which is Inside Attribute Value, which is Inside Field Initialization, which is Inside Enum Constantnitialization, which is Inside Module Info, which is Inside Method, which is Inside Type, which lasts int parameter of kind Index Of Element, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit Block Statements, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which pops int parameter of kind Element, which pops int parameter of kind Until Element, which prepares For Block Statements, which prepares For Headers, which requires Extended Recovery, which pushes int parameter of kind On Element Stack, which pushes int parameter of kind, int parameter of info On Element Stack, which pushes int parameter of kind, int parameter of info, Object parameter of objectInfo On Element Stack, which recoveries Exit From Variable, which recoveries Token Check, which resets, which commits, which adds int parameter of newSnapShotPosition New Snap Shot, which pops Snap Shot, which assists Node Needs Stacking, which shoulds Stack Assist Node, which gets Next Token, which creates Snap Shot Parser, which falls Statement parameter of unused Back To Spring Forward, which resumes After Recovery, which safes To Resume, which nos ResumeState parameter of previous Progress Since, which is Inside Array Initializer, which sets char[] parameter of assistIdent Assist Identifier, which tops int parameter of owner Known Element Info, which tops int parameter of owner, int parameter of offSet Known Element Info, which tops int parameter of owner Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Object Info, which tops int parameter of owner Known Element Object Info, which wraps ASTNode parameter of ast With Explicit Constructor Call If Needed.
AssistParser acts as a publisher for observer Object, which is inherited by SelectionParser, CompletionParser, which assists Identifier, which copies Parser parameter of from State, which becomes Simple Parser, which restores Object parameter of parserState Assist Parser, which bodies AbstractMethodDeclaration parameter of method End, which bodies Initializer parameter of initializer End, which builds Initial Recovery State, which cooks Ast Ptr, which inits RecoveredElement parameter of element Module Info, which consumes Annotation Type Declaration Header, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Header, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Member Value, which consumes Enum Constant Header, which consumes Enum Constant Header Name, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header, which consumes Exit Member Value, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which triggers Statement parameter of statement, boolean parameter of shouldCommit Recovery Upon Lambda Closure, which detects ASTNode parameter of parseTree Assist Node Parent, which replaces RecoveredElement parameter of top, ASTNode parameter of assistParent, int parameter of start, int parameter of end, Statement parameter of stmt Assist Statement, which assists Node Parent, which is Assist Parser, which consumes Block Statement, which consumes Block Statements, which consumes Block, which consumes Field Declaration, which consumes Force No Diet, which consumes Interface Header, which consumes Nested Lambda, which consumes Method Body, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Method Header, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Module Header, which consumes Module Declaration, which consumes Nested Method, which consumes Open Block, which consumes Open Fake Block, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Restore Diet, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Pkg Name, which consumes Single Target Module Name, which consumes Single Requires Module Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which adjusts TerminalToken parameter of token Bracket, which consumes TerminalToken parameter of token Token, which consumes Type Import On Demand Declaration Name, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of asistIdentifier, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which flushes Assist State, which flushes Element Stack, which constructs int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Assist Type Reference For Generic Type, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Headers, which goes For Compilation Unit, which goes For Block Statements Or Catch Header, which identifiers int parameter of subsetLength Sub Set, which indexes Of Assist Identifier, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which initializes Scanner, which is Indirectly Inside Field Initialization, which is Indirectly Inside Enum Constantnitialization, which is Indirectly Inside Method, which is Indirectly Inside Lambda Expression, which is Indirectly Inside Lambda Block, which is Indirectly Inside Type, which is Inside Attribute Value, which is Inside Field Initialization, which is Inside Enum Constantnitialization, which is Inside Module Info, which is Inside Method, which is Inside Type, which lasts int parameter of kind Index Of Element, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit Block Statements, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which pops int parameter of kind Element, which pops int parameter of kind Until Element, which prepares For Block Statements, which prepares For Headers, which requires Extended Recovery, which pushes int parameter of kind On Element Stack, which pushes int parameter of kind, int parameter of info On Element Stack, which pushes int parameter of kind, int parameter of info, Object parameter of objectInfo On Element Stack, which recoveries Exit From Variable, which recoveries Token Check, which resets, which commits, which adds int parameter of newSnapShotPosition New Snap Shot, which pops Snap Shot, which assists Node Needs Stacking, which shoulds Stack Assist Node, which gets Next Token, which creates Snap Shot Parser, which falls Statement parameter of unused Back To Spring Forward, which resumes After Recovery, which safes To Resume, which nos ResumeState parameter of previous Progress Since, which is Inside Array Initializer, which sets char[] parameter of assistIdent Assist Identifier, which tops int parameter of owner Known Element Info, which tops int parameter of owner, int parameter of offSet Known Element Info, which tops int parameter of owner Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Object Info, which tops int parameter of owner Known Element Object Info, which wraps ASTNode parameter of ast With Explicit Constructor Call If Needed.
AssistParser acts as a publisher for observer ASTNode, which assists Identifier, which copies Parser parameter of from State, which becomes Simple Parser, which restores Object parameter of parserState Assist Parser, which bodies AbstractMethodDeclaration parameter of method End, which bodies Initializer parameter of initializer End, which builds Initial Recovery State, which cooks Ast Ptr, which inits RecoveredElement parameter of element Module Info, which consumes Annotation Type Declaration Header, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Header, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Member Value, which consumes Enum Constant Header, which consumes Enum Constant Header Name, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header, which consumes Exit Member Value, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which triggers Statement parameter of statement, boolean parameter of shouldCommit Recovery Upon Lambda Closure, which detects ASTNode parameter of parseTree Assist Node Parent, which replaces RecoveredElement parameter of top, ASTNode parameter of assistParent, int parameter of start, int parameter of end, Statement parameter of stmt Assist Statement, which assists Node Parent, which is Assist Parser, which consumes Block Statement, which consumes Block Statements, which consumes Block, which consumes Field Declaration, which consumes Force No Diet, which consumes Interface Header, which consumes Nested Lambda, which consumes Method Body, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Method Header, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Module Header, which consumes Module Declaration, which consumes Nested Method, which consumes Open Block, which consumes Open Fake Block, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Restore Diet, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Pkg Name, which consumes Single Target Module Name, which consumes Single Requires Module Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which adjusts TerminalToken parameter of token Bracket, which consumes TerminalToken parameter of token Token, which consumes Type Import On Demand Declaration Name, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of asistIdentifier, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which flushes Assist State, which flushes Element Stack, which constructs int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Assist Type Reference For Generic Type, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Headers, which goes For Compilation Unit, which goes For Block Statements Or Catch Header, which identifiers int parameter of subsetLength Sub Set, which indexes Of Assist Identifier, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which initializes Scanner, which is Indirectly Inside Field Initialization, which is Indirectly Inside Enum Constantnitialization, which is Indirectly Inside Method, which is Indirectly Inside Lambda Expression, which is Indirectly Inside Lambda Block, which is Indirectly Inside Type, which is Inside Attribute Value, which is Inside Field Initialization, which is Inside Enum Constantnitialization, which is Inside Module Info, which is Inside Method, which is Inside Type, which lasts int parameter of kind Index Of Element, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit Block Statements, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which pops int parameter of kind Element, which pops int parameter of kind Until Element, which prepares For Block Statements, which prepares For Headers, which requires Extended Recovery, which pushes int parameter of kind On Element Stack, which pushes int parameter of kind, int parameter of info On Element Stack, which pushes int parameter of kind, int parameter of info, Object parameter of objectInfo On Element Stack, which recoveries Exit From Variable, which recoveries Token Check, which resets, which commits, which adds int parameter of newSnapShotPosition New Snap Shot, which pops Snap Shot, which assists Node Needs Stacking, which shoulds Stack Assist Node, which gets Next Token, which creates Snap Shot Parser, which falls Statement parameter of unused Back To Spring Forward, which resumes After Recovery, which safes To Resume, which nos ResumeState parameter of previous Progress Since, which is Inside Array Initializer, which sets char[] parameter of assistIdent Assist Identifier, which tops int parameter of owner Known Element Info, which tops int parameter of owner, int parameter of offSet Known Element Info, which tops int parameter of owner Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Object Info, which tops int parameter of owner Known Element Object Info, which wraps ASTNode parameter of ast With Explicit Constructor Call If Needed.
AssistParser acts as a publisher for observer CompilationUnitDeclaration, which assists Identifier, which copies Parser parameter of from State, which becomes Simple Parser, which restores Object parameter of parserState Assist Parser, which bodies AbstractMethodDeclaration parameter of method End, which bodies Initializer parameter of initializer End, which builds Initial Recovery State, which cooks Ast Ptr, which inits RecoveredElement parameter of element Module Info, which consumes Annotation Type Declaration Header, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Header, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Member Value, which consumes Enum Constant Header, which consumes Enum Constant Header Name, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header, which consumes Exit Member Value, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which triggers Statement parameter of statement, boolean parameter of shouldCommit Recovery Upon Lambda Closure, which detects ASTNode parameter of parseTree Assist Node Parent, which replaces RecoveredElement parameter of top, ASTNode parameter of assistParent, int parameter of start, int parameter of end, Statement parameter of stmt Assist Statement, which assists Node Parent, which is Assist Parser, which consumes Block Statement, which consumes Block Statements, which consumes Block, which consumes Field Declaration, which consumes Force No Diet, which consumes Interface Header, which consumes Nested Lambda, which consumes Method Body, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Method Header, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Module Header, which consumes Module Declaration, which consumes Nested Method, which consumes Open Block, which consumes Open Fake Block, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Restore Diet, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Pkg Name, which consumes Single Target Module Name, which consumes Single Requires Module Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which adjusts TerminalToken parameter of token Bracket, which consumes TerminalToken parameter of token Token, which consumes Type Import On Demand Declaration Name, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of asistIdentifier, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which flushes Assist State, which flushes Element Stack, which constructs int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Assist Type Reference For Generic Type, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Headers, which goes For Compilation Unit, which goes For Block Statements Or Catch Header, which identifiers int parameter of subsetLength Sub Set, which indexes Of Assist Identifier, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which initializes Scanner, which is Indirectly Inside Field Initialization, which is Indirectly Inside Enum Constantnitialization, which is Indirectly Inside Method, which is Indirectly Inside Lambda Expression, which is Indirectly Inside Lambda Block, which is Indirectly Inside Type, which is Inside Attribute Value, which is Inside Field Initialization, which is Inside Enum Constantnitialization, which is Inside Module Info, which is Inside Method, which is Inside Type, which lasts int parameter of kind Index Of Element, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit Block Statements, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which pops int parameter of kind Element, which pops int parameter of kind Until Element, which prepares For Block Statements, which prepares For Headers, which requires Extended Recovery, which pushes int parameter of kind On Element Stack, which pushes int parameter of kind, int parameter of info On Element Stack, which pushes int parameter of kind, int parameter of info, Object parameter of objectInfo On Element Stack, which recoveries Exit From Variable, which recoveries Token Check, which resets, which commits, which adds int parameter of newSnapShotPosition New Snap Shot, which pops Snap Shot, which assists Node Needs Stacking, which shoulds Stack Assist Node, which gets Next Token, which creates Snap Shot Parser, which falls Statement parameter of unused Back To Spring Forward, which resumes After Recovery, which safes To Resume, which nos ResumeState parameter of previous Progress Since, which is Inside Array Initializer, which sets char[] parameter of assistIdent Assist Identifier, which tops int parameter of owner Known Element Info, which tops int parameter of owner, int parameter of offSet Known Element Info, which tops int parameter of owner Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Object Info, which tops int parameter of owner Known Element Object Info, which wraps ASTNode parameter of ast With Explicit Constructor Call If Needed.
AssistParser acts as an observer, which assists Identifier, which copies Parser parameter of from State, which becomes Simple Parser, which restores Object parameter of parserState Assist Parser, which bodies AbstractMethodDeclaration parameter of method End, which bodies Initializer parameter of initializer End, which builds Initial Recovery State, which cooks Ast Ptr, which inits RecoveredElement parameter of element Module Info, which consumes Annotation Type Declaration Header, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Header, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Member Value, which consumes Enum Constant Header, which consumes Enum Constant Header Name, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header, which consumes Exit Member Value, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which triggers Statement parameter of statement, boolean parameter of shouldCommit Recovery Upon Lambda Closure, which detects ASTNode parameter of parseTree Assist Node Parent, which replaces RecoveredElement parameter of top, ASTNode parameter of assistParent, int parameter of start, int parameter of end, Statement parameter of stmt Assist Statement, which assists Node Parent, which is Assist Parser, which consumes Block Statement, which consumes Block Statements, which consumes Block, which consumes Field Declaration, which consumes Force No Diet, which consumes Interface Header, which consumes Nested Lambda, which consumes Method Body, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Method Header, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Module Header, which consumes Module Declaration, which consumes Nested Method, which consumes Open Block, which consumes Open Fake Block, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Restore Diet, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Pkg Name, which consumes Single Target Module Name, which consumes Single Requires Module Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which adjusts TerminalToken parameter of token Bracket, which consumes TerminalToken parameter of token Token, which consumes Type Import On Demand Declaration Name, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of asistIdentifier, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which flushes Assist State, which flushes Element Stack, which constructs int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Assist Type Reference For Generic Type, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Headers, which goes For Compilation Unit, which goes For Block Statements Or Catch Header, which identifiers int parameter of subsetLength Sub Set, which indexes Of Assist Identifier, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which initializes Scanner, which is Indirectly Inside Field Initialization, which is Indirectly Inside Enum Constantnitialization, which is Indirectly Inside Method, which is Indirectly Inside Lambda Expression, which is Indirectly Inside Lambda Block, which is Indirectly Inside Type, which is Inside Attribute Value, which is Inside Field Initialization, which is Inside Enum Constantnitialization, which is Inside Module Info, which is Inside Method, which is Inside Type, which lasts int parameter of kind Index Of Element, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit Block Statements, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which pops int parameter of kind Element, which pops int parameter of kind Until Element, which prepares For Block Statements, which prepares For Headers, which requires Extended Recovery, which pushes int parameter of kind On Element Stack, which pushes int parameter of kind, int parameter of info On Element Stack, which pushes int parameter of kind, int parameter of info, Object parameter of objectInfo On Element Stack, which recoveries Exit From Variable, which recoveries Token Check, which resets, which commits, which adds int parameter of newSnapShotPosition New Snap Shot, which pops Snap Shot, which assists Node Needs Stacking, which shoulds Stack Assist Node, which gets Next Token, which creates Snap Shot Parser, which falls Statement parameter of unused Back To Spring Forward, which resumes After Recovery, which safes To Resume, which nos ResumeState parameter of previous Progress Since, which is Inside Array Initializer, which sets char[] parameter of assistIdent Assist Identifier, which tops int parameter of owner Known Element Info, which tops int parameter of owner, int parameter of offSet Known Element Info, which tops int parameter of owner Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Object Info, which tops int parameter of owner Known Element Object Info, which wraps ASTNode parameter of ast With Explicit Constructor Call If Needed.
AssistParser acts as a publisher for observer TerminalToken, which is inherited by SelectionParser, CompletionParser, which assists Identifier, which copies Parser parameter of from State, which becomes Simple Parser, which restores Object parameter of parserState Assist Parser, which bodies AbstractMethodDeclaration parameter of method End, which bodies Initializer parameter of initializer End, which builds Initial Recovery State, which cooks Ast Ptr, which inits RecoveredElement parameter of element Module Info, which consumes Annotation Type Declaration Header, which consumes Class Body Declaration, which consumes Class Bodyopt, which consumes Class Header, which consumes Constructor Body, which consumes Constructor Header, which consumes boolean parameter of hasModifiers Enhanced For Statement Header Init, which consumes boolean parameter of qualified Enter Anonymous Class Body, which consumes Enter Member Value, which consumes Enum Constant Header, which consumes Enum Constant Header Name, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header, which consumes Exit Member Value, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which triggers Statement parameter of statement, boolean parameter of shouldCommit Recovery Upon Lambda Closure, which detects ASTNode parameter of parseTree Assist Node Parent, which replaces RecoveredElement parameter of top, ASTNode parameter of assistParent, int parameter of start, int parameter of end, Statement parameter of stmt Assist Statement, which assists Node Parent, which is Assist Parser, which consumes Block Statement, which consumes Block Statements, which consumes Block, which consumes Field Declaration, which consumes Force No Diet, which consumes Interface Header, which consumes Nested Lambda, which consumes Method Body, which consumes boolean parameter of isNotAbstract, boolean parameter of isDefaultMethod Method Declaration, which consumes Method Header, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Module Header, which consumes Module Declaration, which consumes Nested Method, which consumes Open Block, which consumes Open Fake Block, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Restore Diet, which consumes int parameter of modifier Single Modifier Import Declaration Name, which consumes Single Pkg Name, which consumes Single Target Module Name, which consumes Single Requires Module Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which adjusts TerminalToken parameter of token Bracket, which consumes TerminalToken parameter of token Token, which consumes Type Import On Demand Declaration Name, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Visibility Reference, which creates char[][] parameter of tokens, long[] parameter of positions, int parameter of mod Assist Import Reference, which creates int parameter of index Assist Module Reference, which creates char[][] parameter of tokens, long[] parameter of positions Assist Package Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Name Reference, which creates char[][] parameter of previousIdentifiers, char[] parameter of assistName, long[] parameter of positions Qualified Assist Type Reference, which creates char[][] parameter of previousIdentifiers, TypeReference[][] parameter of typeArguments, char[] parameter of asistIdentifier, TypeReference[] parameter of assistTypeArguments, long[] parameter of positions Parameterized Qualified Assist Type Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Name Reference, which creates char[] parameter of assistName, long parameter of position Single Assist Type Reference, which creates TypeReference[] parameter of typeArguments, char[] parameter of assistName, long parameter of position Parameterized Single Assist Type Reference, which creates CompilationResult parameter of compilationResult, char[][] parameter of tokens, long[] parameter of positions Assist Module Declaration, which flushes Assist State, which flushes Element Stack, which constructs int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Assist Type Reference For Generic Type, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Headers, which goes For Compilation Unit, which goes For Block Statements Or Catch Header, which identifiers int parameter of subsetLength Sub Set, which indexes Of Assist Identifier, which indexes boolean parameter of useGenericsStack Of Assist Identifier, which initializes, which initializes boolean parameter of parsingCompilationUnit, which initializes Scanner, which is Indirectly Inside Field Initialization, which is Indirectly Inside Enum Constantnitialization, which is Indirectly Inside Method, which is Indirectly Inside Lambda Expression, which is Indirectly Inside Lambda Block, which is Indirectly Inside Type, which is Inside Attribute Value, which is Inside Field Initialization, which is Inside Enum Constantnitialization, which is Inside Module Info, which is Inside Method, which is Inside Type, which lasts int parameter of kind Index Of Element, which parses AbstractMethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit Block Statements, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit Block Statements, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit Block Statements, which pops int parameter of kind Element, which pops int parameter of kind Until Element, which prepares For Block Statements, which prepares For Headers, which requires Extended Recovery, which pushes int parameter of kind On Element Stack, which pushes int parameter of kind, int parameter of info On Element Stack, which pushes int parameter of kind, int parameter of info, Object parameter of objectInfo On Element Stack, which recoveries Exit From Variable, which recoveries Token Check, which resets, which commits, which adds int parameter of newSnapShotPosition New Snap Shot, which pops Snap Shot, which assists Node Needs Stacking, which shoulds Stack Assist Node, which gets Next Token, which creates Snap Shot Parser, which falls Statement parameter of unused Back To Spring Forward, which resumes After Recovery, which safes To Resume, which nos ResumeState parameter of previous Progress Since, which is Inside Array Initializer, which sets char[] parameter of assistIdent Assist Identifier, which tops int parameter of owner Known Element Info, which tops int parameter of owner, int parameter of offSet Known Element Info, which tops int parameter of owner Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Kind, which tops int parameter of owner, int parameter of offSet Known Element Object Info, which tops int parameter of owner Known Element Object Info, which wraps ASTNode parameter of ast With Explicit Constructor Call If Needed.
