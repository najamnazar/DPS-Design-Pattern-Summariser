SourceIndexerRequestor acts as a caretaker for memento R, which accepts char[][] parameter of typeName, int parameter of sourceStart, int parameter of sourceEnd Annotation Type Reference, which accepts char[] parameter of simpleTypeName, int parameter of sourcePosition Annotation Type Reference, which accepts char[] parameter of typeName, int parameter of argCount, int parameter of sourcePosition Constructor Reference, which accepts char[] parameter of fieldName, int parameter of sourcePosition Field Reference, which accepts int parameter of declarationStart, int parameter of declarationEnd, int parameter of nameStart, int parameter of nameEnd, char[][] parameter of tokens, boolean parameter of onDemand, int parameter of modifiers Import, which accepts int[] parameter of positions Line Separator Positions, which accepts char[] parameter of methodName, int parameter of argCount, int parameter of sourcePosition Method Reference, which accepts ImportReference parameter of importReference Package, which accepts CategorizedProblem parameter of problem Problem, which accepts char[][] parameter of typeName, int parameter of sourceStart, int parameter of sourceEnd Type Reference, which accepts char[] parameter of simpleTypeName, int parameter of sourcePosition Type Reference, which accepts char[][] parameter of name, int parameter of sourceStart, int parameter of sourceEnd Unknown Reference, which accepts char[] parameter of name, int parameter of sourcePosition Unknown Reference, which adds TypeInfo parameter of typeInfo Default Constructor If Necessary, which encloses Type Names, which enters TypeInfo parameter of typeInfo Annotation Type, which enters TypeInfo parameter of typeInfo Record, which enters TypeInfo parameter of typeInfo Class, which enters Compilation Unit, which enters MethodInfo parameter of methodInfo Constructor, which enters TypeInfo parameter of typeInfo Enum, which enters FieldInfo parameter of fieldInfo Field, which enters int parameter of declarationSourceStart, int parameter of modifiers Initializer, which enters TypeInfo parameter of typeInfo Interface, which enters ModuleInfo parameter of moduleInfo Module, which enters ISourceElementRequestor.PackageExportInfo[] parameter of packInfos Package Visibility Info, which enters MethodInfo parameter of methodInfo Method, which gets TypeDeclaration parameter of typeDecl Declaring Qualification, which enters TypeInfo parameter of typeInfo Type, which exits int parameter of declarationEnd Compilation Unit, which exits int parameter of declarationEnd Constructor, which exits int parameter of initializationStart, int parameter of declarationEnd, int parameter of declarationSourceEnd Field, which exits int parameter of declarationEnd Initializer, which exits int parameter of declarationEnd, Expression parameter of defaultValue Method, which exits int parameter of declarationEnd Type, which gets char[] parameter of typeName Simple Name, which gets int parameter of extraFlags More Extra Flags, which pops Type Name, which pushes char[] parameter of typeName Type Name.
SourceIndexerRequestor acts as a caretaker for memento Map, which accepts char[][] parameter of typeName, int parameter of sourceStart, int parameter of sourceEnd Annotation Type Reference, which accepts char[] parameter of simpleTypeName, int parameter of sourcePosition Annotation Type Reference, which accepts char[] parameter of typeName, int parameter of argCount, int parameter of sourcePosition Constructor Reference, which accepts char[] parameter of fieldName, int parameter of sourcePosition Field Reference, which accepts int parameter of declarationStart, int parameter of declarationEnd, int parameter of nameStart, int parameter of nameEnd, char[][] parameter of tokens, boolean parameter of onDemand, int parameter of modifiers Import, which accepts int[] parameter of positions Line Separator Positions, which accepts char[] parameter of methodName, int parameter of argCount, int parameter of sourcePosition Method Reference, which accepts ImportReference parameter of importReference Package, which accepts CategorizedProblem parameter of problem Problem, which accepts char[][] parameter of typeName, int parameter of sourceStart, int parameter of sourceEnd Type Reference, which accepts char[] parameter of simpleTypeName, int parameter of sourcePosition Type Reference, which accepts char[][] parameter of name, int parameter of sourceStart, int parameter of sourceEnd Unknown Reference, which accepts char[] parameter of name, int parameter of sourcePosition Unknown Reference, which adds TypeInfo parameter of typeInfo Default Constructor If Necessary, which encloses Type Names, which enters TypeInfo parameter of typeInfo Annotation Type, which enters TypeInfo parameter of typeInfo Record, which enters TypeInfo parameter of typeInfo Class, which enters Compilation Unit, which enters MethodInfo parameter of methodInfo Constructor, which enters TypeInfo parameter of typeInfo Enum, which enters FieldInfo parameter of fieldInfo Field, which enters int parameter of declarationSourceStart, int parameter of modifiers Initializer, which enters TypeInfo parameter of typeInfo Interface, which enters ModuleInfo parameter of moduleInfo Module, which enters ISourceElementRequestor.PackageExportInfo[] parameter of packInfos Package Visibility Info, which enters MethodInfo parameter of methodInfo Method, which gets TypeDeclaration parameter of typeDecl Declaring Qualification, which enters TypeInfo parameter of typeInfo Type, which exits int parameter of declarationEnd Compilation Unit, which exits int parameter of declarationEnd Constructor, which exits int parameter of initializationStart, int parameter of declarationEnd, int parameter of declarationSourceEnd Field, which exits int parameter of declarationEnd Initializer, which exits int parameter of declarationEnd, Expression parameter of defaultValue Method, which exits int parameter of declarationEnd Type, which gets char[] parameter of typeName Simple Name, which gets int parameter of extraFlags More Extra Flags, which pops Type Name, which pushes char[] parameter of typeName Type Name.
SourceIndexerRequestor acts as a caretaker for memento E, which accepts char[][] parameter of typeName, int parameter of sourceStart, int parameter of sourceEnd Annotation Type Reference, which accepts char[] parameter of simpleTypeName, int parameter of sourcePosition Annotation Type Reference, which accepts char[] parameter of typeName, int parameter of argCount, int parameter of sourcePosition Constructor Reference, which accepts char[] parameter of fieldName, int parameter of sourcePosition Field Reference, which accepts int parameter of declarationStart, int parameter of declarationEnd, int parameter of nameStart, int parameter of nameEnd, char[][] parameter of tokens, boolean parameter of onDemand, int parameter of modifiers Import, which accepts int[] parameter of positions Line Separator Positions, which accepts char[] parameter of methodName, int parameter of argCount, int parameter of sourcePosition Method Reference, which accepts ImportReference parameter of importReference Package, which accepts CategorizedProblem parameter of problem Problem, which accepts char[][] parameter of typeName, int parameter of sourceStart, int parameter of sourceEnd Type Reference, which accepts char[] parameter of simpleTypeName, int parameter of sourcePosition Type Reference, which accepts char[][] parameter of name, int parameter of sourceStart, int parameter of sourceEnd Unknown Reference, which accepts char[] parameter of name, int parameter of sourcePosition Unknown Reference, which adds TypeInfo parameter of typeInfo Default Constructor If Necessary, which encloses Type Names, which enters TypeInfo parameter of typeInfo Annotation Type, which enters TypeInfo parameter of typeInfo Record, which enters TypeInfo parameter of typeInfo Class, which enters Compilation Unit, which enters MethodInfo parameter of methodInfo Constructor, which enters TypeInfo parameter of typeInfo Enum, which enters FieldInfo parameter of fieldInfo Field, which enters int parameter of declarationSourceStart, int parameter of modifiers Initializer, which enters TypeInfo parameter of typeInfo Interface, which enters ModuleInfo parameter of moduleInfo Module, which enters ISourceElementRequestor.PackageExportInfo[] parameter of packInfos Package Visibility Info, which enters MethodInfo parameter of methodInfo Method, which gets TypeDeclaration parameter of typeDecl Declaring Qualification, which enters TypeInfo parameter of typeInfo Type, which exits int parameter of declarationEnd Compilation Unit, which exits int parameter of declarationEnd Constructor, which exits int parameter of initializationStart, int parameter of declarationEnd, int parameter of declarationSourceEnd Field, which exits int parameter of declarationEnd Initializer, which exits int parameter of declarationEnd, Expression parameter of defaultValue Method, which exits int parameter of declarationEnd Type, which gets char[] parameter of typeName Simple Name, which gets int parameter of extraFlags More Extra Flags, which pops Type Name, which pushes char[] parameter of typeName Type Name.
SourceIndexerRequestor acts as a caretaker for memento S, which accepts char[][] parameter of typeName, int parameter of sourceStart, int parameter of sourceEnd Annotation Type Reference, which accepts char[] parameter of simpleTypeName, int parameter of sourcePosition Annotation Type Reference, which accepts char[] parameter of typeName, int parameter of argCount, int parameter of sourcePosition Constructor Reference, which accepts char[] parameter of fieldName, int parameter of sourcePosition Field Reference, which accepts int parameter of declarationStart, int parameter of declarationEnd, int parameter of nameStart, int parameter of nameEnd, char[][] parameter of tokens, boolean parameter of onDemand, int parameter of modifiers Import, which accepts int[] parameter of positions Line Separator Positions, which accepts char[] parameter of methodName, int parameter of argCount, int parameter of sourcePosition Method Reference, which accepts ImportReference parameter of importReference Package, which accepts CategorizedProblem parameter of problem Problem, which accepts char[][] parameter of typeName, int parameter of sourceStart, int parameter of sourceEnd Type Reference, which accepts char[] parameter of simpleTypeName, int parameter of sourcePosition Type Reference, which accepts char[][] parameter of name, int parameter of sourceStart, int parameter of sourceEnd Unknown Reference, which accepts char[] parameter of name, int parameter of sourcePosition Unknown Reference, which adds TypeInfo parameter of typeInfo Default Constructor If Necessary, which encloses Type Names, which enters TypeInfo parameter of typeInfo Annotation Type, which enters TypeInfo parameter of typeInfo Record, which enters TypeInfo parameter of typeInfo Class, which enters Compilation Unit, which enters MethodInfo parameter of methodInfo Constructor, which enters TypeInfo parameter of typeInfo Enum, which enters FieldInfo parameter of fieldInfo Field, which enters int parameter of declarationSourceStart, int parameter of modifiers Initializer, which enters TypeInfo parameter of typeInfo Interface, which enters ModuleInfo parameter of moduleInfo Module, which enters ISourceElementRequestor.PackageExportInfo[] parameter of packInfos Package Visibility Info, which enters MethodInfo parameter of methodInfo Method, which gets TypeDeclaration parameter of typeDecl Declaring Qualification, which enters TypeInfo parameter of typeInfo Type, which exits int parameter of declarationEnd Compilation Unit, which exits int parameter of declarationEnd Constructor, which exits int parameter of initializationStart, int parameter of declarationEnd, int parameter of declarationSourceEnd Field, which exits int parameter of declarationEnd Initializer, which exits int parameter of declarationEnd, Expression parameter of defaultValue Method, which exits int parameter of declarationEnd Type, which gets char[] parameter of typeName Simple Name, which gets int parameter of extraFlags More Extra Flags, which pops Type Name, which pushes char[] parameter of typeName Type Name.
