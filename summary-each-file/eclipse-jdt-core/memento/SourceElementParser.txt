SourceElementParser acts as a caretaker for memento R, which is inherited by, which records CategorizedProblem parameter of problem, CompilationResult parameter of unitResult, ReferenceContext parameter of context, boolean parameter of mandatoryError, which accepts Expression parameter of expression Javadoc Type Reference, which adds NameReference parameter of nameRef Unknown Ref, which checks Comment, which classes boolean parameter of alwaysQualified Instance Creation, which consumes Annotation As Modifier, which consumes Class Instance Creation Expression Qualified With Type Arguments, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Catch Formal Parameter, which consumes Class Header Name1, which consumes Module Header, which consumes Class Instance Creation Expression With Type Arguments, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes boolean parameter of isSuperAccess Field Access, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes boolean parameter of parenthesized Type Elided Lambda Parameter, which consumes Interface Header Name1, which consumes Member Value Pair, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Provides Statement, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes Single Static Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Type Import On Demand Declaration Name, which consumes Uses Statement, which consumes With Clause, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which ends int parameter of act Parse, which constructs int parameter of dim Type Reference, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which gets Unspecified Reference Optimized, which news char[][] parameter of tokens, long[] parameter of positions, boolean parameter of onDemand, int parameter of mod Import Reference, which news char[][] parameter of tokens, long[] parameter of positions, int parameter of sourceStart, int parameter of sourceEnd Qualified Name Reference, which news char[] parameter of source, long parameter of positions Single Name Reference, which parses ICompilationUnit parameter of unit, boolean parameter of fullParse, IProgressMonitor parameter of pm Compilation Unit, which remembers Categories, which resets, which sets ISourceElementRequestor parameter of requestor Requestor.
SourceElementParser acts as a caretaker for memento Map, which is inherited by, which records CategorizedProblem parameter of problem, CompilationResult parameter of unitResult, ReferenceContext parameter of context, boolean parameter of mandatoryError, which accepts Expression parameter of expression Javadoc Type Reference, which adds NameReference parameter of nameRef Unknown Ref, which checks Comment, which classes boolean parameter of alwaysQualified Instance Creation, which consumes Annotation As Modifier, which consumes Class Instance Creation Expression Qualified With Type Arguments, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Catch Formal Parameter, which consumes Class Header Name1, which consumes Module Header, which consumes Class Instance Creation Expression With Type Arguments, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes boolean parameter of isSuperAccess Field Access, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes boolean parameter of parenthesized Type Elided Lambda Parameter, which consumes Interface Header Name1, which consumes Member Value Pair, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Provides Statement, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes Single Static Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Type Import On Demand Declaration Name, which consumes Uses Statement, which consumes With Clause, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which ends int parameter of act Parse, which constructs int parameter of dim Type Reference, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which gets Unspecified Reference Optimized, which news char[][] parameter of tokens, long[] parameter of positions, boolean parameter of onDemand, int parameter of mod Import Reference, which news char[][] parameter of tokens, long[] parameter of positions, int parameter of sourceStart, int parameter of sourceEnd Qualified Name Reference, which news char[] parameter of source, long parameter of positions Single Name Reference, which parses ICompilationUnit parameter of unit, boolean parameter of fullParse, IProgressMonitor parameter of pm Compilation Unit, which remembers Categories, which resets, which sets ISourceElementRequestor parameter of requestor Requestor.
SourceElementParser acts as a caretaker for memento E, which is inherited by, which records CategorizedProblem parameter of problem, CompilationResult parameter of unitResult, ReferenceContext parameter of context, boolean parameter of mandatoryError, which accepts Expression parameter of expression Javadoc Type Reference, which adds NameReference parameter of nameRef Unknown Ref, which checks Comment, which classes boolean parameter of alwaysQualified Instance Creation, which consumes Annotation As Modifier, which consumes Class Instance Creation Expression Qualified With Type Arguments, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Catch Formal Parameter, which consumes Class Header Name1, which consumes Module Header, which consumes Class Instance Creation Expression With Type Arguments, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes boolean parameter of isSuperAccess Field Access, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes boolean parameter of parenthesized Type Elided Lambda Parameter, which consumes Interface Header Name1, which consumes Member Value Pair, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Provides Statement, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes Single Static Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Type Import On Demand Declaration Name, which consumes Uses Statement, which consumes With Clause, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which ends int parameter of act Parse, which constructs int parameter of dim Type Reference, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which gets Unspecified Reference Optimized, which news char[][] parameter of tokens, long[] parameter of positions, boolean parameter of onDemand, int parameter of mod Import Reference, which news char[][] parameter of tokens, long[] parameter of positions, int parameter of sourceStart, int parameter of sourceEnd Qualified Name Reference, which news char[] parameter of source, long parameter of positions Single Name Reference, which parses ICompilationUnit parameter of unit, boolean parameter of fullParse, IProgressMonitor parameter of pm Compilation Unit, which remembers Categories, which resets, which sets ISourceElementRequestor parameter of requestor Requestor.
SourceElementParser acts as a caretaker for memento S, which is inherited by, which records CategorizedProblem parameter of problem, CompilationResult parameter of unitResult, ReferenceContext parameter of context, boolean parameter of mandatoryError, which accepts Expression parameter of expression Javadoc Type Reference, which adds NameReference parameter of nameRef Unknown Ref, which checks Comment, which classes boolean parameter of alwaysQualified Instance Creation, which consumes Annotation As Modifier, which consumes Class Instance Creation Expression Qualified With Type Arguments, which consumes Annotation Type Declaration Header Name, which consumes Annotation Type Declaration Header Name With Type Parameters, which consumes Catch Formal Parameter, which consumes Class Header Name1, which consumes Module Header, which consumes Class Instance Creation Expression With Type Arguments, which consumes boolean parameter of isCompact Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Enum Constant With Class Body, which consumes Enum Constant No Class Body, which consumes Enum Header Name, which consumes Enum Header Name With Type Parameters, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes boolean parameter of isSuperAccess Field Access, which consumes boolean parameter of isVarArgs Single Variable Declarator, which consumes boolean parameter of parenthesized Type Elided Lambda Parameter, which consumes Interface Header Name1, which consumes Member Value Pair, which consumes boolean parameter of isTypeAnnotation Marker Annotation, which consumes boolean parameter of isAnnotationMethod Method Header Name, which consumes boolean parameter of isAnnotationMethod Method Header Name With Type Parameters, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes boolean parameter of isTypeAnnotation Normal Annotation, which consumes Provides Statement, which consumes boolean parameter of isTypeAnnotation Single Member Annotation, which consumes Single Static Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Static Import On Demand Declaration Name, which consumes Type Import On Demand Declaration Name, which consumes Uses Statement, which consumes With Clause, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which ends int parameter of act Parse, which constructs int parameter of dim Type Reference, which gets boolean parameter of rejectTypeAnnotations Unspecified Reference, which gets Unspecified Reference Optimized, which news char[][] parameter of tokens, long[] parameter of positions, boolean parameter of onDemand, int parameter of mod Import Reference, which news char[][] parameter of tokens, long[] parameter of positions, int parameter of sourceStart, int parameter of sourceEnd Qualified Name Reference, which news char[] parameter of source, long parameter of positions Single Name Reference, which parses ICompilationUnit parameter of unit, boolean parameter of fullParse, IProgressMonitor parameter of pm Compilation Unit, which remembers Categories, which resets, which sets ISourceElementRequestor parameter of requestor Requestor.
