Parser acts as a caretaker for memento C, which is inherited by, which asis int parameter of state, which base_checks int parameter of i, which builds String parameter of filename, List parameter of listToDump File, which builds String parameter of filename, String parameter of contents File For Name, which builds String parameter of file, char[] parameter of newLhs, char[] parameter of newNonTerminalIndex, String[] parameter of newName, String[] parameter of tokens File For Readable Name, which builds String parameter of file, int parameter of length, String[] parameter of tokens File For Compliance, which builds String parameter of filename, byte[] parameter of bytes File For Table, which builds String parameter of filename, char[] parameter of chars File For Table, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Byte For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Int For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Short For, which builds String parameter of dataFilename, String parameter of dataFilename2 Files From LPG, which in_symbols int parameter of state, which inits Tables, which nasis int parameter of state, which nts int parameter of state, int parameter of sym Action, which original_states int parameter of state, which reads String parameter of filename Byte Table, which reads String parameter of filename Name Table, which reads String parameter of filename Readable Name Table, which reads String parameter of filename Table, which reads String parameter of filename Long Table, which ts int parameter of state, int parameter of sym Action, which adjusts Interface Modifiers, which arrays int parameter of length Initializer, which blocks Real, which builds Initial Recovery State, which checks int parameter of flag And Set Modifiers, which checks Comment, which checks Non Externalized String Literal, which checks int parameter of declarationEnd Non NLSAfter Body End, which classes boolean parameter of alwaysQualified Instance Creation, which concats Expression Lists, which concats Generics Lists, which concats Node Lists, which consumes Additional Bound, which consumes Additional Bound1, which consumes Additional Bound List, which consumes Additional Bound List1, which consumes Allocation Header, which consumes Annotation As Modifier, which consumes Annotation Type Declaration, which consumes Annotation Type Declaration Header, which consumes Annotation Type Member Declaration Header, which consumes Annotation Type Member Header Extended Dims, which consumes Annotation Type Member Declaration, which consumes Annotation Type Member Declarations, which consumes Argument List, which consumes Arguments, which consumes boolean parameter of unspecifiedReference Array Access, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Array Initializer, which consumes Array Type With Type Arguments Name, which consumes Assert Statement, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes Block, which consumes Block Statements, which consumes Case Label, which consumes Cast Expression LL1, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression With Primitive Type, which computes TypeReference parameter of rightSide, int parameter of dim Qualified Generics From Right Side, which consumes Cast Expression With Qualified Generics Array, which consumes Catches, which consumes Catch Header, which consumes Class Body Declaration, which consumes Class Body Declarations, which consumes Class Body Declarationsopt, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Header Name1, which consumes Type Header Name With Type Parameters, which consumes Class Instance Creation Expression, which consumes Class Instance Creation Expression Name, which consumes Class Instance Creation Expression Qualified, which consumes Class Instance Creation Expression Qualified With Type Arguments, which consumes Class Instance Creation Expression With Type Arguments, which consumes Class Or Interface, which consumes Class Or Interface Name, which consumes Class Type Elt, which consumes Class Type List, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Block Statements, which consumes Constructor Body, which consumes Constructor Declaration, which consumes Constructor Header, which consumes Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Default Modifiers, which consumes Diet, which consumes Dims, which consumes Dim With Or With Out Expr, which consumes Dim With Or With Out Exprs, which consumes Empty Annotation Type Member Declarationsopt, which consumes Empty Argument Listopt, which consumes Empty Arguments, which consumes Empty Array Initializer, which consumes Empty Array Initializeropt, which consumes Empty Block Statementsopt, which consumes Empty Catchesopt, which consumes Empty Class Body Declarationsopt, which consumes Empty Class Member Declaration, which consumes Empty Default Value, which consumes Empty Dimsopt, which consumes Empty Enum Declarations, which consumes Empty Expression, which consumes Empty For Initopt, which consumes Empty For Updateopt, which consumes Empty Interface Member Declaration, which consumes Empty Interface Member Declarationsopt, which consumes Empty Internal Compilation Unit, which consumes Empty Member Value Pairsopt, which consumes Empty Member Value Array Initializer, which consumes Empty Statement, which consumes Empty Switch Block, which consumes Empty Type Declaration, which consumes boolean parameter of hasModifiers Enhanced For Statement Header, which consumes Enhanced For Statement, which consumes Enter Anonymous Class Body, which consumes Enter Anonymous Class Body Simple Name, which consumes Enter Compilation Unit, which consumes Enter Variable, which consumes Enum Body No Constants, which consumes Enum Body With Constants, which consumes Enum Constant Header, which consumes Enum Constant No Class Body, which consumes Enum Constants, which consumes Enum Constant With Class Body, which consumes Enum Declaration, which consumes Enum Declarations, which consumes Enum Header, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Try Block, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation With Type Arguments, which consumes Expression Statement, which consumes boolean parameter of isSuperAccess Field Access, which consumes Field Declaration, which consumes Force No Diet, which consumes For Init, which consumes boolean parameter of isVarArgs Formal Parameter, which consumes Formal Parameter List, which consumes Formal Parameter Listopt, which consumes Generic Type, which consumes Generic Type Array Type, which consumes Generic Type Name Array Type, which consumes Import Declaration, which consumes Import Declarations, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression With Qualified Generics, which consumes int parameter of op Instance Of Expression, which consumes int parameter of op Instance Of Expression With Name, which consumes Interface Declaration, which consumes Interface Header, which consumes Interface Header Extends, which consumes Interface Header Name1, which consumes Interface Member Declarations, which consumes Interface Member Declarationsopt, which consumes Interface Type, which consumes Interface Type List, which consumes Internal Compilation Unit, which consumes Internal Compilation Unit With Types, which consumes Invalid Constructor Declaration, which consumes Left Paren, which consumes Local Variable Declaration, which consumes Local Variable Declaration Statement, which consumes Marker Annotation, which consumes Member Value Array Initializer, which consumes Member Value As Name, which consumes Member Value Pair, which consumes Member Value Pairs, which consumes Member Values, which consumes Method Body, which consumes boolean parameter of isNotAbstract Method Declaration, which consumes Method Header, which consumes Method Header Extended Dims, which consumes Method Header Name, which consumes Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Throws Clause, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Modifiers, which consumes Modifiers2, which consumes Name Array Type, which consumes Nested Method, which consumes Nested Type, which consumes Normal Annotation, which consumes One Dim Loop, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Block, which consumes Package Declaration, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Postfix Expression, which consumes Primary No New Array, which consumes Primary No New Array Array Type, which consumes Primary No New Array Name, which consumes Primary No New Array Name Super, which consumes Primary No New Array Name This, which consumes Primary No New Array Primitive Array Type, which consumes Primary No New Array Primitive Type, which consumes Primary No New Array This, which consumes Primary No New Array With Name, which consumes Primitive Array Type, which consumes Primitive Type, which consumes Push Left Brace, which consumes Push Real Modifiers, which consumes Push Modifiers, which consumes Push Position, which consumes Qualified Name, which consumes Reduce Imports, which consumes Reference Type, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Restore Diet, which consumes Right Paren, which consumes int parameter of act Rule, which consumes Simple Assert Statement, which consumes Single Member Annotation, which consumes Single Static Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break, which consumes Statement Break With Label, which consumes Statement Catch, which consumes Statement Continue, which consumes Statement Continue With Label, which consumes Statement Do, which consumes Statement Expression List, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Statement Label, which consumes Statement Return, which consumes Statement Switch, which consumes Statement Synchronized, which consumes Statement Throw, which consumes boolean parameter of withFinally Statement Try, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which consumes Switch Block, which consumes Switch Block Statement, which consumes Switch Block Statements, which consumes Switch Labels, which consumes int parameter of type Token, which consumes Type Argument, which consumes Type Argument List, which consumes Type Argument List1, which consumes Type Argument List2, which consumes Type Argument List3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Declarations, which consumes Type Import On Demand Declaration Name, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Type Parameter List, which consumes Type Parameter List1, which consumes Type Parameters, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which consumes Variable Declarators, which consumes Variable Initializers, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard1With Bounds, which consumes Wildcard2, which consumes Wildcard2With Bounds, which consumes Wildcard3, which consumes Wildcard3With Bounds, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds1Super, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds2Super, which consumes Wildcard Bounds3Extends, which consumes Wildcard Bounds3Super, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds Super, which consumes Wildcard With Bounds, which contains int parameter of sourceStart, int parameter of sourceEnd Comment, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which copies TypeReference parameter of typeRef, int parameter of dim Dims, which creates char[] parameter of fieldDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of localDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult Parse, which dispatches int parameter of length Declaration Into, which dispatches int parameter of length Declaration Into Enum Declaration, which ends int parameter of act Parse, which flushes int parameter of position Comments Defined Prior To, which gets First Token, which gets Java Doc Positions, which gets CompilationUnitDeclaration parameter of unit Method Bodies, which gets char[] parameter of comment, int[] parameter of index Next Character, which gets Expression parameter of exp Type Reference, which gets int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets Unspecified Reference, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Block Statements Or Catch Header, which goes For Class Body Declarations, which goes For Compilation Unit, which goes For Expression, which goes For Field Declaration, which goes For Generic Method Declaration, which goes For Headers, which goes For Import Declaration, which goes For Initializer, which goes For Method Body, which goes For Package Declaration, which goes For Type Declaration, which ignores Expression Assignment, which ignores Interface Declaration, which ignores boolean parameter of hasBody Invalid Constructor Declaration, which ignores Method Body, which initializes, which initializes Scanner, which jumps Over Method Body, which marks Enclosing Member With Local Type, which marks TypeDeclaration parameter of type Initializers With Local Type, which moves Recovery Checkpoint, which news Message Send, which news Message Send With Type Arguments, which optimizeds Concat Node Lists, which parses, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, boolean parameter of recordLineSeparator, which parses FieldDeclaration parameter of field, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, char[] parameter of initializationSource, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of start, int parameter of end, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Class Body Declarations, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Expression, which persists Line Separator Positions, which problems Reporter, which pushes Identifier, which pushes int parameter of flag Identifier, which pushes int parameter of pos On Ast Length Stack, which pushes ASTNode parameter of node On Ast Stack, which pushes Expression parameter of expr On Expression Stack, which pushes int parameter of pos On Expression Stack Length Stack, which pushes ASTNode parameter of node On Generics Stack, which pushes int parameter of pos On Generics Identifiers Length Stack, which pushes int parameter of pos On Generics Length Stack, which pushes int parameter of pos On Int Stack, which pushes int parameter of i On Real Block Stack, which recoveries Exit From Variable, which recoveries Token Check, which reports boolean parameter of isDietParse, int parameter of oldFirstToken Syntax Errors, which reports TypeDeclaration[] parameter of types Syntax Errors For Skipped Method, which resets Modifiers, which resets Stacks, which resumes After Recovery, which resumes On Syntax Error, which tos String, which updates Recovery State, which updates int parameter of variableDeclaratorsCounter Source Declaration Parts, which updates Expression parameter of exp Source Position.
Parser acts as a caretaker for memento R, which is inherited by, which asis int parameter of state, which base_checks int parameter of i, which builds String parameter of filename, List parameter of listToDump File, which builds String parameter of filename, String parameter of contents File For Name, which builds String parameter of file, char[] parameter of newLhs, char[] parameter of newNonTerminalIndex, String[] parameter of newName, String[] parameter of tokens File For Readable Name, which builds String parameter of file, int parameter of length, String[] parameter of tokens File For Compliance, which builds String parameter of filename, byte[] parameter of bytes File For Table, which builds String parameter of filename, char[] parameter of chars File For Table, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Byte For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Int For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Short For, which builds String parameter of dataFilename, String parameter of dataFilename2 Files From LPG, which in_symbols int parameter of state, which inits Tables, which nasis int parameter of state, which nts int parameter of state, int parameter of sym Action, which original_states int parameter of state, which reads String parameter of filename Byte Table, which reads String parameter of filename Name Table, which reads String parameter of filename Readable Name Table, which reads String parameter of filename Table, which reads String parameter of filename Long Table, which ts int parameter of state, int parameter of sym Action, which adjusts Interface Modifiers, which arrays int parameter of length Initializer, which blocks Real, which builds Initial Recovery State, which checks int parameter of flag And Set Modifiers, which checks Comment, which checks Non Externalized String Literal, which checks int parameter of declarationEnd Non NLSAfter Body End, which classes boolean parameter of alwaysQualified Instance Creation, which concats Expression Lists, which concats Generics Lists, which concats Node Lists, which consumes Additional Bound, which consumes Additional Bound1, which consumes Additional Bound List, which consumes Additional Bound List1, which consumes Allocation Header, which consumes Annotation As Modifier, which consumes Annotation Type Declaration, which consumes Annotation Type Declaration Header, which consumes Annotation Type Member Declaration Header, which consumes Annotation Type Member Header Extended Dims, which consumes Annotation Type Member Declaration, which consumes Annotation Type Member Declarations, which consumes Argument List, which consumes Arguments, which consumes boolean parameter of unspecifiedReference Array Access, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Array Initializer, which consumes Array Type With Type Arguments Name, which consumes Assert Statement, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes Block, which consumes Block Statements, which consumes Case Label, which consumes Cast Expression LL1, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression With Primitive Type, which computes TypeReference parameter of rightSide, int parameter of dim Qualified Generics From Right Side, which consumes Cast Expression With Qualified Generics Array, which consumes Catches, which consumes Catch Header, which consumes Class Body Declaration, which consumes Class Body Declarations, which consumes Class Body Declarationsopt, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Header Name1, which consumes Type Header Name With Type Parameters, which consumes Class Instance Creation Expression, which consumes Class Instance Creation Expression Name, which consumes Class Instance Creation Expression Qualified, which consumes Class Instance Creation Expression Qualified With Type Arguments, which consumes Class Instance Creation Expression With Type Arguments, which consumes Class Or Interface, which consumes Class Or Interface Name, which consumes Class Type Elt, which consumes Class Type List, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Block Statements, which consumes Constructor Body, which consumes Constructor Declaration, which consumes Constructor Header, which consumes Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Default Modifiers, which consumes Diet, which consumes Dims, which consumes Dim With Or With Out Expr, which consumes Dim With Or With Out Exprs, which consumes Empty Annotation Type Member Declarationsopt, which consumes Empty Argument Listopt, which consumes Empty Arguments, which consumes Empty Array Initializer, which consumes Empty Array Initializeropt, which consumes Empty Block Statementsopt, which consumes Empty Catchesopt, which consumes Empty Class Body Declarationsopt, which consumes Empty Class Member Declaration, which consumes Empty Default Value, which consumes Empty Dimsopt, which consumes Empty Enum Declarations, which consumes Empty Expression, which consumes Empty For Initopt, which consumes Empty For Updateopt, which consumes Empty Interface Member Declaration, which consumes Empty Interface Member Declarationsopt, which consumes Empty Internal Compilation Unit, which consumes Empty Member Value Pairsopt, which consumes Empty Member Value Array Initializer, which consumes Empty Statement, which consumes Empty Switch Block, which consumes Empty Type Declaration, which consumes boolean parameter of hasModifiers Enhanced For Statement Header, which consumes Enhanced For Statement, which consumes Enter Anonymous Class Body, which consumes Enter Anonymous Class Body Simple Name, which consumes Enter Compilation Unit, which consumes Enter Variable, which consumes Enum Body No Constants, which consumes Enum Body With Constants, which consumes Enum Constant Header, which consumes Enum Constant No Class Body, which consumes Enum Constants, which consumes Enum Constant With Class Body, which consumes Enum Declaration, which consumes Enum Declarations, which consumes Enum Header, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Try Block, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation With Type Arguments, which consumes Expression Statement, which consumes boolean parameter of isSuperAccess Field Access, which consumes Field Declaration, which consumes Force No Diet, which consumes For Init, which consumes boolean parameter of isVarArgs Formal Parameter, which consumes Formal Parameter List, which consumes Formal Parameter Listopt, which consumes Generic Type, which consumes Generic Type Array Type, which consumes Generic Type Name Array Type, which consumes Import Declaration, which consumes Import Declarations, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression With Qualified Generics, which consumes int parameter of op Instance Of Expression, which consumes int parameter of op Instance Of Expression With Name, which consumes Interface Declaration, which consumes Interface Header, which consumes Interface Header Extends, which consumes Interface Header Name1, which consumes Interface Member Declarations, which consumes Interface Member Declarationsopt, which consumes Interface Type, which consumes Interface Type List, which consumes Internal Compilation Unit, which consumes Internal Compilation Unit With Types, which consumes Invalid Constructor Declaration, which consumes Left Paren, which consumes Local Variable Declaration, which consumes Local Variable Declaration Statement, which consumes Marker Annotation, which consumes Member Value Array Initializer, which consumes Member Value As Name, which consumes Member Value Pair, which consumes Member Value Pairs, which consumes Member Values, which consumes Method Body, which consumes boolean parameter of isNotAbstract Method Declaration, which consumes Method Header, which consumes Method Header Extended Dims, which consumes Method Header Name, which consumes Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Throws Clause, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Modifiers, which consumes Modifiers2, which consumes Name Array Type, which consumes Nested Method, which consumes Nested Type, which consumes Normal Annotation, which consumes One Dim Loop, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Block, which consumes Package Declaration, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Postfix Expression, which consumes Primary No New Array, which consumes Primary No New Array Array Type, which consumes Primary No New Array Name, which consumes Primary No New Array Name Super, which consumes Primary No New Array Name This, which consumes Primary No New Array Primitive Array Type, which consumes Primary No New Array Primitive Type, which consumes Primary No New Array This, which consumes Primary No New Array With Name, which consumes Primitive Array Type, which consumes Primitive Type, which consumes Push Left Brace, which consumes Push Real Modifiers, which consumes Push Modifiers, which consumes Push Position, which consumes Qualified Name, which consumes Reduce Imports, which consumes Reference Type, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Restore Diet, which consumes Right Paren, which consumes int parameter of act Rule, which consumes Simple Assert Statement, which consumes Single Member Annotation, which consumes Single Static Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break, which consumes Statement Break With Label, which consumes Statement Catch, which consumes Statement Continue, which consumes Statement Continue With Label, which consumes Statement Do, which consumes Statement Expression List, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Statement Label, which consumes Statement Return, which consumes Statement Switch, which consumes Statement Synchronized, which consumes Statement Throw, which consumes boolean parameter of withFinally Statement Try, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which consumes Switch Block, which consumes Switch Block Statement, which consumes Switch Block Statements, which consumes Switch Labels, which consumes int parameter of type Token, which consumes Type Argument, which consumes Type Argument List, which consumes Type Argument List1, which consumes Type Argument List2, which consumes Type Argument List3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Declarations, which consumes Type Import On Demand Declaration Name, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Type Parameter List, which consumes Type Parameter List1, which consumes Type Parameters, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which consumes Variable Declarators, which consumes Variable Initializers, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard1With Bounds, which consumes Wildcard2, which consumes Wildcard2With Bounds, which consumes Wildcard3, which consumes Wildcard3With Bounds, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds1Super, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds2Super, which consumes Wildcard Bounds3Extends, which consumes Wildcard Bounds3Super, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds Super, which consumes Wildcard With Bounds, which contains int parameter of sourceStart, int parameter of sourceEnd Comment, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which copies TypeReference parameter of typeRef, int parameter of dim Dims, which creates char[] parameter of fieldDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of localDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult Parse, which dispatches int parameter of length Declaration Into, which dispatches int parameter of length Declaration Into Enum Declaration, which ends int parameter of act Parse, which flushes int parameter of position Comments Defined Prior To, which gets First Token, which gets Java Doc Positions, which gets CompilationUnitDeclaration parameter of unit Method Bodies, which gets char[] parameter of comment, int[] parameter of index Next Character, which gets Expression parameter of exp Type Reference, which gets int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets Unspecified Reference, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Block Statements Or Catch Header, which goes For Class Body Declarations, which goes For Compilation Unit, which goes For Expression, which goes For Field Declaration, which goes For Generic Method Declaration, which goes For Headers, which goes For Import Declaration, which goes For Initializer, which goes For Method Body, which goes For Package Declaration, which goes For Type Declaration, which ignores Expression Assignment, which ignores Interface Declaration, which ignores boolean parameter of hasBody Invalid Constructor Declaration, which ignores Method Body, which initializes, which initializes Scanner, which jumps Over Method Body, which marks Enclosing Member With Local Type, which marks TypeDeclaration parameter of type Initializers With Local Type, which moves Recovery Checkpoint, which news Message Send, which news Message Send With Type Arguments, which optimizeds Concat Node Lists, which parses, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, boolean parameter of recordLineSeparator, which parses FieldDeclaration parameter of field, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, char[] parameter of initializationSource, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of start, int parameter of end, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Class Body Declarations, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Expression, which persists Line Separator Positions, which problems Reporter, which pushes Identifier, which pushes int parameter of flag Identifier, which pushes int parameter of pos On Ast Length Stack, which pushes ASTNode parameter of node On Ast Stack, which pushes Expression parameter of expr On Expression Stack, which pushes int parameter of pos On Expression Stack Length Stack, which pushes ASTNode parameter of node On Generics Stack, which pushes int parameter of pos On Generics Identifiers Length Stack, which pushes int parameter of pos On Generics Length Stack, which pushes int parameter of pos On Int Stack, which pushes int parameter of i On Real Block Stack, which recoveries Exit From Variable, which recoveries Token Check, which reports boolean parameter of isDietParse, int parameter of oldFirstToken Syntax Errors, which reports TypeDeclaration[] parameter of types Syntax Errors For Skipped Method, which resets Modifiers, which resets Stacks, which resumes After Recovery, which resumes On Syntax Error, which tos String, which updates Recovery State, which updates int parameter of variableDeclaratorsCounter Source Declaration Parts, which updates Expression parameter of exp Source Position.
Parser acts as a caretaker for memento E, which is inherited by, which asis int parameter of state, which base_checks int parameter of i, which builds String parameter of filename, List parameter of listToDump File, which builds String parameter of filename, String parameter of contents File For Name, which builds String parameter of file, char[] parameter of newLhs, char[] parameter of newNonTerminalIndex, String[] parameter of newName, String[] parameter of tokens File For Readable Name, which builds String parameter of file, int parameter of length, String[] parameter of tokens File For Compliance, which builds String parameter of filename, byte[] parameter of bytes File For Table, which builds String parameter of filename, char[] parameter of chars File For Table, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Byte For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Int For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Short For, which builds String parameter of dataFilename, String parameter of dataFilename2 Files From LPG, which in_symbols int parameter of state, which inits Tables, which nasis int parameter of state, which nts int parameter of state, int parameter of sym Action, which original_states int parameter of state, which reads String parameter of filename Byte Table, which reads String parameter of filename Name Table, which reads String parameter of filename Readable Name Table, which reads String parameter of filename Table, which reads String parameter of filename Long Table, which ts int parameter of state, int parameter of sym Action, which adjusts Interface Modifiers, which arrays int parameter of length Initializer, which blocks Real, which builds Initial Recovery State, which checks int parameter of flag And Set Modifiers, which checks Comment, which checks Non Externalized String Literal, which checks int parameter of declarationEnd Non NLSAfter Body End, which classes boolean parameter of alwaysQualified Instance Creation, which concats Expression Lists, which concats Generics Lists, which concats Node Lists, which consumes Additional Bound, which consumes Additional Bound1, which consumes Additional Bound List, which consumes Additional Bound List1, which consumes Allocation Header, which consumes Annotation As Modifier, which consumes Annotation Type Declaration, which consumes Annotation Type Declaration Header, which consumes Annotation Type Member Declaration Header, which consumes Annotation Type Member Header Extended Dims, which consumes Annotation Type Member Declaration, which consumes Annotation Type Member Declarations, which consumes Argument List, which consumes Arguments, which consumes boolean parameter of unspecifiedReference Array Access, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Array Initializer, which consumes Array Type With Type Arguments Name, which consumes Assert Statement, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes Block, which consumes Block Statements, which consumes Case Label, which consumes Cast Expression LL1, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression With Primitive Type, which computes TypeReference parameter of rightSide, int parameter of dim Qualified Generics From Right Side, which consumes Cast Expression With Qualified Generics Array, which consumes Catches, which consumes Catch Header, which consumes Class Body Declaration, which consumes Class Body Declarations, which consumes Class Body Declarationsopt, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Header Name1, which consumes Type Header Name With Type Parameters, which consumes Class Instance Creation Expression, which consumes Class Instance Creation Expression Name, which consumes Class Instance Creation Expression Qualified, which consumes Class Instance Creation Expression Qualified With Type Arguments, which consumes Class Instance Creation Expression With Type Arguments, which consumes Class Or Interface, which consumes Class Or Interface Name, which consumes Class Type Elt, which consumes Class Type List, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Block Statements, which consumes Constructor Body, which consumes Constructor Declaration, which consumes Constructor Header, which consumes Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Default Modifiers, which consumes Diet, which consumes Dims, which consumes Dim With Or With Out Expr, which consumes Dim With Or With Out Exprs, which consumes Empty Annotation Type Member Declarationsopt, which consumes Empty Argument Listopt, which consumes Empty Arguments, which consumes Empty Array Initializer, which consumes Empty Array Initializeropt, which consumes Empty Block Statementsopt, which consumes Empty Catchesopt, which consumes Empty Class Body Declarationsopt, which consumes Empty Class Member Declaration, which consumes Empty Default Value, which consumes Empty Dimsopt, which consumes Empty Enum Declarations, which consumes Empty Expression, which consumes Empty For Initopt, which consumes Empty For Updateopt, which consumes Empty Interface Member Declaration, which consumes Empty Interface Member Declarationsopt, which consumes Empty Internal Compilation Unit, which consumes Empty Member Value Pairsopt, which consumes Empty Member Value Array Initializer, which consumes Empty Statement, which consumes Empty Switch Block, which consumes Empty Type Declaration, which consumes boolean parameter of hasModifiers Enhanced For Statement Header, which consumes Enhanced For Statement, which consumes Enter Anonymous Class Body, which consumes Enter Anonymous Class Body Simple Name, which consumes Enter Compilation Unit, which consumes Enter Variable, which consumes Enum Body No Constants, which consumes Enum Body With Constants, which consumes Enum Constant Header, which consumes Enum Constant No Class Body, which consumes Enum Constants, which consumes Enum Constant With Class Body, which consumes Enum Declaration, which consumes Enum Declarations, which consumes Enum Header, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Try Block, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation With Type Arguments, which consumes Expression Statement, which consumes boolean parameter of isSuperAccess Field Access, which consumes Field Declaration, which consumes Force No Diet, which consumes For Init, which consumes boolean parameter of isVarArgs Formal Parameter, which consumes Formal Parameter List, which consumes Formal Parameter Listopt, which consumes Generic Type, which consumes Generic Type Array Type, which consumes Generic Type Name Array Type, which consumes Import Declaration, which consumes Import Declarations, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression With Qualified Generics, which consumes int parameter of op Instance Of Expression, which consumes int parameter of op Instance Of Expression With Name, which consumes Interface Declaration, which consumes Interface Header, which consumes Interface Header Extends, which consumes Interface Header Name1, which consumes Interface Member Declarations, which consumes Interface Member Declarationsopt, which consumes Interface Type, which consumes Interface Type List, which consumes Internal Compilation Unit, which consumes Internal Compilation Unit With Types, which consumes Invalid Constructor Declaration, which consumes Left Paren, which consumes Local Variable Declaration, which consumes Local Variable Declaration Statement, which consumes Marker Annotation, which consumes Member Value Array Initializer, which consumes Member Value As Name, which consumes Member Value Pair, which consumes Member Value Pairs, which consumes Member Values, which consumes Method Body, which consumes boolean parameter of isNotAbstract Method Declaration, which consumes Method Header, which consumes Method Header Extended Dims, which consumes Method Header Name, which consumes Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Throws Clause, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Modifiers, which consumes Modifiers2, which consumes Name Array Type, which consumes Nested Method, which consumes Nested Type, which consumes Normal Annotation, which consumes One Dim Loop, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Block, which consumes Package Declaration, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Postfix Expression, which consumes Primary No New Array, which consumes Primary No New Array Array Type, which consumes Primary No New Array Name, which consumes Primary No New Array Name Super, which consumes Primary No New Array Name This, which consumes Primary No New Array Primitive Array Type, which consumes Primary No New Array Primitive Type, which consumes Primary No New Array This, which consumes Primary No New Array With Name, which consumes Primitive Array Type, which consumes Primitive Type, which consumes Push Left Brace, which consumes Push Real Modifiers, which consumes Push Modifiers, which consumes Push Position, which consumes Qualified Name, which consumes Reduce Imports, which consumes Reference Type, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Restore Diet, which consumes Right Paren, which consumes int parameter of act Rule, which consumes Simple Assert Statement, which consumes Single Member Annotation, which consumes Single Static Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break, which consumes Statement Break With Label, which consumes Statement Catch, which consumes Statement Continue, which consumes Statement Continue With Label, which consumes Statement Do, which consumes Statement Expression List, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Statement Label, which consumes Statement Return, which consumes Statement Switch, which consumes Statement Synchronized, which consumes Statement Throw, which consumes boolean parameter of withFinally Statement Try, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which consumes Switch Block, which consumes Switch Block Statement, which consumes Switch Block Statements, which consumes Switch Labels, which consumes int parameter of type Token, which consumes Type Argument, which consumes Type Argument List, which consumes Type Argument List1, which consumes Type Argument List2, which consumes Type Argument List3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Declarations, which consumes Type Import On Demand Declaration Name, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Type Parameter List, which consumes Type Parameter List1, which consumes Type Parameters, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which consumes Variable Declarators, which consumes Variable Initializers, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard1With Bounds, which consumes Wildcard2, which consumes Wildcard2With Bounds, which consumes Wildcard3, which consumes Wildcard3With Bounds, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds1Super, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds2Super, which consumes Wildcard Bounds3Extends, which consumes Wildcard Bounds3Super, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds Super, which consumes Wildcard With Bounds, which contains int parameter of sourceStart, int parameter of sourceEnd Comment, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which copies TypeReference parameter of typeRef, int parameter of dim Dims, which creates char[] parameter of fieldDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of localDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult Parse, which dispatches int parameter of length Declaration Into, which dispatches int parameter of length Declaration Into Enum Declaration, which ends int parameter of act Parse, which flushes int parameter of position Comments Defined Prior To, which gets First Token, which gets Java Doc Positions, which gets CompilationUnitDeclaration parameter of unit Method Bodies, which gets char[] parameter of comment, int[] parameter of index Next Character, which gets Expression parameter of exp Type Reference, which gets int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets Unspecified Reference, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Block Statements Or Catch Header, which goes For Class Body Declarations, which goes For Compilation Unit, which goes For Expression, which goes For Field Declaration, which goes For Generic Method Declaration, which goes For Headers, which goes For Import Declaration, which goes For Initializer, which goes For Method Body, which goes For Package Declaration, which goes For Type Declaration, which ignores Expression Assignment, which ignores Interface Declaration, which ignores boolean parameter of hasBody Invalid Constructor Declaration, which ignores Method Body, which initializes, which initializes Scanner, which jumps Over Method Body, which marks Enclosing Member With Local Type, which marks TypeDeclaration parameter of type Initializers With Local Type, which moves Recovery Checkpoint, which news Message Send, which news Message Send With Type Arguments, which optimizeds Concat Node Lists, which parses, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, boolean parameter of recordLineSeparator, which parses FieldDeclaration parameter of field, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, char[] parameter of initializationSource, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of start, int parameter of end, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Class Body Declarations, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Expression, which persists Line Separator Positions, which problems Reporter, which pushes Identifier, which pushes int parameter of flag Identifier, which pushes int parameter of pos On Ast Length Stack, which pushes ASTNode parameter of node On Ast Stack, which pushes Expression parameter of expr On Expression Stack, which pushes int parameter of pos On Expression Stack Length Stack, which pushes ASTNode parameter of node On Generics Stack, which pushes int parameter of pos On Generics Identifiers Length Stack, which pushes int parameter of pos On Generics Length Stack, which pushes int parameter of pos On Int Stack, which pushes int parameter of i On Real Block Stack, which recoveries Exit From Variable, which recoveries Token Check, which reports boolean parameter of isDietParse, int parameter of oldFirstToken Syntax Errors, which reports TypeDeclaration[] parameter of types Syntax Errors For Skipped Method, which resets Modifiers, which resets Stacks, which resumes After Recovery, which resumes On Syntax Error, which tos String, which updates Recovery State, which updates int parameter of variableDeclaratorsCounter Source Declaration Parts, which updates Expression parameter of exp Source Position.
Parser acts as a caretaker for memento String, which is inherited by, which asis int parameter of state, which base_checks int parameter of i, which builds String parameter of filename, List parameter of listToDump File, which builds String parameter of filename, String parameter of contents File For Name, which builds String parameter of file, char[] parameter of newLhs, char[] parameter of newNonTerminalIndex, String[] parameter of newName, String[] parameter of tokens File For Readable Name, which builds String parameter of file, int parameter of length, String[] parameter of tokens File For Compliance, which builds String parameter of filename, byte[] parameter of bytes File For Table, which builds String parameter of filename, char[] parameter of chars File For Table, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Byte For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Int For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Short For, which builds String parameter of dataFilename, String parameter of dataFilename2 Files From LPG, which in_symbols int parameter of state, which inits Tables, which nasis int parameter of state, which nts int parameter of state, int parameter of sym Action, which original_states int parameter of state, which reads String parameter of filename Byte Table, which reads String parameter of filename Name Table, which reads String parameter of filename Readable Name Table, which reads String parameter of filename Table, which reads String parameter of filename Long Table, which ts int parameter of state, int parameter of sym Action, which adjusts Interface Modifiers, which arrays int parameter of length Initializer, which blocks Real, which builds Initial Recovery State, which checks int parameter of flag And Set Modifiers, which checks Comment, which checks Non Externalized String Literal, which checks int parameter of declarationEnd Non NLSAfter Body End, which classes boolean parameter of alwaysQualified Instance Creation, which concats Expression Lists, which concats Generics Lists, which concats Node Lists, which consumes Additional Bound, which consumes Additional Bound1, which consumes Additional Bound List, which consumes Additional Bound List1, which consumes Allocation Header, which consumes Annotation As Modifier, which consumes Annotation Type Declaration, which consumes Annotation Type Declaration Header, which consumes Annotation Type Member Declaration Header, which consumes Annotation Type Member Header Extended Dims, which consumes Annotation Type Member Declaration, which consumes Annotation Type Member Declarations, which consumes Argument List, which consumes Arguments, which consumes boolean parameter of unspecifiedReference Array Access, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Array Initializer, which consumes Array Type With Type Arguments Name, which consumes Assert Statement, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes Block, which consumes Block Statements, which consumes Case Label, which consumes Cast Expression LL1, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression With Primitive Type, which computes TypeReference parameter of rightSide, int parameter of dim Qualified Generics From Right Side, which consumes Cast Expression With Qualified Generics Array, which consumes Catches, which consumes Catch Header, which consumes Class Body Declaration, which consumes Class Body Declarations, which consumes Class Body Declarationsopt, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Header Name1, which consumes Type Header Name With Type Parameters, which consumes Class Instance Creation Expression, which consumes Class Instance Creation Expression Name, which consumes Class Instance Creation Expression Qualified, which consumes Class Instance Creation Expression Qualified With Type Arguments, which consumes Class Instance Creation Expression With Type Arguments, which consumes Class Or Interface, which consumes Class Or Interface Name, which consumes Class Type Elt, which consumes Class Type List, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Block Statements, which consumes Constructor Body, which consumes Constructor Declaration, which consumes Constructor Header, which consumes Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Default Modifiers, which consumes Diet, which consumes Dims, which consumes Dim With Or With Out Expr, which consumes Dim With Or With Out Exprs, which consumes Empty Annotation Type Member Declarationsopt, which consumes Empty Argument Listopt, which consumes Empty Arguments, which consumes Empty Array Initializer, which consumes Empty Array Initializeropt, which consumes Empty Block Statementsopt, which consumes Empty Catchesopt, which consumes Empty Class Body Declarationsopt, which consumes Empty Class Member Declaration, which consumes Empty Default Value, which consumes Empty Dimsopt, which consumes Empty Enum Declarations, which consumes Empty Expression, which consumes Empty For Initopt, which consumes Empty For Updateopt, which consumes Empty Interface Member Declaration, which consumes Empty Interface Member Declarationsopt, which consumes Empty Internal Compilation Unit, which consumes Empty Member Value Pairsopt, which consumes Empty Member Value Array Initializer, which consumes Empty Statement, which consumes Empty Switch Block, which consumes Empty Type Declaration, which consumes boolean parameter of hasModifiers Enhanced For Statement Header, which consumes Enhanced For Statement, which consumes Enter Anonymous Class Body, which consumes Enter Anonymous Class Body Simple Name, which consumes Enter Compilation Unit, which consumes Enter Variable, which consumes Enum Body No Constants, which consumes Enum Body With Constants, which consumes Enum Constant Header, which consumes Enum Constant No Class Body, which consumes Enum Constants, which consumes Enum Constant With Class Body, which consumes Enum Declaration, which consumes Enum Declarations, which consumes Enum Header, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Try Block, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation With Type Arguments, which consumes Expression Statement, which consumes boolean parameter of isSuperAccess Field Access, which consumes Field Declaration, which consumes Force No Diet, which consumes For Init, which consumes boolean parameter of isVarArgs Formal Parameter, which consumes Formal Parameter List, which consumes Formal Parameter Listopt, which consumes Generic Type, which consumes Generic Type Array Type, which consumes Generic Type Name Array Type, which consumes Import Declaration, which consumes Import Declarations, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression With Qualified Generics, which consumes int parameter of op Instance Of Expression, which consumes int parameter of op Instance Of Expression With Name, which consumes Interface Declaration, which consumes Interface Header, which consumes Interface Header Extends, which consumes Interface Header Name1, which consumes Interface Member Declarations, which consumes Interface Member Declarationsopt, which consumes Interface Type, which consumes Interface Type List, which consumes Internal Compilation Unit, which consumes Internal Compilation Unit With Types, which consumes Invalid Constructor Declaration, which consumes Left Paren, which consumes Local Variable Declaration, which consumes Local Variable Declaration Statement, which consumes Marker Annotation, which consumes Member Value Array Initializer, which consumes Member Value As Name, which consumes Member Value Pair, which consumes Member Value Pairs, which consumes Member Values, which consumes Method Body, which consumes boolean parameter of isNotAbstract Method Declaration, which consumes Method Header, which consumes Method Header Extended Dims, which consumes Method Header Name, which consumes Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Throws Clause, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Modifiers, which consumes Modifiers2, which consumes Name Array Type, which consumes Nested Method, which consumes Nested Type, which consumes Normal Annotation, which consumes One Dim Loop, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Block, which consumes Package Declaration, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Postfix Expression, which consumes Primary No New Array, which consumes Primary No New Array Array Type, which consumes Primary No New Array Name, which consumes Primary No New Array Name Super, which consumes Primary No New Array Name This, which consumes Primary No New Array Primitive Array Type, which consumes Primary No New Array Primitive Type, which consumes Primary No New Array This, which consumes Primary No New Array With Name, which consumes Primitive Array Type, which consumes Primitive Type, which consumes Push Left Brace, which consumes Push Real Modifiers, which consumes Push Modifiers, which consumes Push Position, which consumes Qualified Name, which consumes Reduce Imports, which consumes Reference Type, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Restore Diet, which consumes Right Paren, which consumes int parameter of act Rule, which consumes Simple Assert Statement, which consumes Single Member Annotation, which consumes Single Static Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break, which consumes Statement Break With Label, which consumes Statement Catch, which consumes Statement Continue, which consumes Statement Continue With Label, which consumes Statement Do, which consumes Statement Expression List, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Statement Label, which consumes Statement Return, which consumes Statement Switch, which consumes Statement Synchronized, which consumes Statement Throw, which consumes boolean parameter of withFinally Statement Try, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which consumes Switch Block, which consumes Switch Block Statement, which consumes Switch Block Statements, which consumes Switch Labels, which consumes int parameter of type Token, which consumes Type Argument, which consumes Type Argument List, which consumes Type Argument List1, which consumes Type Argument List2, which consumes Type Argument List3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Declarations, which consumes Type Import On Demand Declaration Name, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Type Parameter List, which consumes Type Parameter List1, which consumes Type Parameters, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which consumes Variable Declarators, which consumes Variable Initializers, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard1With Bounds, which consumes Wildcard2, which consumes Wildcard2With Bounds, which consumes Wildcard3, which consumes Wildcard3With Bounds, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds1Super, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds2Super, which consumes Wildcard Bounds3Extends, which consumes Wildcard Bounds3Super, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds Super, which consumes Wildcard With Bounds, which contains int parameter of sourceStart, int parameter of sourceEnd Comment, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which copies TypeReference parameter of typeRef, int parameter of dim Dims, which creates char[] parameter of fieldDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of localDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult Parse, which dispatches int parameter of length Declaration Into, which dispatches int parameter of length Declaration Into Enum Declaration, which ends int parameter of act Parse, which flushes int parameter of position Comments Defined Prior To, which gets First Token, which gets Java Doc Positions, which gets CompilationUnitDeclaration parameter of unit Method Bodies, which gets char[] parameter of comment, int[] parameter of index Next Character, which gets Expression parameter of exp Type Reference, which gets int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets Unspecified Reference, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Block Statements Or Catch Header, which goes For Class Body Declarations, which goes For Compilation Unit, which goes For Expression, which goes For Field Declaration, which goes For Generic Method Declaration, which goes For Headers, which goes For Import Declaration, which goes For Initializer, which goes For Method Body, which goes For Package Declaration, which goes For Type Declaration, which ignores Expression Assignment, which ignores Interface Declaration, which ignores boolean parameter of hasBody Invalid Constructor Declaration, which ignores Method Body, which initializes, which initializes Scanner, which jumps Over Method Body, which marks Enclosing Member With Local Type, which marks TypeDeclaration parameter of type Initializers With Local Type, which moves Recovery Checkpoint, which news Message Send, which news Message Send With Type Arguments, which optimizeds Concat Node Lists, which parses, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, boolean parameter of recordLineSeparator, which parses FieldDeclaration parameter of field, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, char[] parameter of initializationSource, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of start, int parameter of end, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Class Body Declarations, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Expression, which persists Line Separator Positions, which problems Reporter, which pushes Identifier, which pushes int parameter of flag Identifier, which pushes int parameter of pos On Ast Length Stack, which pushes ASTNode parameter of node On Ast Stack, which pushes Expression parameter of expr On Expression Stack, which pushes int parameter of pos On Expression Stack Length Stack, which pushes ASTNode parameter of node On Generics Stack, which pushes int parameter of pos On Generics Identifiers Length Stack, which pushes int parameter of pos On Generics Length Stack, which pushes int parameter of pos On Int Stack, which pushes int parameter of i On Real Block Stack, which recoveries Exit From Variable, which recoveries Token Check, which reports boolean parameter of isDietParse, int parameter of oldFirstToken Syntax Errors, which reports TypeDeclaration[] parameter of types Syntax Errors For Skipped Method, which resets Modifiers, which resets Stacks, which resumes After Recovery, which resumes On Syntax Error, which tos String, which updates Recovery State, which updates int parameter of variableDeclaratorsCounter Source Declaration Parts, which updates Expression parameter of exp Source Position.
Parser acts as a caretaker for memento S, which is inherited by, which asis int parameter of state, which base_checks int parameter of i, which builds String parameter of filename, List parameter of listToDump File, which builds String parameter of filename, String parameter of contents File For Name, which builds String parameter of file, char[] parameter of newLhs, char[] parameter of newNonTerminalIndex, String[] parameter of newName, String[] parameter of tokens File For Readable Name, which builds String parameter of file, int parameter of length, String[] parameter of tokens File For Compliance, which builds String parameter of filename, byte[] parameter of bytes File For Table, which builds String parameter of filename, char[] parameter of chars File For Table, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Byte For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Int For, which builds String parameter of filename, String parameter of tag, String[] parameter of tokens File Of Short For, which builds String parameter of dataFilename, String parameter of dataFilename2 Files From LPG, which in_symbols int parameter of state, which inits Tables, which nasis int parameter of state, which nts int parameter of state, int parameter of sym Action, which original_states int parameter of state, which reads String parameter of filename Byte Table, which reads String parameter of filename Name Table, which reads String parameter of filename Readable Name Table, which reads String parameter of filename Table, which reads String parameter of filename Long Table, which ts int parameter of state, int parameter of sym Action, which adjusts Interface Modifiers, which arrays int parameter of length Initializer, which blocks Real, which builds Initial Recovery State, which checks int parameter of flag And Set Modifiers, which checks Comment, which checks Non Externalized String Literal, which checks int parameter of declarationEnd Non NLSAfter Body End, which classes boolean parameter of alwaysQualified Instance Creation, which concats Expression Lists, which concats Generics Lists, which concats Node Lists, which consumes Additional Bound, which consumes Additional Bound1, which consumes Additional Bound List, which consumes Additional Bound List1, which consumes Allocation Header, which consumes Annotation As Modifier, which consumes Annotation Type Declaration, which consumes Annotation Type Declaration Header, which consumes Annotation Type Member Declaration Header, which consumes Annotation Type Member Header Extended Dims, which consumes Annotation Type Member Declaration, which consumes Annotation Type Member Declarations, which consumes Argument List, which consumes Arguments, which consumes boolean parameter of unspecifiedReference Array Access, which consumes Array Creation Expression With Initializer, which consumes Array Creation Expression Without Initializer, which consumes Array Creation Header, which consumes Array Initializer, which consumes Array Type With Type Arguments Name, which consumes Assert Statement, which consumes Assignment, which consumes int parameter of pos Assignment Operator, which consumes int parameter of op Binary Expression, which consumes int parameter of op Binary Expression With Name, which consumes Block, which consumes Block Statements, which consumes Case Label, which consumes Cast Expression LL1, which consumes Cast Expression With Generics Array, which consumes Cast Expression With Name Array, which consumes Cast Expression With Primitive Type, which computes TypeReference parameter of rightSide, int parameter of dim Qualified Generics From Right Side, which consumes Cast Expression With Qualified Generics Array, which consumes Catches, which consumes Catch Header, which consumes Class Body Declaration, which consumes Class Body Declarations, which consumes Class Body Declarationsopt, which consumes Class Bodyopt, which consumes Class Declaration, which consumes Class Header, which consumes Class Header Extends, which consumes Class Header Implements, which consumes Class Header Name1, which consumes Type Header Name With Type Parameters, which consumes Class Instance Creation Expression, which consumes Class Instance Creation Expression Name, which consumes Class Instance Creation Expression Qualified, which consumes Class Instance Creation Expression Qualified With Type Arguments, which consumes Class Instance Creation Expression With Type Arguments, which consumes Class Or Interface, which consumes Class Or Interface Name, which consumes Class Type Elt, which consumes Class Type List, which consumes Compilation Unit, which consumes int parameter of op Conditional Expression, which consumes int parameter of op Conditional Expression With Name, which consumes Constructor Block Statements, which consumes Constructor Body, which consumes Constructor Declaration, which consumes Constructor Header, which consumes Constructor Header Name, which consumes Constructor Header Name With Type Parameters, which consumes Default Label, which consumes Default Modifiers, which consumes Diet, which consumes Dims, which consumes Dim With Or With Out Expr, which consumes Dim With Or With Out Exprs, which consumes Empty Annotation Type Member Declarationsopt, which consumes Empty Argument Listopt, which consumes Empty Arguments, which consumes Empty Array Initializer, which consumes Empty Array Initializeropt, which consumes Empty Block Statementsopt, which consumes Empty Catchesopt, which consumes Empty Class Body Declarationsopt, which consumes Empty Class Member Declaration, which consumes Empty Default Value, which consumes Empty Dimsopt, which consumes Empty Enum Declarations, which consumes Empty Expression, which consumes Empty For Initopt, which consumes Empty For Updateopt, which consumes Empty Interface Member Declaration, which consumes Empty Interface Member Declarationsopt, which consumes Empty Internal Compilation Unit, which consumes Empty Member Value Pairsopt, which consumes Empty Member Value Array Initializer, which consumes Empty Statement, which consumes Empty Switch Block, which consumes Empty Type Declaration, which consumes boolean parameter of hasModifiers Enhanced For Statement Header, which consumes Enhanced For Statement, which consumes Enter Anonymous Class Body, which consumes Enter Anonymous Class Body Simple Name, which consumes Enter Compilation Unit, which consumes Enter Variable, which consumes Enum Body No Constants, which consumes Enum Body With Constants, which consumes Enum Constant Header, which consumes Enum Constant No Class Body, which consumes Enum Constants, which consumes Enum Constant With Class Body, which consumes Enum Declaration, which consumes Enum Declarations, which consumes Enum Header, which consumes int parameter of op Equality Expression, which consumes int parameter of op Equality Expression With Name, which consumes Exit Try Block, which consumes Exit Variable With Initialization, which consumes Exit Variable Without Initialization, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation, which consumes int parameter of flag, int parameter of recFlag Explicit Constructor Invocation With Type Arguments, which consumes Expression Statement, which consumes boolean parameter of isSuperAccess Field Access, which consumes Field Declaration, which consumes Force No Diet, which consumes For Init, which consumes boolean parameter of isVarArgs Formal Parameter, which consumes Formal Parameter List, which consumes Formal Parameter Listopt, which consumes Generic Type, which consumes Generic Type Array Type, which consumes Generic Type Name Array Type, which consumes Import Declaration, which consumes Import Declarations, which consumes Inside Cast Expression, which consumes Inside Cast Expression LL1, which consumes Inside Cast Expression With Qualified Generics, which consumes int parameter of op Instance Of Expression, which consumes int parameter of op Instance Of Expression With Name, which consumes Interface Declaration, which consumes Interface Header, which consumes Interface Header Extends, which consumes Interface Header Name1, which consumes Interface Member Declarations, which consumes Interface Member Declarationsopt, which consumes Interface Type, which consumes Interface Type List, which consumes Internal Compilation Unit, which consumes Internal Compilation Unit With Types, which consumes Invalid Constructor Declaration, which consumes Left Paren, which consumes Local Variable Declaration, which consumes Local Variable Declaration Statement, which consumes Marker Annotation, which consumes Member Value Array Initializer, which consumes Member Value As Name, which consumes Member Value Pair, which consumes Member Value Pairs, which consumes Member Values, which consumes Method Body, which consumes boolean parameter of isNotAbstract Method Declaration, which consumes Method Header, which consumes Method Header Extended Dims, which consumes Method Header Name, which consumes Method Header Name With Type Parameters, which consumes Method Header Right Paren, which consumes Method Header Throws Clause, which consumes Method Invocation Name, which consumes Method Invocation Name With Type Arguments, which consumes Method Invocation Primary, which consumes Method Invocation Primary With Type Arguments, which consumes Method Invocation Super, which consumes Method Invocation Super With Type Arguments, which consumes Modifiers, which consumes Modifiers2, which consumes Name Array Type, which consumes Nested Method, which consumes Nested Type, which consumes Normal Annotation, which consumes One Dim Loop, which consumes Only Synchronized, which consumes Only Type Arguments, which consumes Only Type Arguments For Cast Expression, which consumes Open Block, which consumes Package Declaration, which consumes Package Declaration Name, which consumes Package Declaration Name With Modifiers, which consumes Postfix Expression, which consumes Primary No New Array, which consumes Primary No New Array Array Type, which consumes Primary No New Array Name, which consumes Primary No New Array Name Super, which consumes Primary No New Array Name This, which consumes Primary No New Array Primitive Array Type, which consumes Primary No New Array Primitive Type, which consumes Primary No New Array This, which consumes Primary No New Array With Name, which consumes Primitive Array Type, which consumes Primitive Type, which consumes Push Left Brace, which consumes Push Real Modifiers, which consumes Push Modifiers, which consumes Push Position, which consumes Qualified Name, which consumes Reduce Imports, which consumes Reference Type, which consumes Reference Type1, which consumes Reference Type2, which consumes Reference Type3, which consumes Restore Diet, which consumes Right Paren, which consumes int parameter of act Rule, which consumes Simple Assert Statement, which consumes Single Member Annotation, which consumes Single Static Import Declaration Name, which consumes Single Type Import Declaration Name, which consumes Statement Break, which consumes Statement Break With Label, which consumes Statement Catch, which consumes Statement Continue, which consumes Statement Continue With Label, which consumes Statement Do, which consumes Statement Expression List, which consumes Statement For, which consumes Statement If No Else, which consumes Statement If With Else, which consumes Statement Label, which consumes Statement Return, which consumes Statement Switch, which consumes Statement Synchronized, which consumes Statement Throw, which consumes boolean parameter of withFinally Statement Try, which consumes Statement While, which consumes Static Import On Demand Declaration Name, which consumes Static Initializer, which consumes Static Only, which consumes Switch Block, which consumes Switch Block Statement, which consumes Switch Block Statements, which consumes Switch Labels, which consumes int parameter of type Token, which consumes Type Argument, which consumes Type Argument List, which consumes Type Argument List1, which consumes Type Argument List2, which consumes Type Argument List3, which consumes Type Argument Reference Type1, which consumes Type Argument Reference Type2, which consumes Type Arguments, which consumes Type Declarations, which consumes Type Import On Demand Declaration Name, which consumes Type Parameter Header, which consumes Type Parameter1, which consumes Type Parameter1With Extends, which consumes Type Parameter1With Extends And Bounds, which consumes Type Parameter List, which consumes Type Parameter List1, which consumes Type Parameters, which consumes Type Parameter With Extends, which consumes Type Parameter With Extends And Bounds, which consumes int parameter of op Unary Expression, which consumes int parameter of op, boolean parameter of post Unary Expression, which consumes Variable Declarators, which consumes Variable Initializers, which consumes Wildcard, which consumes Wildcard1, which consumes Wildcard1With Bounds, which consumes Wildcard2, which consumes Wildcard2With Bounds, which consumes Wildcard3, which consumes Wildcard3With Bounds, which consumes Wildcard Bounds1Extends, which consumes Wildcard Bounds1Super, which consumes Wildcard Bounds2Extends, which consumes Wildcard Bounds2Super, which consumes Wildcard Bounds3Extends, which consumes Wildcard Bounds3Super, which consumes Wildcard Bounds Extends, which consumes Wildcard Bounds Super, which consumes Wildcard With Bounds, which contains int parameter of sourceStart, int parameter of sourceEnd Comment, which converts ConstructorDeclaration parameter of c, CompilationResult parameter of compilationResult To Method Declaration, which copies TypeReference parameter of typeRef, int parameter of dim Dims, which creates char[] parameter of fieldDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Field Declaration, which creates char[] parameter of localDeclarationName, int parameter of sourceStart, int parameter of sourceEnd Local Declaration, which diets ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult Parse, which dispatches int parameter of length Declaration Into, which dispatches int parameter of length Declaration Into Enum Declaration, which ends int parameter of act Parse, which flushes int parameter of position Comments Defined Prior To, which gets First Token, which gets Java Doc Positions, which gets CompilationUnitDeclaration parameter of unit Method Bodies, which gets char[] parameter of comment, int[] parameter of index Next Character, which gets Expression parameter of exp Type Reference, which gets int parameter of dim Type Reference, which gets int parameter of dim, int parameter of identifierLength, int parameter of numberOfIdentifiers Type Reference For Generic Type, which gets Unspecified Reference, which gets Unspecified Reference Optimized, which goes For Block Statementsopt, which goes For Block Statements Or Catch Header, which goes For Class Body Declarations, which goes For Compilation Unit, which goes For Expression, which goes For Field Declaration, which goes For Generic Method Declaration, which goes For Headers, which goes For Import Declaration, which goes For Initializer, which goes For Method Body, which goes For Package Declaration, which goes For Type Declaration, which ignores Expression Assignment, which ignores Interface Declaration, which ignores boolean parameter of hasBody Invalid Constructor Declaration, which ignores Method Body, which initializes, which initializes Scanner, which jumps Over Method Body, which marks Enclosing Member With Local Type, which marks TypeDeclaration parameter of type Initializers With Local Type, which moves Recovery Checkpoint, which news Message Send, which news Message Send With Type Arguments, which optimizeds Concat Node Lists, which parses, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, which parses ConstructorDeclaration parameter of cd, CompilationUnitDeclaration parameter of unit, boolean parameter of recordLineSeparator, which parses FieldDeclaration parameter of field, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, char[] parameter of initializationSource, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, which parses ICompilationUnit parameter of sourceUnit, CompilationResult parameter of compilationResult, int parameter of start, int parameter of end, which parses Initializer parameter of initializer, TypeDeclaration parameter of type, CompilationUnitDeclaration parameter of unit, which parses MethodDeclaration parameter of md, CompilationUnitDeclaration parameter of unit, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Class Body Declarations, which parses char[] parameter of source, int parameter of offset, int parameter of length, CompilationUnitDeclaration parameter of unit Expression, which persists Line Separator Positions, which problems Reporter, which pushes Identifier, which pushes int parameter of flag Identifier, which pushes int parameter of pos On Ast Length Stack, which pushes ASTNode parameter of node On Ast Stack, which pushes Expression parameter of expr On Expression Stack, which pushes int parameter of pos On Expression Stack Length Stack, which pushes ASTNode parameter of node On Generics Stack, which pushes int parameter of pos On Generics Identifiers Length Stack, which pushes int parameter of pos On Generics Length Stack, which pushes int parameter of pos On Int Stack, which pushes int parameter of i On Real Block Stack, which recoveries Exit From Variable, which recoveries Token Check, which reports boolean parameter of isDietParse, int parameter of oldFirstToken Syntax Errors, which reports TypeDeclaration[] parameter of types Syntax Errors For Skipped Method, which resets Modifiers, which resets Stacks, which resumes After Recovery, which resumes On Syntax Error, which tos String, which updates Recovery State, which updates int parameter of variableDeclaratorsCounter Source Declaration Parts, which updates Expression parameter of exp Source Position.
