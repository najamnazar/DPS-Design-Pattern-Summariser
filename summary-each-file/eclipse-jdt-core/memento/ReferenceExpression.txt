ReferenceExpression acts as a caretaker for memento Binding, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as an originator for memento ExpressionContext.
ReferenceExpression acts as a caretaker for memento String, which is inherited by, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento R, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento C, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento S, which is inherited by, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento ExpressionContext, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento R, which is inherited by, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento Binding, which is inherited by, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento E, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento IErrorHandlingPolicy, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento E, which is inherited by, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento Map, which is inherited by, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento C, which is inherited by, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
ReferenceExpression acts as a caretaker for memento S, which initializes CompilationResult parameter of result, Expression parameter of expression, TypeReference[] parameter of optionalTypeArguments, char[] parameter of identifierOrNew, int parameter of sourceEndPosition, which copies, which shoulds Generate Secret Receiver Variable, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Implicit Lambda, which shoulds BlockScope parameter of currentScope Generate Implicit Lambda, which descriptors Encodes Intersection Type, which is TypeBinding parameter of parameter Intersection Type, which is Direct Code Gen Possible, which generates BlockScope parameter of currentScope, CodeStream parameter of codeStream, boolean parameter of valueRequired Code, which cleans Up, which manages BlockScope parameter of currentScope, FlowInfo parameter of flowInfo Synthetic Access If Necessary, which analyses BlockScope parameter of currentScope, FlowContext parameter of flowContext, FlowInfo parameter of flowInfo Code, which checks Potential Compatibility, which accepts MethodBinding[] parameter of methods Potentially Compatible Methods, which resolves BlockScope parameter of scope Type, which checks BlockScope parameter of scope Null Annotations, which descriptors Parameters As Argument Expressions, which contexts Has Syntax Error, which cacheds TypeBinding parameter of targetType Resolved Copy, which registers ParameterizedGenericMethodBinding parameter of method, InferenceContext18 parameter of context Inference Context, which gets ParameterizedMethodBinding parameter of method Inference Context, which resolves TypeBinding parameter of targetType, Scope parameter of scope, InferenceContext18 parameter of inferenceContext Expression Expecting, which is Constructor Reference, which is Exact Method Reference, which gets Exact Method, which is Method Reference, which is TypeBinding parameter of targetType, MethodBinding parameter of method Pertinent To Applicability, which generices Type Arguments, which freshes Scope parameter of scope Inference Context, which is Super Access, which is Type Access, which sets ReferenceBinding parameter of receiverType Actual Receiver Type, which sets int parameter of depth Depth, which sets int parameter of depth Field Index, which prints int parameter of tab, StringBuilder parameter of output Expression, which traverses ASTVisitor parameter of visitor, BlockScope parameter of blockScope, which creates TypeBinding[] parameter of p Pseudo Expressions, which is TypeBinding parameter of targetType, Scope parameter of scope Potentially Compatible With, which gets Scope parameter of scope, boolean parameter of isConstructorRef, TypeBinding[] parameter of parameters Compile Time Declaration, which is TypeBinding parameter of targetType, Scope parameter of scope Compatible With, which ses TypeBinding parameter of s, TypeBinding parameter of t, Scope parameter of scope Is More Specific, which gets Method Binding, which is Array Constructor Reference.
