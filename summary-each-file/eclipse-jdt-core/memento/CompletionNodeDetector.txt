CompletionNodeDetector acts as a caretaker for memento E, which visits ASTNode parameter of node Node, which finds CompilationUnitDeclaration parameter of unit, ASTNode parameter of searchFor Any, which contains Completion Node, which gets Completion Node Parent, which gets Completion Node Outer Expression, which gets Completion Enclosing Node, which ends AllocationExpression parameter of allocationExpression, BlockScope parameter of scope Visit, which ends AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope Visit, which ends ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope Visit, which ends ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ArrayReference parameter of arrayReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope Visit, which ends Assignment parameter of assignment, BlockScope parameter of scope Visit, which ends BinaryExpression parameter of binaryExpression, BlockScope parameter of scope Visit, which ends CastExpression parameter of castExpression, BlockScope parameter of scope Visit, which ends CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope Visit, which ends ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope Visit, which ends EqualExpression parameter of equalExpression, BlockScope parameter of scope Visit, which ends ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope Visit, which ends FieldReference parameter of fieldReference, BlockScope parameter of scope Visit, which ends GuardedPattern parameter of guardedPattern, BlockScope parameter of scope Visit, which ends IfStatement parameter of ifStatement, BlockScope parameter of scope Visit, which ends InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope Visit, which ends LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope Visit, which ends MessageSend parameter of messageSend, BlockScope parameter of scope Visit, which ends OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope Visit, which ends PostfixExpression parameter of postfixExpression, BlockScope parameter of scope Visit, which ends PrefixExpression parameter of prefixExpression, BlockScope parameter of scope Visit, which ends QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope Visit, which ends QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope Visit, which ends QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope Visit, which ends QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope Visit, which ends ReferenceExpression parameter of referenceExpression, BlockScope parameter of blockScope Visit, which ends ReturnStatement parameter of returnStatement, BlockScope parameter of scope Visit, which ends SingleNameReference parameter of singleNameReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope Visit, which ends SuperReference parameter of superReference, BlockScope parameter of scope Visit, which ends SwitchStatement parameter of switchStatement, BlockScope parameter of scope Visit, which ends SwitchExpression parameter of switchExpression, BlockScope parameter of scope Visit, which ends ThisReference parameter of thisReference, BlockScope parameter of scope Visit, which ends UnaryExpression parameter of unaryExpression, BlockScope parameter of scope Visit, which ends MemberValuePair parameter of pair, BlockScope parameter of scope Visit, which ends MemberValuePair parameter of pair, CompilationUnitScope parameter of scope Visit, which ends LambdaExpression parameter of lambda, BlockScope parameter of scope Visit, which ends MethodDeclaration parameter of methodDeclaration, ClassScope parameter of scope Visit, which ends ConstructorDeclaration parameter of constructorDeclaration, ClassScope parameter of scope Visit, which ends WhileStatement parameter of whileStatement, BlockScope parameter of scope Visit, which visits AllocationExpression parameter of allocationExpression, BlockScope parameter of scope, which visits AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope, which visits ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope, which visits ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope, which visits ArrayReference parameter of arrayReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope, which visits Assignment parameter of assignment, BlockScope parameter of scope, which visits BinaryExpression parameter of binaryExpression, BlockScope parameter of scope, which visits CastExpression parameter of castExpression, BlockScope parameter of scope, which visits CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope, which visits ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope, which visits EqualExpression parameter of equalExpression, BlockScope parameter of scope, which visits ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope, which visits FieldReference parameter of fieldReference, BlockScope parameter of scope, which visits GuardedPattern parameter of guardedPattern, BlockScope parameter of scope, which visits IfStatement parameter of ifStatement, BlockScope parameter of scope, which visits InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope, which visits LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope, which visits MessageSend parameter of messageSend, BlockScope parameter of scope, which visits OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope, which visits PostfixExpression parameter of postfixExpression, BlockScope parameter of scope, which visits PrefixExpression parameter of prefixExpression, BlockScope parameter of scope, which visits QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope, which visits QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope, which visits QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope, which visits QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope, which visits ReferenceExpression parameter of referenceExpression, BlockScope parameter of blockScope, which visits ReturnStatement parameter of returnStatement, BlockScope parameter of scope, which visits SingleNameReference parameter of singleNameReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope, which visits StringLiteral parameter of stringLiteral, BlockScope parameter of scope, which visits SuperReference parameter of superReference, BlockScope parameter of scope, which visits SwitchStatement parameter of switchStatement, BlockScope parameter of blockScope, which visits SwitchExpression parameter of switchExpression, BlockScope parameter of blockScope, which visits ThisReference parameter of thisReference, BlockScope parameter of scope, which visits UnaryExpression parameter of unaryExpression, BlockScope parameter of scope, which visits MemberValuePair parameter of pair, BlockScope parameter of scope, which visits MemberValuePair parameter of pair, CompilationUnitScope parameter of scope, which ends ASTNode parameter of astNode Visit, which is SwitchStatement parameter of statement On Completing On Case Label, which checks ASTNode parameter of astNode Update Outer, which is ASTNode parameter of node Potentially Poly Expression, which visits ASTNode parameter of astNode.
CompletionNodeDetector acts as a caretaker for memento S, which visits ASTNode parameter of node Node, which finds CompilationUnitDeclaration parameter of unit, ASTNode parameter of searchFor Any, which contains Completion Node, which gets Completion Node Parent, which gets Completion Node Outer Expression, which gets Completion Enclosing Node, which ends AllocationExpression parameter of allocationExpression, BlockScope parameter of scope Visit, which ends AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope Visit, which ends ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope Visit, which ends ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ArrayReference parameter of arrayReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope Visit, which ends ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope Visit, which ends Assignment parameter of assignment, BlockScope parameter of scope Visit, which ends BinaryExpression parameter of binaryExpression, BlockScope parameter of scope Visit, which ends CastExpression parameter of castExpression, BlockScope parameter of scope Visit, which ends CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope Visit, which ends ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope Visit, which ends EqualExpression parameter of equalExpression, BlockScope parameter of scope Visit, which ends ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope Visit, which ends FieldReference parameter of fieldReference, BlockScope parameter of scope Visit, which ends GuardedPattern parameter of guardedPattern, BlockScope parameter of scope Visit, which ends IfStatement parameter of ifStatement, BlockScope parameter of scope Visit, which ends InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope Visit, which ends LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope Visit, which ends MessageSend parameter of messageSend, BlockScope parameter of scope Visit, which ends OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope Visit, which ends ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope Visit, which ends PostfixExpression parameter of postfixExpression, BlockScope parameter of scope Visit, which ends PrefixExpression parameter of prefixExpression, BlockScope parameter of scope Visit, which ends QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope Visit, which ends QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope Visit, which ends QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope Visit, which ends QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope Visit, which ends QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope Visit, which ends ReferenceExpression parameter of referenceExpression, BlockScope parameter of blockScope Visit, which ends ReturnStatement parameter of returnStatement, BlockScope parameter of scope Visit, which ends SingleNameReference parameter of singleNameReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope Visit, which ends SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope Visit, which ends SuperReference parameter of superReference, BlockScope parameter of scope Visit, which ends SwitchStatement parameter of switchStatement, BlockScope parameter of scope Visit, which ends SwitchExpression parameter of switchExpression, BlockScope parameter of scope Visit, which ends ThisReference parameter of thisReference, BlockScope parameter of scope Visit, which ends UnaryExpression parameter of unaryExpression, BlockScope parameter of scope Visit, which ends MemberValuePair parameter of pair, BlockScope parameter of scope Visit, which ends MemberValuePair parameter of pair, CompilationUnitScope parameter of scope Visit, which ends LambdaExpression parameter of lambda, BlockScope parameter of scope Visit, which ends MethodDeclaration parameter of methodDeclaration, ClassScope parameter of scope Visit, which ends ConstructorDeclaration parameter of constructorDeclaration, ClassScope parameter of scope Visit, which ends WhileStatement parameter of whileStatement, BlockScope parameter of scope Visit, which visits AllocationExpression parameter of allocationExpression, BlockScope parameter of scope, which visits AND_AND_Expression parameter of and_and_Expression, BlockScope parameter of scope, which visits ArrayAllocationExpression parameter of arrayAllocationExpression, BlockScope parameter of scope, which visits ArrayInitializer parameter of arrayInitializer, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, BlockScope parameter of scope, which visits ArrayQualifiedTypeReference parameter of arrayQualifiedTypeReference, ClassScope parameter of scope, which visits ArrayReference parameter of arrayReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, BlockScope parameter of scope, which visits ArrayTypeReference parameter of arrayTypeReference, ClassScope parameter of scope, which visits Assignment parameter of assignment, BlockScope parameter of scope, which visits BinaryExpression parameter of binaryExpression, BlockScope parameter of scope, which visits CastExpression parameter of castExpression, BlockScope parameter of scope, which visits CompoundAssignment parameter of compoundAssignment, BlockScope parameter of scope, which visits ConditionalExpression parameter of conditionalExpression, BlockScope parameter of scope, which visits EqualExpression parameter of equalExpression, BlockScope parameter of scope, which visits ExplicitConstructorCall parameter of explicitConstructor, BlockScope parameter of scope, which visits FieldReference parameter of fieldReference, BlockScope parameter of scope, which visits GuardedPattern parameter of guardedPattern, BlockScope parameter of scope, which visits IfStatement parameter of ifStatement, BlockScope parameter of scope, which visits InstanceOfExpression parameter of instanceOfExpression, BlockScope parameter of scope, which visits LocalDeclaration parameter of localDeclaration, BlockScope parameter of scope, which visits MessageSend parameter of messageSend, BlockScope parameter of scope, which visits OR_OR_Expression parameter of or_or_Expression, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, BlockScope parameter of scope, which visits ParameterizedQualifiedTypeReference parameter of parameterizedQualifiedTypeReference, ClassScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, BlockScope parameter of scope, which visits ParameterizedSingleTypeReference parameter of parameterizedSingleTypeReference, ClassScope parameter of scope, which visits PostfixExpression parameter of postfixExpression, BlockScope parameter of scope, which visits PrefixExpression parameter of prefixExpression, BlockScope parameter of scope, which visits QualifiedAllocationExpression parameter of qualifiedAllocationExpression, BlockScope parameter of scope, which visits QualifiedNameReference parameter of qualifiedNameReference, BlockScope parameter of scope, which visits QualifiedSuperReference parameter of qualifiedSuperReference, BlockScope parameter of scope, which visits QualifiedThisReference parameter of qualifiedThisReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, BlockScope parameter of scope, which visits QualifiedTypeReference parameter of qualifiedTypeReference, ClassScope parameter of scope, which visits ReferenceExpression parameter of referenceExpression, BlockScope parameter of blockScope, which visits ReturnStatement parameter of returnStatement, BlockScope parameter of scope, which visits SingleNameReference parameter of singleNameReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, BlockScope parameter of scope, which visits SingleTypeReference parameter of singleTypeReference, ClassScope parameter of scope, which visits StringLiteral parameter of stringLiteral, BlockScope parameter of scope, which visits SuperReference parameter of superReference, BlockScope parameter of scope, which visits SwitchStatement parameter of switchStatement, BlockScope parameter of blockScope, which visits SwitchExpression parameter of switchExpression, BlockScope parameter of blockScope, which visits ThisReference parameter of thisReference, BlockScope parameter of scope, which visits UnaryExpression parameter of unaryExpression, BlockScope parameter of scope, which visits MemberValuePair parameter of pair, BlockScope parameter of scope, which visits MemberValuePair parameter of pair, CompilationUnitScope parameter of scope, which ends ASTNode parameter of astNode Visit, which is SwitchStatement parameter of statement On Completing On Case Label, which checks ASTNode parameter of astNode Update Outer, which is ASTNode parameter of node Potentially Poly Expression, which visits ASTNode parameter of astNode.
